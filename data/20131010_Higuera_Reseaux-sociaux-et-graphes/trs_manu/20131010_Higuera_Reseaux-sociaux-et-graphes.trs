<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Trans SYSTEM "trans-14.dtd">
<Trans audio_filename="20131010" version="4" version_date="170606">
<Speakers>
<Speaker id="spk1" name="Locuteur 1" type="male" dialect="native" accent="" scope="global"/>
</Speakers>
<Episode>
<Section type="report" startTime="0" endTime="3896.064">
<Turn startTime="0" endTime="0.940">
<Sync time="0"/>

</Turn>
<Turn startTime="0.940" speaker="spk1" endTime="1588.786" mode="planned" fidelity="high" channel="studio">
<Sync time="0.940"/>
donc titre euh titre de du cours d'aujourd'hui : "et l'utilisateur, là-dedans ?"
<Sync time="6.350"/>
ça veut dire quoi ? ça veut dire que vous avez vu jusqu'à présent une série de cours sur l'algorithmique
<Sync time="11.170"/>
et sur ce module, une deuxième partie des cours va concerner
<Sync time="14.790"/>
beh euh à quoi sert l'informatique ? des champs d'application
<Sync time="19.910"/>
il y a quelques personnes qui sont informaticiens parce que et seulement informaticiens,
<Sync time="24.183"/>
il y a beaucoup plus de personnes qui sont informaticiens pour quelque chose : informaticiens pour la biologie,
<Sync time="29.075"/>
informaticiens pour les sciences humaines, informaticiens pour la gestion
<Sync time="32.890"/>
et donc tous ces aspects des choses, eh ben on va essayer de vous les présenter dans une série
<Sync time="37.348"/>
de cours-conférences comme celle-ci, ainsi que des td ou des tp qui vont avec.
<Sync time="43.698"/>
*alors euh comme euh peut-être mes collègues, j'utilise ce petit euh euh logo, ce petit dessin pour de temps en temps vous indiquer
<Sync time="51.672"/>
que vous pouvez vous arrêter, prendre des notes
<Sync time="54.043"/>
et que le reste du temps, beh les transparents vont être sur "ma doc", vous allez pouvoir les reprendre, la vidéo peut-être aussi
<Sync time="60.140"/>
et donc euh et donc ah ça c'est embêtant
<Sync time="63.061"/>
et donc beh euh par contre vous pouvez noter ça, de temps en temps ça permet d'avoir des des endroits sur lesquels on peut avancer
<Sync time="72.141"/>
alors premier paradoxe sur l'informatique :
<Sync time="74.64"/>
c'est que l'informatique, plus il y en a, moins on la voit
<Sync time="78.716"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>

<Sync time="79.301"/>
ça, c'est un ordinateur euh eniac des années euh mille neuf cents enfin de mille neuf cent quarante euh six je crois
<Sync time="86.279"/>
un des tout premiers ordinateurs, donc qui prenait un volume absolument énorme : c'était clair, il y avait de l'informatique.
<Sync time="91.850"/>
aujourd'hui bon il y a quelques ordinateurs allumés dans l() cette salle, mais en fait il y a de l'informatique un peu partout : tous ceux qui ont un smartphone
<Sync time="98.055"/>
ont de l'informatique sur eux
<Sync time="99.771"/>
et bon quand vous prenez une voiture, c'est encore de l'informatique que vous allez trouver.
<Sync time="103.827"/>
vous avez de () vous avez en ce moment p() plusieurs réseaux qui sont en train de passer entre vos têtes
<Sync time="108.97"/>
en train de faire passer de l'information
<Sync time="111.170"/>
tout ça c'est euh ben de l'informatique autour de nous : on parle d'informatique ubiquitaire.
<Sync time="117.750"/>
alors de quelle informatique ? parce que cette informatique du smartphone, cette informatique de la voiture,
<Sync time="122.32"/>
est-ce que c'est la même que celle que vous êtes en train de faire en algorithmique ? bah si
<Sync time="126.233"/>
il y a des programmes
<Sync time="127.440"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 ces programmes sont conçus et sont développés, simplement c'est pas le même langage de programmation
<Sync time="132.539"/>
pour pouvoir travailler beh sur d'autres outils que sur l'outil de base. alors le fait que
<Sync time="137.424"/>
pour l'instant on travaille sur ordinateur, c'est bien parce que il faut commencer quelque part.
<Sync time="140.860"/>
demain ou après-demain, quand ce sera enseigné dès l'école ou dès le collège,
<Sync time="144.858"/>
bah ce sera différent : on ira à l'université et on pourra commencer peut-être des choses tout de suite plus excitantes
<Sync time="149.725"/>
mais on a la même informatique
<Sync time="151.510"/>
euh sur cette informatique 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 ubiquitaire que sur l'informatique
<Sync time="156.640"/>
qui est celle de ce module.
<Sync time="158.231"/>
vous avez les concepts qui sont ceux de la machine, ben ça reste une machine
<Sync time="161.732"/>
avec quelques différences, mais c'est () ça reste euh les mêmes idées :
<Sync time="165.298"/>
du codage, du langage et de l'algorithmique.
<Sync time="169.145"/>
l'utilisateur
<Sync time="170.726"/>
bah en fait ce qui change le plus, c'est que vous, quand vous êtes en train de concevoir un algorithme, un programme en ce moment
<Sync time="176.427"/>
vous le concevez pour vous-mêmes.
<Sync time="178.344"/>
vous écrivez votre programme, et finalement il y a que vous qui regardez le résultat.
<Sync time="182.896"/>
dans l'informatique ()
<Sync time="184.730"/>
je peux difficilement parler plus fort () dans l'informatique telle qu'on la connaît,
<Sync time="188.940"/>
tout ce qu'on peut avoir tel qu'on l'utilise aujourd'hui,
<Sync time="191.498"/>
cette informatique est euh ah c'est bien ça
<Sync time="196.553"/>
cette informatique
<Sync time="198.210"/>
est euh
<Sync time="200.236"/>
plus elle disparaît, plus on met le l'utilisateur au centre de de la boucle.
<Sync time="204.187"/>
c'est-à-dire que ben quand vous développez une application pour un smartphone,
<Sync time="207.767"/>
vous *n'êtes pas en train de la développer uniquement pour vous, vous êtes en train de la dif() euh de la
<Sync time="211.845"/>
préparer pour la partager,
<Sync time="213.411"/>
et à partir de ce moment-là eh ben vous avez quand même beh des choses
<Sync time="217.423"/>
plus compliquées, plus intéressantes à faire. donc
<Sync time="219.499"/>
importance de plus en plus grande de l'utilisateur.
<Sync time="223.682"/>
alors quels sont les exemples, et on les *utilisera pas tous ici,
<Sync time="227.760"/>
de cette informatique qui peut être utile pour faire de l'adaptation ?
<Sync time="232.091"/>
beh euh modélisation de l'utilisateur :
<Sync time="235.004"/>
quand on crée un programme, de plus en plus on décide qu'on sait quelque chose sur l'utilisateur.
<Sync time="240.532"/>
c'est-à-dire que par exemple euh
<Sync time="242.538"/>
un moteur de recherche va emmagasiner des informations sur
<Sync time="246.920"/>
vos navigations précédentes pour connaître vos voeux futurs
<Sync time="250.381"/>
et pour pouvoir utiliser ça dans la restitution des choix qu'elle voudra donner un peu plus tard.
<Sync time="255.966"/>
par exemple, en modélisation de l'utilisateur, quand vous allez sur un site web
<Sync time="259.770"/>
et que c'est une agence de voyages, cette agence de voyages va essayer de détecter
<Sync time="263.482"/>
le plus possible quels sont vos goûts, qu'est-ce que vous êtes venus chercher de façon
<Sync time="268.03"/>
à beh optimiser beh votre parcours là, et en fait euh ne nous leurrons pas :
<Sync time="271.963"/>
afin de vous faire acheter le plus possible les choses.
<Sync time="275.190"/>
donc modéliser l'utilisateur
<Sync time="277.093"/>
à travers sa navigation, à travers son comportement de façon à s'adapter à lui.
<Sync time="282.306"/>
deuxième aspect où l'utilisateur a une importance considérable, c'est tout ce qui est intelligence artificielle.
<Sync time="287.968"/>
l'intelligence artificielle
<Sync time="289.529"/>
continue à utiliser cette idée que notre cerveau réussit encore aujourd'hui à faire des choses
<Sync time="295.128"/>
que la machine ne réussit pas à faire.
<Sync time="297.223"/>
donc beh essayons de
<Sync time="299.354"/>
faire en sorte que l'utilisateur puisse
<Sync time="302.030"/>
euh pardon que la machine puisse beh se copier
<Sync time="305.161"/>
ou euh
<Sync time="306.043"/>
faire comme euh un utilisateur particulier.
<Sync time="309.766"/>
et enfin, tout ce qui est coopération entre homme et machine pour résoudre des problèmes :
<Sync time="313.496"/>
il y a toutes sortes de problèmes aujourd'hui
<Sync time="315.482"/>
où l'homme tout seul n'y arrive pas, la machine non plus
<Sync time="318.247"/>
et donc on se retrouve en train de faire
<Sync time="320.296"/>
collaborer la machine et l'homme pour pouvoir avancer.
<Sync time="323.650"/>
voilà, donc ça ce sont des euh des éléments
<Sync time="326.050"/>
de () sur lesquels la k() les liens homme et informatique sont essentiels,
<Sync time="330.064"/>
et un lien encore plus essentiel, et c'est celui dont on va parler sur ce cours,
<Sync time="333.874"/>
ce sont les réseaux sociaux.
<Sync time="336.971"/>
alors les réseaux sociaux, c'est quoi ? beh euh il y en a un que vous connaissez
<Sync time="340.76"/>
et qui est tout simplement facebook, qui a dépassé aujourd'hui semble-t-il, *ça reste à prouver, le milliard d'utilisateurs
<Sync time="347.870"/>
c'est euh une fortune théorique absolument considérable, c'est-à-dire que dans () en deux mille douze, on a valorisé
<Sync time="355.100"/>
facebook à cent quatre milliards
<Sync time="357.475"/>
de dollars,
<Sync time="358.786"/>
donc c'est c'est absolument pas rien, enfin de dollars ou d'euros, j'ai j'ai pas le chiffre exact.
<Sync time="363.458"/>
euh
<Sync time="364.627"/>
et euh bon ce sont en plus beh des gens qui se connectent à ça tous les jours.
<Sync time="369.247"/>
il y a cinq, six ans, quand je faisais un cours comme celui-ci, je demandais à mon amphi de L1 :
<Sync time="374.032"/>
qui d'entre vous est sur facebook ?
<Sync time="375.790"/>
et timidement, il y avait cinq ou six personnes qui levaient la main.
<Sync time="379.353"/>
je pose même pas la question aujourd'hui, c'est stupide.
<Sync time="382.000"/>
d'accord ?
<Sync time="382.534"/>
mais en quelques années beh euh quelque chose qui n'existait pas, qui n'était pas une réalité, qui existait mais qui
<Sync time="388.216"/>
finalement concernait quelques happy few est devenu ben un phénomène mondial.
<Sync time="392.618"/>
alors c'est pas le seul réseau social
<Sync time="394.359"/>
et on a d'autres réseaux sociaux que vous pouvez connaître : myspace
<Sync time="398.130"/>
alors myspace, ce qui est intéressant dans l'exemple de myspace, c'est que c'était un rival il y a très peu de temps
<Sync time="403.619"/>
avec deux cent trente millions de personnes abonnées
<Sync time="406.678"/>
en euh
<Sync time="408.07"/>
en deux mille huit, donc c'était un vrai rival de facebook.
<Sync time="411.270"/>
qu'est-ce qui se passe ? eh ben un peu plus tard, en euh deux mille onze,
<Sync time="415.598"/>
Rupert Murdoch eh bah qui n'est quand même pas le dernier des idiots, c'est un grand magnat de la presse qui a gagné plein d'argent avec plein de choses
<Sync time="421.904"/>
bah se retrouve en train de revendre myspace
<Sync time="424.749"/>
pour trente-cinq millions de dollars, alors que il avait payé seize fois plus pour ça.
<Sync time="430.265"/>
donc ça, ça montre quand même aussi que ce sont des phénomènes que qui sont pas si évidents, il suffit pas
<Sync time="435.601"/>
de faire quelque chose pour que ça marche :
<Sync time="437.666"/>
la même bonne idée va décoller d'un côté et va beh ne pas marcher de l'autre.
<Sync time="442.968"/>
deux réseaux sociaux qui sont un peu plus importants,
<Sync time="445.549"/>
en particulier pour vous, sont euh viadeo et linkedin.
<Sync time="448.969"/>
ils sont plus importants parce que ce sont des réseaux sociaux à buts professionnels
<Sync time="453.094"/>
c'est l'endroit typique où beh quand on devient professionnel, on va s'afficher, mettre son cv, avoir des connexions avec d'autres personnes
<Sync time="460.896"/>
et c'est là aussi que d'autres personnes vont venir aujourd'hui recruter, se rendre compte que quelqu'un a changé de boulot, et cetera.
<Sync time="467.684"/>
il y a des étudiants qui sont inscrits là-dessus ;
<Sync time="470.184"/>
je dis pas que en L1 il faut le faire.
<Sync time="472.204"/>
alors il y a une concurrences entre les deux, linkedin est plus international, viadeo est v() est français.
<Sync time="478.400"/>
et enfin le le dernier réseau social euh à mentionner sur cette liste, c'est twitter
<Sync time="484.023"/>
qui euh v() la semaine dernière je crois, il y avait un article qui expliquait que c'était devenu le réseau social favori des adolescents américains,
<Sync time="491.016"/>
mais je suis pas sûr que ce soit le cas encore en france.
<Sync time="493.719"/>
là je veux bien faire un sondage : qui est sur twitter ?
<Sync time="500.721"/>
donc c'est clairement pas encore le cas ici, hein. c'est euh ça beh mais s() aux états-unis ça a dépassé
<Sync time="506.237"/>
donc facebook en tant que réseau social de de référence.
<Sync time="510.166"/>
alors d'autres exemples
<Sync time="511.769"/>
alors des exemples moins informatiques : l'onu est un réseau social
<Sync time="515.15"/>
toute société dans laquelle on étudie les relations entre les individus.
<Sync time="519.777"/>
hier, j'ai vu un réseau social passionnant qui était le réseau social
<Sync time="523.840"/>
des pays de l'eurovision,
<Sync time="525.356"/>
et dans lequel quelqu'un avait fait les calculs de qui vote pour qui indépendamment de quelles sont
<Sync time="531.221"/>

<Event desc="conv" type="noise" extent="begin"/>
les chansons qui sont présentées
<Event desc="conv" type="noise" extent="end"/>

<Sync time="533.391"/>
chut
<Sync time="534.687"/>
s'il vous plaît
<Sync time="536.768"/>
bon je () dernière interruption pour faire la police
<Sync time="539.809"/>
monsieur, le deuxième au troisième rang du bas, vous pouvez sortir s'il () oui, vous.
<Sync time="543.43"/>
vous pouvez sortir, s'il vous plaît ?
<Sync time="555.243"/>
merci
<Sync time="557.231"/>
bien
<Sync time="558.288"/>
donc on fera un montage hein pour que ça n'apparaisse pas, mais euh mais on continue. donc toute société, à partir du moment où on commence à avoir des relations entre des entités ou des individus,
<Sync time="567.418"/>
et que ces relations nous intéressent pour analyser toutes sortes de choses,
<Sync time="570.302"/>
c'est intéressant.
<Sync time="571.522"/>
typiquement, vous avez un site web () alors s() on revient sur le web, le site web d'ebay sur lequel on commence à se demander qui a acheté à qui
<Sync time="578.304"/>
et euh quelles sont beh les bonnes affaires que les gens ont faites,
<Sync time="581.907"/>
vous êtes en train d'analyser un réseau 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 social.
<Sync time="584.580"/>
les utilisateurs d'amazon sont très utilisés pour pouvoir savoir qui recommande quel livre ou qui a acheté quel livre,
<Sync time="590.749"/>
et qui pourrait donc servir de recommandation pour tel autre acheteur ;
<Sync time="594.743"/>
donc c'est encore un réseau social.
<Sync time="596.390"/>
les participants à un mooc
<Sync time="598.873"/>
alors mooc, vous voyez ce que c'est ? alors c'est prononcé "moque" à la télé en ce moment
<Sync time="602.32"/>
donc les moocs, c'est un peu ce qu'on est en train de faire là
<Sync time="604.68"/>
ce sont euh des cours qui sont diffusables vers l'extérieur
<Sync time="608.364"/>
pour que, un peu partout dans le monde, les gens puissent
<Sync time="611.000"/>
beh se connecter et interagir entre eux pour pouvoir beh en fait euh apprendre ensemble.
<Sync time="615.969"/>
donc dès que vous avez un groupe
<Sync time="617.33"/>
d'individus, vous avez un réseau social.
<Sync time="619.620"/>
en fait, le terme "réseau social" vient de bien avant facebook
<Sync time="622.784"/>
ça existait du temps des sociologues, je crois que ben de()
<Sync time="626.128"/>
dès le début du vingtième siècle, les sociologues s'intéressaient à ces phénomènes d'interaction.
<Sync time="631.854"/>
une des idées de base derrière ces questions de réseaux sociaux, c'est ce qu'on appelle l'effet du petit monde.
<Sync time="636.576"/>
alors l'effet du petit monde, c'est une hypothèse qui a été démarrée dans
<Sync time="640.748"/>
vers dix-neuf cent vingt
<Sync time="642.348"/>
et qui était basée de () l'idée, c'était la suivante : c'était
<Sync time="645.442"/>
entre deux personnes prises au hasard dans le monde,
<Sync time="648.002"/>
il y a au plus cinq autres personnes, c'est-à-dire en fait une chaîne de longueur six.
<Sync time="652.994"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 donc c'était une hypothèse, vous vous doutez que dans les années vingt, les années trente,
<Sync time="656.474"/>
c'était pas très facile
<Sync time="658.045"/>
de même imaginer un protocole expérimental qui allait permettre de voir si c'était vrai ou pas.
<Sync time="662.750"/>
alors sur les années soixante-dix, il y a quelqu'un qui a bah fait effectivement euh l'expérience
<Sync time="668.532"/>
et qui est arrivé euh un m() un monsieur américain qui s'appelait milgram et qui a fait l'expérience aux états-unis.
<Sync time="673.511"/>
alors de façon aléatoire, il a tiré au sort de façon aléatoire des personnes et puis il a calculé quelle était effectivement la distance
<Sync time="679.731"/>
et il s'est avéré que effectivement
<Sync time="681.356"/>
euh alors on le connaît pas, le chemin qui nous sépare d'un monsieur en chine, mais il existe comme ça des chemins de longueur
<Sync time="687.35"/>
six
<Sync time="688.069"/>
typiquement, qui vont nous séparer des gens.
<Sync time="691.813"/>
euh
<Sync time="692.860"/>
alors voilà c'étaient les six degrés de séparation, expérience de mille neuf cent soixante-sept du psychologue stanley mi() milgram.
<Sync time="699.26"/>
donc là il y a eu une expérience de faite ;
<Sync time="700.979"/>
bien entendu sur internet c'est encore plus facile si vous avez
<Sync time="704.424"/>
droit aux données de microsoft ou aux données de facebook, ben vous pouvez faire l'expérience ; vous pouvez tout simplement
<Sync time="710.111"/>
faire des calculs
<Sync time="711.267"/>
euh de toutes les relations qu'il y a
<Sync time="713.408"/>
et je crois que aujourd'hui la distance euh moyenne entre deux individus sur facebook est de quatre virgule quatre ;
<Sync time="720.878"/>
donc c'est la moyenne, c'est pas la maximale.
<Sync time="722.949"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 donc c'est quand même des distances très courtes
<Sync time="725.324"/>
*c'est-à-dire ce monde bah s'est rapproché,
<Sync time="727.622"/>
c'est pas comme si on était beh des petites euh trucs très cloisonnés les uns les autres
<Sync time="731.748"/>
finalement, beh les gens sont euh pas très loin les uns des autres.
<Sync time="735.273"/>
quel est l'intérêt de ce genre de théorie ?
<Sync time="737.165"/>
bah ça donne la vitesse de propagation d'une information,
<Sync time="740.774"/>
qu'elle soit positive ou *négative. ça donne la v() 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 vitesse à laquelle
<Sync time="744.602"/>
vous euh pouvez agir pour faire passer
<Sync time="747.071"/>
beh euh de la publicité ou pour faire acheter euh une marque, pour faire voter quelqu'un, et cetera et cetera.
<Sync time="753.788"/>
donc source internet : euh cinq à sept degrés de séparation seraient suffisants
<Sync time="758.165"/>
euh pour connecter n'importe quelle personne à une autre par un inter() internet. donc il y a personne qui a la carte internet du monde entier
<Sync time="763.884"/>
donc on peut pas non plus dire ça pour sûr, mais c'est à peu près ce que tout le monde dit aujourd'hui.
<Sync time="770.538"/>
alors pendant qu'on est sur les réseaux *sociaux, je vais parler de deux autres réseaux sociaux pour ben un peu () c'est pas faire de la pub mais pour essayer de
<Sync time="776.632"/>
de voir comment ça marche.
<Sync time="778.07"/>
donc la base de facebook, c'est "les amis de mes amis sont mes amis",
<Sync time="782.352"/>
donc il y en a un qui en gros dit "les ennemis de mes ennemis sont mes amis".
<Sync time="787.932"/>
et donc euh voilà vous pouvez aller vous inscrire sur hatebook et euh
<Sync time="791.433"/>
même inscrire que 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 les gens que vous aimez haïr
<Sync time="794.809"/>
et je suis inscrit, donc vous pouvez me dire "j'ai pas aimé votre cours, bah je suis votre ennemi".
<Sync time="798.763"/>
et plus j'ai d'ennemis, et plus j'ai des points et tout ce qu'on veut, c'est la même chose
<Sync time="802.415"/>
c'est assez amusant, d'ailleurs.
<Sync time="804.785"/>
euh deuxième deuxième exemple
<Sync time="807.364"/>
qui euh alors là, je suis plus dubitatif
<Sync time="810.287"/>
donc c'est quelque chose qui s'appelle ma résidence point fr
<Sync time="813.491"/>
l'idée est la suivante : c'est de coller sur une entité géographique, un quartier
<Sync time="818.07"/>
un immeuble, un réseau social.
<Sync time="820.800"/>
*alors
<Sync time="821.503"/>
moi j'avoue que je suis pas impressionné ; l'idée c'est vous prenez () vous rentrez dans votre immeuble et le voisin à qui vous parlez pas,
<Sync time="827.535"/>
beh dès que vous vous remettez derrière votre ordinateur, vous allez commencer à lui envoyer des messages.
<Sync time="831.624"/>
c'est un peu bizarre 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 mais c'est c'est cette idée-là.
<Sync time="834.852"/>
alors en fait, c'est en train de se développer donc pendant deux ans j'ai euh j'ai présenté ce slide en train de dire "ça n'a aucune raison de marcher"
<Sync time="841.503"/>
et le résultat, c'est que c'est en train de marcher.
<Sync time="843.811"/>
enfin pas le résultat de mes interventions,
<Sync time="845.553"/>
le résultat de leur acharnement, c'est que ma résidence fr point fr fait partie des acteurs aujourd'hui de l'internet
<Sync time="851.226"/>
alors c'est pas au niveau de l'immeuble, c'est au niveau du quartier
<Sync time="853.586"/>
pour permettre aux gens de se proposer des services de quartier les uns aux autres.
<Sync time="859.668"/>
ok, donc qu'est-ce qu'il faut essayer de retenir sur réseaux sociaux et internet ? beh le plus important, c'est que c'est pas facebook qui a inventé les réseaux sociaux ;
<Sync time="866.561"/>
c'est que ils existaient depuis bien longtemps
<Sync time="869.39"/>
et que ils aient été () ils ont été objet d'étude des sociologues en particulier.
<Sync time="873.761"/>
euh qui simplement pendant un moment n'avaient pas les () peut-être les ces outils de () informatiques pour pouvoir les analyser.
<Sync time="880.945"/>
à retenir cette question de l'effet du petit monde,
<Sync time="883.727"/>
qui euh ne va pas de soi
<Sync time="886.071"/>
d'accord ? ça saute pas aux yeux que les distances entre les individus sont si courtes
<Sync time="890.149"/>
et que l'internet et des objets comme facebook ont encore raccourci les distances.
<Sync time="895.334"/>
et ce que ça signifie est important, ça veut dire que
<Sync time="898.804"/>
finalement vous allez placer positionner dans quelques endroits astucieux sur facebook certaines informations,
<Sync time="904.953"/>
vous devriez pouvoir obtenir des phénomènes de propagation qui sont utilisés, qui sont analysés d'ailleurs par ailleurs.
<Sync time="912.254"/>
bon, rajouter quoi ? que les enjeux sont sociétaux et économiques, colossaux.
<Sync time="916.365"/>
si, il y a un truc que j'ai pas dit : tout à l'heure, j'ai dit que il y avait euh cent quatre milliards, la valeur de facebook.
<Sync time="923.069"/>
à votre avis, c'est quoi les cent quatre milliards de valorisation ?
<Sync time="926.696"/>
cent quatre milliards d'euros, c'est beaucoup 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 ou de dollars même, on va dire de dollars.
<Sync time="930.886"/>
les machines, ils en ont beaucoup
<Sync time="932.277"/>
d'accord, c'est clair, ils ont quand même pas mal de machines
<Sync time="934.278"/>
bon ils en ont pas pour cent quatre milliards de machines.
<Sync time="937.186"/>
ok ?
<Sync time="938.342"/>
euh le les logiciels et les technologies, ils en ont beaucoup ; ils sont en train de passer leur temps à racheter des start-up
<Sync time="945.048"/>
pour pouvoir se doter des dernières euh
<Sync time="947.283"/>
technologies
<Sync time="948.283"/>
*d'accord ? pour pouvoir aller plus vite.
<Sync time="950.33"/>
mais c'est quoi, leur réelle richesse ?
<Sync time="953.315"/>
c'est vous.
<Sync time="955.038"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>

<Sync time="956.038"/>
c'est cet accès assez considérable qu'ils ont à plein de gens
<Sync time="959.476"/>
sur lesquels ils sont capables de faire des analyses que personne d'autre n'est capable de faire,
<Sync time="964.039"/>
sur lesquels ils peuvent tester des idées, tester des produits
<Sync time="967.681"/>
voir beh comment fonctionne le la circulation de l'information ;
<Sync time="971.796"/>
en fait, c'est le trafic.
<Sync time="973.681"/>
et dans ce cas-ci, c'est un *trafic plutôt captif
<Sync time="976.728"/>
qui est euh qui est la grande richesse d'une entreprise comme celle-là.
<Sync time="980.967"/>
sur les enjeux sociétaux,
<Sync time="982.983"/>
bah signaler simplement que euh sur euh
<Sync time="987.361"/>
les élections les dernières élections américaines,
<Sync time="990.017"/>
ah c'est au niveau de
<Sync time="992.862"/>
la l'internet que ça s'est passé, que ça s'est gagné encore une fois.
<Sync time="997.493"/>
donc il y a un chercheur, que je connais, qui euh
<Sync time="1000.462"/>
était euh pilote de ce qu'on appelle la cellule fouille de données
<Sync time="1004.697"/>
de obama.
<Sync time="1006.322"/>
et euh son but, la question qu'on lui avait posée, c'est : débrouille-toi
<Sync time="1010.479"/>
pour me dire
<Sync time="1012.508"/>
où il faut que j'envoie
<Sync time="1014.571"/>
les euh les voitures
<Sync time="1016.759"/>
le jour de l'élection.
<Sync time="1018.609"/>
d'accord ? *c'est-à-dire que dans des pays euh anglo-saxons, c'est () on a l'habitude d'aller aider les électeurs à aller voter ;
<Sync time="1024.171"/>
on leur envoie une voiture.
<Sync time="1025.374"/>
*d'accord ? bon euh vous envoyez une voiture quand c'est intéressant.
<Sync time="1028.188"/>
et donc lui devait détecter, alors il fallait pas qu'il détecte les purs démocrates, ça c'était pas intéressant parce que de toute façon ils allaient voter.
<Sync time="1034.22"/>
les purs républicains, c'était pas intéressant parce que aller j() envoyer une voiture pour qu'ils votent contre eux c'est pas intéressant non plus.
<Sync time="1039.742"/>
euh les gens qui votent jamais, je vous rappelle qu'aux états-unis il y a un f() très fort d'abstention, c'est pas très intéressant non plus.
<Sync time="1044.901"/>
donc il fallait voter ces gens qui sont indécis, mais un petit peu plus démocrates que républicains.
<Sync time="1050.408"/>
et comment vous faites ça ? beh euh vous allez faire de la fouille de toutes les données que vous allez trouver sur internet, vous allez acheter des données donc il y avait aucune tricherie ; il a ()
<Sync time="1058.330"/>
c'était très légal
<Sync time="1059.596"/>
donc on achète des données à google, on achète des données à facebook,
<Sync time="1063.36"/>
et derrière ça on fait des recoupements. alors il a pas raison à tous les coups, je suis sûr qu'il a aussi emmené ()
<Sync time="1067.884"/>
les voitures des démocrates ont emmené un certain nombre de personnes qui ont voté pour les républicains
<Sync time="1071.666"/>
mais ça se passe à très peu de pourcent près, ce genre d'élections ;
<Sync time="1075.432"/>
assez pour faire basculer les élections.
<Sync time="1078.761"/>
euh
<Sync time="1079.495"/>
alors je vais m'avancer en train de dire "on n'en est pas encore là en france"
<Sync time="1082.715"/>
je sais pas.
<Sync time="1084.310"/>
ok
<Sync time="1085.403"/>
alors bon alors ça c'était la partie on va dire presque culture générale, maintenant essayons de faire le lien entre ça, ce qu'on vient de voir
<Sync time="1091.936"/>
et l'informatique et l'informatique de L1, c'est-à-dire ce qu'on est en train de faire en L1.
<Sync time="1095.922"/>
ben l'idée, c'est la suivante : c'est que un réseau social, c'est un ensemble d'*individus,
<Sync time="1101.162"/>
et ces individus ils sont reliés entre eux
<Sync time="1103.790"/>
bah on va utiliser un objet mathématique qui s'appelle un graphe dans lequel beh les individus vont être les sommets
<Sync time="1109.903"/>
et on va avoir des relations entre les *individus, et qui vont être des arcs ou des arêtes.
<Sync time="1113.949"/>
alors je commence par illustrer
<Sync time="1115.449"/>
avec quelques images de réseaux sociaux que j'ai trouvées à droite et à gauche :
<Sync time="1119.653"/>
on voit les individus () non on voit rien du tout parce que l'image est vraiment pas terrible
<Sync time="1123.122"/>
donc il y a des prénoms sur les petits post-it et puis par contre
<Sync time="1126.171"/>
ensuite on a des espèces de flèches de l'un vers l'autre qui indiquent quelles sont les relations qu'on a entre les individus.
<Sync time="1132.949"/>
encore un réseau social auquel on voit à la fois plus et et moins ;
<Sync time="1137.137"/>
celui-là contient des petites photos d'individus
<Sync time="1139.606"/>
et là encore une fois, eh ben
<Sync time="1141.545"/>
c'est organisé donc on se doute qu'il y a des logiciels compliqués pour réussir à dessiner ce genre de graphes pour qu'on y voie quelque chose,
<Sync time="1147.620"/>
donc on voit que il y a des personnes qui seraient des personnes ressources, qui 
<Sync time="1150.793"/>
ben servent de points de passage pour aller atteindre les autres.
<Sync time="1153.341"/>
et donc voici encore un réseau social dessiné comme un graphe.
<Sync time="1157.795"/>
en voici un encore plus simple,
<Sync time="1159.795"/>
euh plus petit et donc avec des individus, et reliés entre eux
<Sync time="1164.812"/>
par des euh des arêtes.
<Sync time="1168.069"/>
alors euh quel est l'intérêt de définir ça comme un graphe ? ben l'intérêt c'est que une fois que j'ai un graphe, que j'ai un objet informatique
<Sync time="1174.806"/>
beh je peux simuler des choses là-dessus, *c'est-à-dire je peux me poser la question
<Sync time="1178.683"/>
ben j'ai un modèle de transmission d'informations ben je vais essayer
<Sync time="1182.309"/>
de l'inj() d'injecter dans mon réseau social une information et de voir combien de temps
<Sync time="1186.175"/>
ça met
<Sync time="1186.848"/>
pour aller atteindre beh un peu tout le monde.
<Sync time="1189.333"/>
ou bien je vais euh rentrer deux informations *contradictoires, je veux faire des simulations
<Sync time="1193.950"/>
pour essayer de voir ce qui peut se passer.
<Sync time="1196.06"/>
donc il y a des chercheurs,
<Sync time="1197.647"/>
euh des analystes qui vont à la f() à la fois faire de l'informatique et
<Sync time="1201.32"/>
du s() euh du réseau social
<Sync time="1203.461"/>
pour pouvoir beh utiliser la simulation comme outil.
<Sync time="1207.526"/>
donc le modèle mathématique, c'est ce qu'on appelle des graphes
<Sync time="1210.972"/>
euh les avantages graphiques,
<Sync time="1213.472"/>
*c'est-à-dire graphe () dans graphe, il y a deux choses : il y a un objet mathématique et puis graphe, on sent que ça veut dire graphique, *c'est-à-dire que j'y vois quelque chose.
<Sync time="1220.438"/>
alors sur un graphe avec un milliard de sommets comme facebook, on aurait beaucoup de mal à y voir quelque chose. on sent que beh
<Sync time="1226.597"/>
l'argument euh de vente ne va pas être "si si, je vois ce qui se passe".
<Sync time="1230.850"/>
par contre, sur les petits graphes, s() s() c'était utile, on arrivait à se représenter les choses.
<Sync time="1236.363"/>
et euh donc un outil qui est important, qui est un outil qui est utilisé dans d'autres sciences hein, les biologistes vont aussi utiliser la simulation,
<Sync time="1243.69"/>
les physiciens vont utiliser la simulation pour éviter
<Sync time="1246.566"/>
de faire des euh des expérimentations ; on construit un modèle, typiquement un modèle mathématique,
<Sync time="1252.532"/>
et ensuite on fait une simulation.
<Sync time="1254.807"/>
un des trois prix nobel de chimie qui a été donné hier bah l'a() l'apport numéro un
<Sync time="1259.534"/>
du chimiste en question, ça a été justement
<Sync time="1261.831"/>
de ben trouver des outils permettant de faire de la simulation et de la modélisation
<Sync time="1266.667"/>
informatiques de la chimie
<Sync time="1268.793"/>
euh dès les années soixante-dix.
<Sync time="1273.120"/>
donc euh modèles mathématiques, les graphes
<Sync time="1278.490"/>
ça marche ?
<Sync time="1280.023"/>
allez, je tente le passage
<Sync time="1282.568"/>
tac
<Sync time="1283.680"/>
alors pour donner un exemple beh deux petits deux p() deux petites questions sur les graphes :
<Sync time="1287.780"/>
première question, c'est la suivante : vous imaginez qu'il y a un réseau social, celui que vous voulez, dans lequel il y a un certain nombre d'individus
<Sync time="1293.829"/>
qui sont les petits points orange
<Sync time="1295.314"/>
et puis il y a x et y qui sont tous les deux en train de se poser la question "tiens, je j'intégrerais bien
<Sync time="1300.248"/>
le réseau social".
<Sync time="1301.889"/>
alors la différence entre x et y l() alors les deux ont trois amis qui font partie du réseau social.
<Sync time="1306.170"/>
la différence, c'est que () alors trois amis qui sont en train de leur dire "si si, viens, il faut que tu joignes le réseau social"
<Sync time="1312.704"/>
euh x
<Sync time="1313.735"/>
les trois amis ne se connaissent pas, ou en tout cas ne sont pas amis entre eux.
<Sync time="1318.584"/>
*ok ?
<Sync time="1319.147"/>
y, au contraire, les trois amis qu'il a c'est euh les trois points, on les voit, connectés entre eux donc
<Sync time="1324.805"/>
ils sont euh bah ils sont plutôt amis entre eux.
<Sync time="1327.665"/>
la question posée, c'est : qui parmi x et y a le plus de chances
<Sync time="1331.931"/>
de rejoindre le réseau social ?
<Sync time="1333.825"/>
l'intérêt de la chose, vous imaginez, c'est de pouvoir cibler
<Sync time="1337.018"/>
euh des campagnes, de pouvoir beh utiliser les réseaux d'amis pour vous faire rentrer ou autre chose.
<Sync time="1342.000"/>
*alors il y a deux théories qui s'affrontent :
<Sync time="1344.826"/>
la théorie de l'information, c'est de dire que quand vous avez trois informations données par des sources indépendantes
<Sync time="1350.327"/>
les trois informations bah vous leur faites plus confiance
<Sync time="1353.467"/>
parce que vous dites : c'est vraiment trois personnes *indépendantes
<Sync time="1356.311"/>
qui me disent "faut que tu joignes le réseau social", donc c'est plutôt une bonne idée
<Sync time="1359.452"/>
de le joindre. donc vous faites plutôt confiance parce que
<Sync time="1361.875"/>
il y a indépendance des avis.
<Sync time="1363.595"/>
la deuxième théorie, c'est celle du capital social.
<Sync time="1366.408"/>
c'est plutôt ben on va plutôt aller rejoindre les copains là où ils sont, et donc si j'ai déjà un groupe de trois
<Sync time="1371.253"/>
ben on va faire un groupe de quatre, c'est-à-dire je vais les rejoindre donc
<Sync time="1374.019"/>
le fait qu'ils soient connectés entre eux, c'est un plus.
<Sync time="1376.839"/>
alors question : à votre avis, qui c'est qui gagne ? théorie de l'information ou capital social ?
<Sync time="1381.850"/>
qui pense théorie de l'information ?
<Sync time="1385.07"/>
qui pense capital social ?
<Sync time="1387.899"/>
et donc c'est le capital social.
<Sync time="1389.658"/>
alors c'est le *capital *social c'est c'est
<Sync time="1391.143"/>
c'était pas si évident que ça, hein. je je je veux bien croire que ()
<Sync time="1394.28"/>
je me souviens plus ce que j'ai pensé à l'époque.
<Sync time="1395.933"/>
ce qui m'intéresse, c'est l'aspect informatique, c'est-à-dire c'est le genre de théorie
<Sync time="1399.505"/>
euh comment vous faites pour valider ça ?
<Sync time="1402.004"/>
on peut difficilement valider cette théorie en train de dire : je vais prendre mon club de judo
<Sync time="1406.348"/>
et puis je vais regarder les gens qui arrivent, et puis on va () et enfin on va jamais y arriver si je fais ça.
<Sync time="1411.207"/>
par contre, si vous avez
<Sync time="1412.676"/>
un vrai réseau informatique
<Sync time="1414.817"/>
comme notre ami facebook, beh vous pouvez analyser exactement les personnes qui rentrent
<Sync time="1419.881"/>
au moment où elles rentrent, avec qui elles deviennent amies et donc euh savoir si elles deviennent *amies plutôt avec des gens qui étaient
<Sync time="1425.844"/>
amies entre elles ou plutôt avec des gens euh qui étaient différentes.
<Sync time="1429.096"/>
donc vous pouvez
<Sync time="1430.159"/>
utiliser grâce à l'informatique, grâce à la modélisation, vous pouvez beh arriver à faire ça.
<Sync time="1435.075"/>
le graphe, je ne commente pas : c'est exactement l'expérimentation dont je parle, c'est un graphe qui va
<Sync time="1441.020"/>
beh mesurer beh de combien enfin le combien d'amis communs
<Sync time="1446.272"/>
est le mieux pour avoir les meilleures chances de rentrer.
<Sync time="1450.249"/>
ok donc euh ben dire que la théorie des graphes,
<Sync time="1453.673"/>
parce que derrière on analyse les graphes hein, il y a la notion de "les amis étaient déjà amis entre eux", ça s'appelle euh que on dira que les gens étaient connectés, on parlera
<Sync time="1462.239"/>
en théorie des graphes de clique
<Sync time="1463.973"/>
pour pour dire ça.
<Sync time="1465.338"/>
donc il existe une théorie, qui est pas une théorie d'informaticien au départ mais une théorie de mathématicien, qui s'appelle la théorie des graphes
<Sync time="1471.123"/>
et sur laquelle on peut analyser,
<Sync time="1473.123"/>
comme on vient de le faire là,
<Sync time="1474.498"/>
beh des phénomènes sociaux de comportement
<Sync time="1477.812"/>
parce que beh on a des données que on n'aurait peut-être pas eues avant pour pouvoir y arriver.
<Sync time="1482.960"/>
alors il y a plein de concepts que je définis pas pour l'instant, on en verra quelques-uns en td.
<Sync time="1486.852"/>
la connexité, donc un graphe connexe c'est
<Sync time="1489.805"/>
on peut aller toujours d'une personne à une autre. une question intéressante : est-ce que le graphe de l'internet est connexe ? peut-être intérêt, quand même
<Sync time="1495.768"/>
sinon ça voudrait dire qu'il y a des parties de l'internet qui seraient inaccessibles.
<Sync time="1499.387"/>
des chemins ; on se doute que un chemin dans un graphe, c'est le fait de pouvoir naviguer d'un point à un autre.
<Sync time="1504.42"/>
des cliques ; *alors une clique, c'est quoi ? c'est un groupe de personnes qui est vraiment très fermé entre eux donc euh tout le monde est copain les uns avec les autres
<Sync time="1510.562"/>
ben c'est ça une clique. tout ça, ça se définit
<Sync time="1513.410"/>
voilà.
<Sync time="1514.16"/>
donc vous pouvez mesurer le flux, vous pouvez mesurer une coupe, c'est-à-dire euh qu'est-ce qui se passe si je coupe le graphe quelque part,
<Sync time="1520.271"/>
quelle est la plus petite coupe, *c'est-à-dire le
<Sync time="1522.117"/>
plus petit nombre d'endroits où je vais couper un graphe. là il y a des théories très intéressantes, c'est
<Sync time="1527.113"/>
quand il y a une séparation d'un club justement en deux sous-clubs, d'un parti de () politique en deux partis,
<Sync time="1532.360"/>
beh vous pouvez analyser à travers la théorie des graphes
<Sync time="1535.079"/>
et de dire si c'était prévisible, parce que là il y avait vraiment un endroit
<Sync time="1538.252"/>
où entre cette partie-là et cette partie-là, il y avait très peu de connexions.
<Sync time="1542.001"/>
donc on peut retrouver des outils mathématiques,
<Sync time="1544.705"/>
avec ensuite de l'informatique pour analyser des phénomènes sociaux.
<Sync time="1551.058"/>
les graphes
<Sync time="1552.117"/>
donc les graphes, c'est des objets comme ça, j'en ai dessiné deux :
<Sync time="1555.123"/>
qu'est-ce qu'on voit comme différences ?
<Sync time="1557.007"/>
ben on en voit un qui a ce qu'on appelle des étiquettes, c'est-à-dire je
<Sync time="1560.859"/>
j'ai mis a b c d e f g pour euh donner des noms aux sommets ;
<Sync time="1564.684"/>
l'autre, je les ai pas mis. bon
<Sync time="1566.713"/>
on parlera d'étiqueté / non étiqueté, c'est pas très important.
<Sync time="1569.704"/>
plus intéressant, c'est () il y en a qui ont des flèches, et d'autres pas.
<Sync time="1573.185"/>
donc celui de gauche il a des flèches, celui de droite ce sont ce qu'on appelle des arêtes.
<Sync time="1578.077"/>
c'est quoi la différence ? bah pensez réseau social,
<Sync time="1580.993"/>
pensez à facebook : sur facebook,
<Sync time="1583.284"/>
je suis ton ami si tu es mon ami.
<Sync time="1585.860"/>
vous utiliseriez quel type de graphe pour faire ça ?
</Turn>
<Turn startTime="1588.786" endTime="1589.671">
<Sync time="1588.786"/>

<Event desc="conv" type="noise" extent="instantaneous"/>

</Turn>
<Turn startTime="1589.671" speaker="spk1" endTime="1748.622" mode="planned" fidelity="high" channel="studio">
<Sync time="1589.671"/>
celui de droite.
<Sync time="1591.210"/>
pensez à twitter : twitter, on devient le follower, le suiveur de quelqu'un
<Sync time="1595.108"/>
qui n'a aucune raison d'être votre propre follower ;
<Sync time="1597.660"/>
celui de gauche.
<Sync time="1598.705"/>
donc on a des outils là encore différents selon les cas.
<Sync time="1603.160"/>
allez, celui-là on le note :
<Sync time="1605.294"/>
un graphe non orienté () donc non orienté, ça veut dire il y a pas de flèches
<Sync time="1609.78"/>
v et e, donc dire que il y a deux composantes, les sommets les arêtes,
<Sync time="1614.079"/>
et comme en toutes choses les anglais ou les britanniques ou les américains ont un petit peu dominé,
<Sync time="1619.569"/>
bah on utilise v et e pour vertex et edge,
<Sync time="1622.908"/>
pour parler d'un ensemble de sommets et un ensemble d'arêtes.
<Sync time="1626.591"/>
il peut y avoir des boucles
<Sync time="1628.904"/>
donc on peut être ami de soi-même ;
<Sync time="1631.041"/>
on peut décider qu'on n'a pas le droit ou qu'on a le droit, mais enfin la la possibilité existe, ensuite on décide si on les prend ou pas,
<Sync time="1637.460"/>
et donc on dit qu'une arête n'est pas orientée, c'est-à-dire que ben
<Sync time="1641.148"/>
c'est finalement un ensemble de deux sommets : il y a une arête entre x et y
<Sync time="1645.408"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 mais pas de x vers y.
<Sync time="1647.315"/>
donc ça, pour le cas non orienté,
<Sync time="1649.221"/>
on a
<Sync time="1650.286"/>
euh quelque chose qui va
<Sync time="1652.148"/>
dans les deux sens.
<Sync time="1661.489"/>
alors les graphes, j'ai dit que c'*était des objets de mathématicien.
<Sync time="1664.275"/>
on va les retrouver souvent étudiés, beaucoup plus, en licence euh d'informatique euh en licence de mathématiques ;
<Sync time="1671.448"/>
ce sont ce qu'on appelle des mathématiques discrètes.
<Sync time="1674.000"/>
alors discrètes ça veut t() pas dire qu'on les voit pas souvent ;
<Sync time="1676.91"/>
ça veut dire que elles se basent sur le monde re() discret qui est, pour simplifier, grand n.
<Sync time="1681.932"/>
et alors par rapport à un monde continu, qui serait plutôt euh
<Sync time="1685.381"/>
beh euh grand r.
<Sync time="1691.880"/>
d'accord ? une arête n'est pas orientée, c'est donc un ensemble à deux sommets a b.
<Sync time="1696.063"/>
on va utiliser un langage, alors comme en toutes choses il y a un langage précis pour parler des choses
<Sync time="1700.998"/>
ça c'est important par rapport aux questions d'ambiguïté que vous avez déjà vues en algorithmique,
<Sync time="1705.220"/>
*c'est-à-dire euh un informaticien,
<Sync time="1707.433"/>
en particulier parce qu'il va devoir à un moment donné causer avec la machine
<Sync time="1710.707"/>
et en tout cas être certain que euh euh que les choses soient bien comprises, va toujours éviter l'ambiguïté.
<Sync time="1716.813"/>
donc on a un vocabulaire pour euh pour les choses.
<Sync time="1721.010"/>
un exemple, un petit dessin : ben on voit ici une arête a b, on voit que a et b sont adjacents,
<Sync time="1726.429"/>
on voit aussi qu'il y a une boucle
<Sync time="1728.58"/>
et que il y a un sommet étiqueté a.
<Sync time="1730.730"/>
j'avance
<Sync time="1732.228"/>
alors la deuxième variante, c'est le graphe orienté. c'est presque le même que tout à l'heure, sauf que c'est un v a plutôt que un v e,
<Sync time="1739.924"/>
que v est un ensemble de sommets comme tout à l'heure
<Sync time="1742.671"/>
et a est un ensemble d'arcs.
<Sync time="1745.382"/>
un arc est orienté et a une origine et une extrémité.
<Sync time="1748.107"/>
oui ?
</Turn>
<Turn startTime="1748.622" endTime="1750.425">
<Sync time="1748.622"/>

<Event desc="conv" type="noise" extent="instantaneous"/>

</Turn>
<Turn speaker="spk1" mode="spontaneous" fidelity="high" channel="studio" startTime="1750.425" endTime="1751.571">
<Sync time="1750.425"/>

<Event desc="conv" type="noise" extent="begin"/>
ouais
<Sync time="1751.223"/>
ouais
<Event desc="conv" type="noise" extent="end"/>

</Turn>
<Turn mode="spontaneous" fidelity="high" startTime="1751.571" endTime="1752.941">
<Sync time="1751.571"/>

<Event desc="conv" type="noise" extent="instantaneous"/>

</Turn>
<Turn startTime="1752.941" speaker="spk1" endTime="1917.984" mode="planned" fidelity="high" channel="studio">
<Sync time="1752.941"/>
sur() on on se doute que sur facebook, vous avez pas le droit de vous déclarer comme ami
<Sync time="1756.759"/>
mais on peut imaginer, et on verra un cas tout à l'heure, où
<Sync time="1759.434"/>
où on peut tout à fait euh dire bah en fait je dois me considérer parmi les gens à qui euh
<Sync time="1764.918"/>
pour autre chose ; faut pas que penser à celui-là.
<Sync time="1768.580"/>
donc un arc euh une boucle ça va être ça : un arc est orienté, il a une origine, il a une extrémité.
<Sync time="1780.190"/>
sur le dessin, ben voilà une boucle, voilà un sommet, voilà un arc a b
<Sync time="1784.574"/>
on note ce qui se passe entre f et d ;
<Sync time="1787.500"/>
d'accord ? on peut avoir le cas où une euh euh un arc qui va
<Sync time="1791.310"/>
de f à d et un arc qui va à d à f.
<Sync time="1794.141"/>
c'est le cas où on aurait une relation réciproque, de réciprocité
<Sync time="1798.869"/>
qu'on n'est pas obligé d'avoir dans un euh graphe euh
<Sync time="1802.266"/>
euh orienté. dans un graphe orienté, si on avait de la réciprocité partout,
<Sync time="1806.195"/>
ben on arriverait à la conclusion qu'il vaudrait mieux utiliser directement un graphe euh non orienté.
<Sync time="1813.060"/>
alors un deuxième problème *intéressant sur les graphes
<Sync time="1815.939"/>
ou amusant, c'est pour montrer que c'est des choses pas simples,
<Sync time="1818.212"/>
c'est ce qu'on appelle isomorphisme de graphe.
<Sync time="1820.910"/>
alors iso-, -morphisme, iso-, je sais pas vous avez peut-être vu ça dans des cours de maths quelque part
<Sync time="1825.679"/>
p() euh isomorphisme, c'est tout *simplement des bijections qui conservent la structure.
<Sync time="1829.756"/>
en fait, ça veut dire ben v() même si je dessine le graphe d'une manière différente, c'est le même graphe.
<Sync time="1834.503"/>
est-ce que tout le monde est d'accord que les deux graphes qui sont dessinés là sont le même graphe ?
<Sync time="1838.756"/>
tout ce que j'ai fait, c'est () j'ai pris le sommet
<Sync time="1841.147"/>
et je l'ai déplacé au milieu.
<Sync time="1843.018"/>
dans la définition de graphe, il y avait pas la situation, la localisation géométrique des sommets ;
<Sync time="1848.383"/>
il y avait simplement le fait qu'il y avait des sommets et qu'il y avait des arêtes.
<Sync time="1851.335"/>
donc ça, c'est deux fois le même graphe.
<Sync time="1853.392"/>
donc ça veut dire que c'est compliqué, que quelque part, selon la façon
<Sync time="1856.916"/>
de euh dessiner le graphe, on peut avoir l'impression d'avoir deux graphes différents alors que c'est le même.
<Sync time="1862.693"/>
exemple de compliqué,
<Sync time="1864.874"/>
c'est celui-là :
<Sync time="1866.784"/>
est-ce que ces deux graphes sont isomorphes ? question
<Sync time="1873.160"/>
*alors c'est compliqué : dire qu'ils sont isomorphes, ça veut dire que vous êtes capables de remplacer chaque point d'interrogation
<Sync time="1878.682"/>
par euh une lettre ;
<Sync time="1881.286"/>
dire qu'ils sont pas isomorphes, ça veut dire que vous avez testé toutes les possibilités et il y en a aucune qui marche.
<Sync time="1886.924"/>
toutes les possibilités, ça fait beaucoup, même pour un ordinateur.
<Sync time="1891.066"/>
donc ça veut dire qu'on va peut-être de f() essayer de faire autrement ; on va essayer de trouver une propriété qui serait vraie sur un graphe et pas sur l'autre.
<Sync time="1901.640"/>
quelqu'un voit une ()
<Sync time="1902.971"/>
quelque chose ?
<Sync time="1909.100"/>
*est-ce qu'il y a des avis ?
<Sync time="1912.540"/>
c'est compliqué, il est pas très gros ce graphe hein, il a que euh six sommets
<Sync time="1917.051"/>
ouais ?
</Turn>
<Turn startTime="1917.984" endTime="1924.259">
<Sync time="1917.984"/>

<Event desc="conv" type="noise" extent="instantaneous"/>

</Turn>
<Turn startTime="1924.259" speaker="spk1" endTime="1933.25" mode="planned" fidelity="high" channel="studio">
<Sync time="1924.259"/>
d'accord
<Sync time="1924.854"/>
donc il a () j'ai compris. donc i() votre collègue nous dit qu'il y a un triangle dans le deuxième graphe
<Sync time="1930.150"/>
et si on regarde, il y a aucun triangle dans le premier, 
<Event desc="conv" type="noise" extent="begin"/>
c'est ça ?
<Event desc="conv" type="noise" extent="end"/>

</Turn>
<Turn mode="planned" fidelity="high" startTime="1933.25" endTime="1934.065">
<Sync time="1933.250"/>

<Event desc="conv" type="noise" extent="instantaneous"/>

</Turn>
<Turn speaker="spk1" mode="planned" fidelity="high" startTime="1934.065" endTime="3896.064">
<Sync time="1934.065"/>
alors le triangle, il est pas étiqueté mais il correspond aux positions du d c f
<Sync time="1938.035"/>
exact ?
<Sync time="1939.079"/>
or on se doute que la notion de triangle, elle est indépendante de la géométrie
<Sync time="1943.217"/>
donc même si vous changez, vous allez s() trouver un triangle plus ou moins grand, mais le triangle il va rester.
<Sync time="1947.318"/>
conclusion : c'est que ces deux graphe ne sont pas isomorphes.
<Sync time="1951.784"/>
un peu plus grand, il y en a huit
<Sync time="1953.646"/>
de sommets
<Sync time="1955.758"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 laisser chercher longtemps.
<Sync time="1959.760"/>
pendant que vous cherchez ()
<Sync time="1961.009"/>
donc dire que le problème en question,
<Sync time="1963.160"/>
pourquoi est-ce que je le montre ? c'est pour dire ouh là là, c'est un problème difficile pour lequel
<Sync time="1967.293"/>
même sur des petites tailles, on est un petit peu en peine.
<Sync time="1970.21"/>
bah en fait, ça fait partie de ces problèmes pour lesquels les informaticiens n'ont pas de bon algorithme
<Sync time="1975.258"/>
donc le côté "l'informatique, ça sait tout faire", ben la réponse c'est non.
<Sync time="1978.980"/>
et là aussi il y a des domaines pour les informaticiens, qui est de trouver
<Sync time="1982.565"/>
des algorithmes approximés, on dit des heuristiques,
<Sync time="1985.326"/>
pour essayer de résoudre ces problèmes-là.
<Sync time="1987.458"/>
mais il n'existe aucun algorithme, ou plutôt aucun autre algorithme qui
<Sync time="1990.964"/>
ne ne ne fasse pas autre chose que
<Sync time="1993.297"/>
de regarder toutes les combinaisons possibles, ce qui est tout simplement impossible dès que le graphe est grand.
<Sync time="1998.900"/>
donc la réponse ici, c'est oui, on peut construire un isomorphisme.
<Sync time="2002.935"/>
il existe une façon de permuter, de faire tourner les sommets e f g h
<Sync time="2007.849"/>
de façon à retrouver le même graphe.
<Sync time="2010.289"/>
donc quand je dis le même graphe, ça veut dire que les sommets y sont et que toutes les relations y sont :
<Sync time="2015.367"/>
*c'est-à-dire que si x est relié avec y dans le premier, il est aussi relié avec y dans le second.
<Sync time="2020.625"/>
donc c'était une petite parenthèse hein qui, on peut se dire, n'a rien à voir avec isomorphisme de graphe
<Sync time="2025.732"/>
mais qui sert aussi à alerter ; ce sont des problèmes difficiles parce que
<Sync time="2029.108"/>
quand vous dessinez votre graphe de différentes façons
<Sync time="2032.838"/>
et que vous avez envie de montrer votre réseau social de façon élégante et intéressante,
<Sync time="2037.974"/>
bah d'une certaine manière vous êtes en train de jouer avec ce problème-là.
<Sync time="2041.020"/>
donc il existe des problèmes qui, pour les informaticiens, sont des problèmes qui coincent.
<Sync time="2045.27"/>
exemple euh isomorphisme de graphe.
<Sync time="2049.055"/>
et donc c'est un problème dit difficile, pour lesquels il y a des théories pour dire que c'est difficile.
<Sync time="2054.414"/>
ok. alors à quoi servent les graphes ?
<Sync time="2056.640"/>
ouais 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 bon allez-y, allez-y, allez-y.
<Sync time="2063.465"/>
c'est bon, c'est bon ?
<Sync time="2070.463"/>
donc deux graphes sont isomorphes
<Sync time="2073.057"/>
si on peut réétiqueter les sommets de l'un pour obtenir l'autre
<Sync time="2076.508"/>
ou redessiner.
<Sync time="2078.184"/>
d'accord?
<Sync time="2080.070"/>
et vérifier si deux graphes sont isomorphes est un problème difficile.
<Sync time="2083.947"/>
et derrière, c'est surtout dire que bah les problèmes que vous () on vous demande de résoudre en td
<Sync time="2088.376"/>
sont bien sûr des problèmes qu'on sait que vous allez pouvoir résoudre,
<Sync time="2091.421"/>
mais des problèmes y compris qui ont l'air simples là, parce que finalement il se définit très facilement,
<Sync time="2096.132"/>
peuvent être des problèmes sur lesquels on n'a pas à ce jour à ce jour
<Sync time="2099.801"/>
de euh
<Sync time="2101.233"/>
de réponse.
<Sync time="2105.910"/>
alors pourquoi utiliser des graphes ?
<Sync time="2107.817"/>
ben c'est des objets qui sont utilisés en de nombreuses situations, et en particulier des situations de modélisation.
<Sync time="2114.95"/>
modélisation de réseau social comme on a vu
<Sync time="2117.636"/>
mais aussi modélisation de la chimie :
<Sync time="2120.073"/>
si vous regardez beh une molécule, vous allez le définir comme un graphe
<Sync time="2124.899"/>
et typiquement, quand on va vouloir mettre la molécule
<Sync time="2127.893"/>
dans une banque de base de données pour pouvoir retrouver demain
<Sync time="2130.96"/>
si une nouvelle *molécule ressemble à une autre, eh ben on va coder ça
<Sync time="2134.595"/>
comme un graphe et on va essayer de construire
<Sync time="2137.01"/>
bah des euh recherches de graphes dans des banques de graphes, ou des proximités entre différents graphes et cetera.
<Sync time="2143.739"/>
euh on utilise des graphes pour faire des images,
<Sync time="2146.974"/>
donc p() pour relier des sommets et ça donne des impressions un petit peu de euh
<Sync time="2152.574"/>
euh de maillage. alors j'ai pas trouvé une belle image libre de droits, il faudra que je trouve,
<Sync time="2157.665"/>
pour pouvoir montrer euh des des beaux maillages euh en images
<Sync time="2161.680"/>
ah si, celui-là qui est euh un peu libre de droits, donc voici un papa noël :
<Sync time="2165.777"/>
on voit comment on crée des images en
<Sync time="2167.863"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 supposée trois d.
<Sync time="2170.119"/>
vous allez créer un graphe à gauche
<Sync time="2173.075"/>
on voit vraiment rien
<Sync time="2174.192"/>
mais vous allez vraiment k() vous créez un graphe à gauche, et puis ensuite le papa noël beh c'est () vous allez mettre une espèce de consistance
<Sync time="2180.216"/>
sur les faces du graphe.
<Sync time="2183.070"/>
encore un graphe
<Sync time="2184.873"/>
et on y va.
<Sync time="2186.142"/>
donc les graphes, outil de modélisation, sont utilisés pour modéliser
<Sync time="2190.83"/>
bah typiquement des images, des molécules, des réseaux sociaux, des sites web.
<Sync time="2195.154"/>
si vous voulez quelque part comprendre l'architecture d'un site web,
<Sync time="2198.544"/>
beh vous allez dire quelle page pointe sur quelle autre page, donc 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 vos individus vont être les pages web
<Sync time="2204.785"/>
et puis beh vous allez avoir
<Sync time="2206.772"/>
beh la possibilité de lier de l'un vers l'autre. *alors
<Sync time="2209.770"/>
on fait un peu mieux que ça,
<Sync time="2211.103"/>
mais dans dans l'esprit, c'est l'idée
<Sync time="2214.182"/>
euh qu'on va () on () qu'on va avoir pour pouvoir euh utiliser ensuite des algorithmes de navigation
<Sync time="2219.611"/>
à l'intérieur des pages web.
<Sync time="2227.620"/>
images, molécules réseaux sociaux, sites web.
<Sync time="2233.647"/>
bon, alors maintenant on va partir sur un exemple qui va nous servir en td, ou à peu près :
<Sync time="2238.527"/>
reprenons le cas des réseaux sociaux, et prenons un exemple pour voir ce qu'on peut faire.
<Sync time="2242.848"/>
donc on va faire un réseau *social très simple, parce que j'ai besoin de le manipuler sur mes transparents donc je vais pas faire
<Sync time="2248.248"/>
un milliard d'individus ; je n'ai que cinq individus.
<Sync time="2251.452"/>
les cinq individus s'appellent alfred, béa, charles, didier, erwan
<Sync time="2255.757"/>
et ça m'arrange, parce que comme ça ça commence par a b c d e.
<Sync time="2260.003"/>
euh et alors dans mon réseau social beh la relation qui m'intéresse, c'est la relation fait confiance
<Sync time="2266.835"/>
et on sait, parce que on a un texte, parce qu'on a interviewé les gens, parce qu'ils se sont déclarés comme ça,
<Sync time="2272.019"/>
on sait que alfred ne fait confiance à personne, que béa fait confiance à charles et didier,
<Sync time="2276.444"/>
que charles fait confiance à alfred, que didier fait confiance à erwan et à lui-même
<Sync time="2280.297"/>
donc notez que le seul qui se fait confiance à lui-même, c'est didier,
<Sync time="2283.595"/>
et que erwan fait confiance à béa.
<Sync time="2285.932"/>
bien
<Sync time="2287.662"/>
alors j'ai besoin de notations pour faire des maths, c'est-à-dire que mes individus alfred, béa et compagnie vont devenir petit a, petit b, petit c, petit d, petit e ;
<Sync time="2296.341"/>
que je le mets dans un ensemble grand e, qui est un ensemble d'individus,
<Sync time="2300.111"/>
et puis que euh bah et puis c'est tout.
<Sync time="2304.480"/>
alors maintenant, ça c'est les individus
<Sync time="2307.255"/>
qu'est-ce que je peux dire de la relation ? bah la relation en tant qu'objet mathématique, c'est quelque chose qui s'appelle justement une relation
<Sync time="2314.098"/>
donc ça existe : les mathématiciens ont des objets qui sont des relations, qui permet de lier les objets entre eux ;
<Sync time="2319.9"/>
donc une relation est composée de paires.
<Sync time="2322.635"/>
alors il y a un petit débat avec les mathématiciens qui appellent ça des couples,
<Sync time="2326.18"/>
mais ça fait rien.
<Sync time="2328.011"/>
donc si je reprends l'information du premier transparent, celui qui disait que alfred était euh alfred n'avait confiance en personne, que béa avait confiance en charles,
<Sync time="2336.877"/>
que didier avait confiance en lui-même,
<Sync time="2338.963"/>
ben cette même information, je peux
<Sync time="2340.971"/>
la représenter sous la forme de cet ensemble ;
<Sync time="2345.028"/>
donc c'est un ensemble de couples.
<Sync time="2347.087"/>
donc ça c'est des maths ; c'est pas encore de l'informatique.
<Sync time="2349.958"/>
je représente ça comme ça, et comme c'est un ensemble et que c'est un ensemble de couples, beh je peux
<Sync time="2354.813"/>
facilement dire que b c appartient a fait confiance,
<Sync time="2358.131"/>
ce qui veut dire exactement : béa fait confiance en charles.
<Sync time="2361.858"/>
ça marche ?
<Sync time="2364.987"/>
euh
<Sync time="2365.940"/>
je peux aller un peu plus loin : je peux aussi dire que ben x
<Sync time="2370.185"/>
virgule b appartient à fait confiance,
<Sync time="2372.707"/>
et pour l'instant x c'est un inconnu. donc je pourrais avoir des variables pour dire : une variable, une personne quelconque qui fait confiance en béa
<Sync time="2380.554"/>
pour parler ; toute personne qui fait confiance en béa
<Sync time="2383.256"/>
ou il y a une personne qui fait confiance à béa.
<Sync time="2386.902"/>
si je rajoute des accolades autour de ça, je peux créer des ensembles qui correspondent à des propositions
<Sync time="2392.520"/>
chut
<Event desc="conv" type="noise" extent="previous"/>

<Sync time="2394.322"/>
je vais parler
<Sync time="2395.522"/>
des personnes, donc les x qui appartiennent à grand e,
<Sync time="2398.455"/>
donc il s'agit des personnes de mon groupe d'amis, de mon réseau
<Sync time="2401.670"/>
telles que x fait confiance en béa.
<Sync time="2404.289"/>
donc ça veut dire quoi ? c'est tout simplement () je suis en train de parler de l'ensemble des gens
<Sync time="2408.094"/>
qui ont confiance en béa.
<Sync time="2410.454"/>
si je change l'ordre entre le x et le b, et je mets a virgule x à la place,
<Sync time="2415.352"/>
bah ce sera l'ensemble des gens en qui alfred a confiance.
<Sync time="2418.902"/>
rappel : c'était l'ensemble vide, puisque alfred n'avait confiance à personne.
<Sync time="2423.407"/>
donc ça, c'est simplement pour dire que la même information
<Sync time="2426.764"/>
texte qu'on avait, j'en ai fait une information mathématique qui était
<Sync time="2430.988"/>
beh un ensemble de
<Sync time="2433.015"/>
de rela() enfin une un un ensemble de paires.
<Sync time="2437.326"/>
allons vers l'informatique, parce que mon ensemble de paires, informatiquement, je vois pas très bien ce que je vais pouvoir en faire.
<Sync time="2442.568"/>
bah mon ensemble de paires, je peux le représenter par une table ;
<Sync time="2446.405"/>
si vous voulez, un tableur
<Sync time="2448.149"/>
par exemple. mais je peux aussi manipuler des tables dans notre langage de programmation, et on le fera en td puis en tp.
<Sync time="2454.519"/>
donc ma table, ce serait quelque chose comme ça :
<Sync time="2457.038"/>
ce serait un table euh une table ou un tableau booléen
<Sync time="2461.126"/>
dont
<Event desc="conv" type="noise" extent="previous"/>
 les contenus seraient des variables booléennes, vrai ou faux,
<Sync time="2465.378"/>
et v
<Sync time="2466.452"/>
bah si j'en() et si effectivement euh une personne fait confiance à une autre personne,
<Sync time="2470.746"/>
et faux sinon.
<Sync time="2472.261"/>
chut
<Sync time="2473.519"/>
donc l'information de départ, qui est maintenant l'information qu'on a à gauche, c'est-à-dire
<Sync time="2479.015"/>
les paires b c, b d, c a, b d, d e, e b,
<Sync time="2483.348"/>
cette même information,
<Sync time="2485.313"/>
je peux en faire un objet
<Sync time="2487.202"/>
qui commence à être manipulable par une machine puisque ben c'est un tableau, qui est un objet structuré.
<Sync time="2493.096"/>
c'est la même information, tout le monde est d'accord ? il y a p() il y a () on n'a pas eu de perte d'information
<Sync time="2497.52"/>
ni de gain d'information en faisant ça.
<Sync time="2500.764"/>
quand j'ai un tableau, je peux faire un autre objet
<Sync time="2503.282"/>
qui s'appelle une matrice.
<Sync time="2504.940"/>
alors certains ont fait des matrices, je sais pas si c'est encore au programme quelque part,
<Sync time="2509.339"/>
les mathématiciens ont un domaine qui travaille sur les matrices, qui font du calcul matriciel qui leur permet de faire
<Sync time="2516.115"/>
des produits de matrices, des sommes de matrices,
<Sync time="2518.72"/>
des choses très compliquées sur les matrices.
<Sync time="2522.327"/>
chut chut, s'il vous plaît !
<Sync time="2525.393"/>
le
<Sync time="2527.148"/>
euh donc là encore une fois () même information : qu'est-ce que j'ai fait ? j'ai remplacé
<Sync time="2531.092"/>
les v par des uns, les zéros par des
<Sync time="2534.249"/>
euh des f et j'ai obtenu la matrice qui est là.
<Sync time="2538.139"/>
l'intérêt de la chose, c'est que j'ai dit les mathématiciens savent faire des des des maths avec des matrices,
<Sync time="2542.932"/>
savent aussi utiliser les matrices dans
<Sync time="2545.346"/>
du euh des logiciels de calcul
<Sync time="2547.378"/>
donc finalement, mon réseau social de tout à l'heure, je peux aussi le manipuler
<Sync time="2551.542"/>
beh par des outils de mathématiciens qui sont des outils de calcul matriciel.
<Sync time="2556.331"/>
enfin
<Sync time="2557.280"/>
le lien avec les graphes,
<Sync time="2558.93"/>
c'est quoi ? bah vous regardez le tableau qui est là
<Sync time="2562.404"/>
ben je l'ai dessiné en tant que
<Sync time="2564.675"/>
euh graphe
<Sync time="2565.935"/>
et là, encore une fois, il y a aucune perte d'information :
<Sync time="2568.965"/>
j'ai mes cinq sommets de () des deux côtés, j'ai cinq lignes et cinq colonnes ;
<Sync time="2573.836"/>
j'ai également ici
<Sync time="2575.816"/>
euh j'ai également ici mes différentes relations
<Sync time="2579.795"/>
vous la voi() vous voyez bien la boucle qui va de d vers d ?
<Sync time="2583.254"/>
d'accord ? qui est en fait le seul endroit où il y a une personne qui se fait confiance en elle-même,
<Sync time="2587.675"/>
donc on peut parler de "on voit que" quand on est sur un graphe :
<Sync time="2590.873"/>
on voit que il y a une seule personne qui a confiance à elle-même.
<Sync time="2594.166"/>
on voit que aussi b et a sont en relation de confiance réciproque ;
<Sync time="2599.256"/>
on avait plus de mal à le voir sur la matrice.
<Sync time="2602.388"/>
on y serait arrivé, on aurait tracé une euh diagonale et on aurait regardé s'il y avait eu
<Sync time="2607.347"/>
des v de chaque côté de la diagonale par symétrie, mais c'est quand même beaucoup plus compliqué.
<Sync time="2614.961"/>
conclusion
<Sync time="2615.986"/>
provisoire :
<Sync time="2617.133"/>
c'est que une relation est un ensemble de paires objets mathématiques,
<Sync time="2620.656"/>
et que cette relation, je peux la représenter par une table
<Sync time="2623.606"/>
ou par une matrice, ou par un graphe.
<Sync time="2627.040"/>
alors l'on peut arriver à la conclusion : mais pourquoi avoir plusieurs trucs ? pourquoi ne pas en avoir un seul ? ça me va très bien, le graphe, j'y vois bien.
<Sync time="2633.915"/>
sauf que le graphe, c'est un objet graphique ;
<Sync time="2636.168"/>
essayez de le manipuler dans une machine, vous y arriverez pas.
<Sync time="2639.937"/>
et donc quelque part, le fait d'avoir le tableau va me permettre de le manipuler en machine,
<Sync time="2644.912"/>
le fait d'avoir des matrices va me permettre de me reposer
<Sync time="2648.084"/>
sur des théories mathématiques qui me disent comment on fait pour additionner, multiplier des ma() des matrices.
<Sync time="2653.395"/>
donc le fait qu'on ait plusieurs points de vue, c'est plusieurs modèles pour la même chose, eh ben c'est quand même plutôt utile.
<Sync time="2659.543"/>
alors j'ai écrit b() avec une étoile que bien entendu, tout ce que je raconte ne marche que si la relation est finie.
<Sync time="2665.828"/>
vous connaissez des relations qui sont infinies :
<Sync time="2668.365"/>
la relation inférieur ou égal à sur grand n, par exemple, c'est bien une relation :
<Sync time="2672.499"/>
trois est inférieur ou égal à cinq,
<Sync time="2674.424"/>
cinq est inférieur ou égal à dix-sept,
<Sync time="2676.773"/>
euh vous allez avoir du mal à le dessiner en tant que graphe.
<Sync time="2679.943"/>
ou même à en faire un tableau, ça va être infini.
<Sync time="2682.832"/>
donc on est sur le cas des relations finies, mais même un milliard c'est fini donc ça va,
<Sync time="2687.688"/>
on peut faire.
<Sync time="2690.624"/>
ok ?
<Sync time="2692.284"/>
et alors c'est un peu () c'est pénible, mais enfin pénible ou pas, chaque représentation euh beh a son propre vocabulaire
<Sync time="2699.460"/>
et on fait attention à l'utiliser parce que
<Sync time="2702.109"/>
bah toujours ces questions d'ambiguïté et d'héritage des différentes disciplines scientifiques pour pouvoir faire les choses proprement.
<Sync time="2718.870"/>
ok, donc on a () on sait représenter l'information, on sait représenter notre réseau social en tant que graphe.
<Sync time="2724.633"/>
maintenant, comment est-ce qu'on va le manipuler ? comment est ce qu'on va manipuler des propriétés ? comment est-ce qu'on va dire des choses là-dessus ?
<Sync time="2729.912"/>
bah j'ai envie de poser la question de savoir qui est la personne en qui euh les gens ont confiance ?
<Sync time="2735.574"/>
est-ce que il y a des gens qui () alors faut pas simplement répondre sur ça, faut imaginer que le graphe contient
<Sync time="2740.381"/>
ben un milliard de personnes, et que
<Sync time="2741.979"/>
la même question, je pourrais la poser sur quelque chose de p() beaucoup plus grand.
<Sync time="2745.973"/>
j'ai envie de dire euh beh qui sont les gens en qui euh béa a confiance ? et obtenir la réponse
<Sync time="2751.459"/>
directement à travers bah 
<Event desc="pi" type="pronounce" extent="instantaneous"/>
 un algorithme.
<Sync time="2755.158"/>
donc j'ai envie de le faire là-dessus, mais si vous êtes sur un autre réseau social
<Sync time="2758.654"/>
beh imaginez que vous gérez le réseau social des acheteurs ou des des consommateurs d'un d'un site euh d'achat
<Sync time="2765.082"/>
beh vous avez envie de savoir qui sont ceux qui n'ont jamais acheté,
<Sync time="2768.253"/>
qui sont ceux qui ont le plus acheté, qui sont les gens qui sont à la fois acheteurs et vendeurs, donc vous avez envie
<Sync time="2773.180"/>
de poser ce genre de questions.
<Sync time="2778.407"/>
alors on a besoin de quoi pour pouvoir parler de ça ? on peut faire, comme toujours, les choses en français.
<Sync time="2783.515"/>
mais c'est gênant le français, c'est plein ambiguïtés et puis ensuite on va inventer du langage à chaque fois, on va pas y arriver.
<Sync time="2789.555"/>
donc une des choses que fait un informaticien
<Sync time="2791.874"/>
et souvent un mathématicien, c'est de poser un langage qui va lui permettre de manipuler les choses.
<Sync time="2797.227"/>
on veut un langage non ambigu, *c'est-à-dire un langage pour lequel
<Sync time="2800.359"/>
on saura ce que ça veut dire, il y aura pas deux interprétations différentes.
<Sync time="2804.181"/>
on veut un langage qui soit assez simple, on n'a pas envie d'un truc très très compliqué
<Sync time="2807.584"/>
mais on veut en même temps qu'il soit expressif, que je puisse exprimer des propriétés difficiles.
<Sync time="2812.368"/>
et je veux *un langage qui, demain,
<Sync time="2814.478"/>
je vais pouvoir beh utiliser pour programmer avec
<Sync time="2817.57"/>
donc ça s'appelle la logique des prédicats.
<Sync time="2821.085"/>
alors la logique des prédicats, ou la logique du premier ordre,
<Sync time="2824.052"/>
ben c'est un langage
<Sync time="2825.445"/>
qui euh il va utiliser des choses que vous *connaissez déjà :
<Sync time="2829.442"/>
des opérateurs comme ceux qu'on a vus en algorithmique,
<Sync time="2832.398"/>
le et
<Sync time="2833.301"/>
le ou
<Sync time="2834.223"/>
et le non.
<Sync time="2835.125"/>
bon on avait déjà vu ça.
<Sync time="2837.003"/>
deux quantificateurs qui me servent à dire si je veux que la propriété tienne sur tout le monde ou sur au moins une personne ;
<Sync time="2844.433"/>
c'est ce qu'on appelle le "quel que soit"
<Sync time="2846.621"/>
et le "il existe".
<Sync time="2849.272"/>
j'ai besoin de dire qu'un élément appartient ou n'appartient pas, donc j'utilise le symbole d'appartenance, appartient ou appartient barré pour n'appartient pas
<Sync time="2856.891"/>
et un truc qui est plus compliqué qu'on le croit, qui est l'implication. l'implication, c'est
<Sync time="2861.927"/>
le fait que si une première propriété une () est vraie, je veux que la deuxième soit vraie aussi.
<Sync time="2866.770"/>
donc c'est ce qui me permet de raisonner l'implication,
<Sync time="2869.802"/>
hein ?
<Sync time="2870.375"/>
j'ai envie de dire : si tu es un ami de béa, je veux que tu sois aussi un ami de euh de erwan, par exemple.
<Sync time="2877.179"/>
ou si tu as confiance en quelqu'un
<Sync time="2879.311"/>
euh voilà en erwan, alors tu as aussi confiance en euh didier ;
<Sync time="2885.779"/>
donc logique du premier ordre.
<Sync time="2888.174"/>
et maintenant, on va combiner tous ces trucs-là dans des formules
<Sync time="2891.809"/>
qui seront utilisées, dans le contexte qui nous intéresse, pour définir des ensembles, donc des ensembles d'individus qui ont la propriété voulue
<Sync time="2899.381"/>
donc on va écrire des choses comme ça :
<Sync time="2901.493"/>
l'ensemble des x qui appartiennent à l'ensemble grand a tel que
<Sync time="2904.8"/>
quel que soit y appartenant à grand a, x y appartient à r.
<Sync time="2908.561"/>
alors là, a et r c'est pas mon exemple de tout à l'heure ; c'est simplement des exemples syntaxiques
<Sync time="2912.449"/>
du genre de choses qu'on a envie d'écrire.
<Sync time="2914.464"/>
donc
<Sync time="2915.286"/>
des endroits sur lesquels j'utilise mes "quel que soit", mes "il existe",
<Sync time="2919.097"/>
mes euh "appartient", mes x, mes y pour pouvoir beh définir
<Sync time="2923.695"/>
des propriétés, et à travers des propriétés l'ensemble des individus qui respectent les propriétés.
<Sync time="2930.460"/>
alors sur la syntaxe, on va faire comme ça : on va avoir donc des accolades pour dire qu'il s'agit d'un ensemble,
<Sync time="2936.108"/>
un deux points au milieu pour simplement dire beh à gauche je mets euh où est-ce que je vais chercher mes éléments ?
<Sync time="2941.903"/>
et à droite, je mets la propriété qui doit être vérifiée
<Sync time="2946.051"/>
et je vais, alors un peu de jargon, dire que si la propriété commence par un "quel que soit", on dira que c'est une propriété universelle qui doit toujours tenir ;
<Sync time="2955.003"/>
si la propriété commence par un "il existe",
<Sync time="2957.652"/>
alors c'est une propriété existentielle,
<Sync time="2960.361"/>
*c'est-à-dire je veux que ben
<Sync time="2961.98"/>
elle tienne au moins une fois.
<Sync time="2965.344"/>
vous avez peut-être pas besoin de noter tout ça.
<Sync time="2968.220"/>
tac !
<Sync time="2968.958"/>
voyons des exemples :
<Sync time="2971.193"/>
exemple simple
<Sync time="2972.939"/>
x () alors là r() on revient à l'exemple de tout à l'heure, on a grand e et c'est le () c'est a b c d e
<Sync time="2977.930"/>
et euh f() "fait confiance" qui est notre relation.
<Sync time="2981.213"/>
donc première chose, c'est x appartenant à e, donc les personnes
<Sync time="2985.338"/>
tel que x virgule b appartient à "fait confiance", donc les personnes x
<Sync time="2989.792"/>
tel que x fait confiance en *b, *c'est-à-dire tel que x fait confiance en béa,
<Sync time="2993.824"/>
et donc si je décolle jusqu'au bout, et le but du jeu va être là, c'est-à-dire de faire du français
<Sync time="2998.434"/>
à partir de f() ces phrases mathématiques et vice versa,
<Sync time="3001.402"/>
ben ça c'est l'ensemble des gens
<Sync time="3003.105"/>
qui ont confiance en béa.
<Sync time="3005.140"/>
alors pourquoi qui ont f() qui ont confiance en béa et pas l'inverse ?
<Sync time="3007.988"/>
c'est parce que c'est x virgule b,
<Sync time="3009.872"/>
et pas b virgule x.
<Sync time="3012.001"/>
alors justement, la suivante c'est b virgule x
<Sync time="3014.437"/>
*donc c'est l'ensemble des x
<Sync time="3016.45"/>
donc des x appartenant à e, donc des personnes
<Sync time="3019.053"/>
tel que b virgule x appartient à "fait confiance"
<Sync time="3022.345"/>
tel que béa
<Sync time="3023.400"/>
fait confiance en x.
<Sync time="3025.426"/>
donc tel que ça devient l'ensemble des gens en qui b a confiance.
<Sync time="3030.024"/>
c'est plus difficile, et vous ré() vous le verrez en td,
<Sync time="3032.87"/>
qu'on ne le croit d'être capable d'écrire une phrase en français
<Sync time="3036.143"/>
qui coïncide avec la phrase en maths, et vice versa.
<Sync time="3039.587"/>

<Event desc="pi" type="pronounce" extent="instantaneous"/>
 ça fait partie aussi du travail, alors là, colossal de
<Sync time="3043.722"/>
du scientifique et pas que de l'informaticien,
<Sync time="3046.151"/>
qui est celle de retranscrire de la langue naturelle vers la langue s() symbolique donc de la langue scientifique
<Sync time="3052.768"/>
beh euh le les choses.
<Sync time="3055.398"/>
alors la troisième propriété est un peu con() euh *compliquée, c'est : je fais la *combinaison des deux
<Sync time="3059.93"/>
et je mets un euh et entre les deux. alors comment je sais que c'est un et ? bah le et, c'est le chapeau pointu vers le haut
<Sync time="3066.955"/>
c'est euh comme l'intersection.
<Sync time="3069.5"/>
intersection, c'est quand beh euh les deux propriétés doivent être vraies.
<Sync time="3073.325"/>
donc ici, c'est les gens qui font confiance en béa et en qui béa a confiance.
<Sync time="3079.363"/>
je peux les dessiner, ces deux trucs-là, sur le graphe :
<Sync time="3082.453"/>
donc euh en vert, c'est les gens en qui béa a confian() euh ne() pardon, c'est les gens qui ont confiance en béa
<Sync time="3089.333"/>
donc en vert, ce sont () est-ce que ça de() c'est vert sur votre () ouais ? un peu
<Sync time="3093.474"/>
donc en vert, c'est des gens
<Sync time="3095.709"/>
euh j'ai une flèche qui part de a vers b, j'ai une flèche qui va de e vers b
<Sync time="3099.748"/>
donc tout va bien.
<Sync time="3101.060"/>
alors notez que je retrouve cette information dans le graphe.
<Sync time="3104.495"/>
comment est-ce que dans () pardon d() dans le
<Sync time="3106.866"/>
dans le tableau
<Sync time="3108.054"/>
et là ça va être de l'algorithmique : comment est-ce que je fais pour trouver les gens
<Sync time="3112.111"/>
qui ont confiance en béa dans le tableau ?
<Sync time="3119.020"/>
donc qui font confiance, c'est dans ce sens-là. bah je prends la colonne béa,
<Sync time="3123.037"/>
je descends la colonne béa
<Sync time="3125.003"/>
et chaque fois que je vais f() j'ai un v,
<Sync time="3127.029"/>
beh je note la ligne correspondante.
<Sync time="3130.223"/>
donc là on voit que on voit que sur le graphe,
<Sync time="3133.092"/>
par contre sur le tableau, je peux calculer
<Sync time="3136.212"/>
j'ai un algorithme, je fais quoi ? je fais une boucle pour
<Sync time="3139.06"/>
comme vous avez fait des boucles pour jusqu'à présent, ou des boucles for,
<Sync time="3142.357"/>
vous descendez et vous trouvez a et e,
<Sync time="3145.392"/>
et c'est bien a et e qu'on trouve là.
<Sync time="3148.311"/>
euh alors les gros bords bleus, *c'est-à-dire a et d, ce sont les gens en qui béa a confiance.
<Sync time="3154.965"/>
sur le dessin, je vois que il y a une flèche
<Sync time="3157.825"/>
qui part de b vers d, une flèche qui part de b vers c, une flèche qui est () une *flèche qui part de b vers a
<Sync time="3163.698"/>
donc tout va bien,
<Sync time="3164.926"/>
ce sont ces trois-là qui sont les personnes en qui béa a confiance.
<Sync time="3169.984"/>
euh
<Sync time="3171.169"/>
sur l'algorithmique, je vais faire quoi ? je vais prendre la ligne béa,
<Sync time="3174.888"/>
je vais parcourir la ligne béa et chaque fois que je trouve un v,
<Sync time="3178.084"/>
je vais dire ben c'est là, c'est bon, j'ai gagné, j'ai trouvé.
<Sync time="3181.275"/>
donc à travers l'analyse dessin et l'analyse algorithmique, je suis capable d'arriver à un même résultat ;
<Sync time="3187.352"/>
heureusement, d'ailleurs.
<Sync time="3189.157"/>
euh enfin
<Sync time="3190.303"/>
euh la flèche rouge ici, sur le a, bah m'indique la di() l'intersection des deux
<Sync time="3195.116"/>
s'il fallait que je fasse un algo, beh je ferais quoi ? beh je ferais
<Sync time="3198.513"/>
euh je peux () je serais en train de parcourir simultanément
<Sync time="3201.78"/>
la l() colonne béa et la ligne béa, et s() dès que je trouve un v
<Sync time="3206.311"/>
en même temps
<Sync time="3207.274"/>
eh ben je note
<Sync time="3208.523"/>
l'indice correspondant.
<Sync time="3211.286"/>
exemple suite
<Sync time="3213.154"/>
que veut dire ceci ?
<Sync time="3218.610"/>
hein ? vous avez l'impression que c'est simple ;
<Sync time="3220.640"/>
on va voir si c'est un peu simple.
<Sync time="3223.320"/>
euh là j'ai rajouté un "il existe y"
<Sync time="3236.660"/>
donc c'est les x, donc c'est les personnes
<Sync time="3239.484"/>
tel que
<Sync time="3240.798"/>
il existe y, donc il y a au moins une personne
<Sync time="3244.709"/>
en qui x a confiance
<Sync time="3246.839"/>
et qui a confiance en x.
<Sync time="3249.324"/>
donc ça voudrait dire quelque chose comme :
<Sync time="3251.886"/>
l'ensemble des personnes qui ont confiance en quelqu'un qui a confiance en eux.
<Sync time="3255.794"/>
pas si facile à écrire : on sent que la langue mathématique va être très précise
<Sync time="3260.178"/>
et une fois qu'on écrit en français, ben c'est un peu plus désagréable et un peu plus compliqué.
<Sync time="3265.345"/>
si je regarde le graphe,
<Sync time="3266.752"/>
c'est qui ?
<Sync time="3267.732"/>
c'est a, b et d.
<Sync time="3269.768"/>
alors tout le monde est d'accord pour a et b
<Sync time="3272.33"/>
d'accord ? a, il a quelqu'un qui a confiance en lui et en qui il a confiance ;
<Sync time="3276.349"/>
b aussi
<Sync time="3277.471"/>
en gros, il y a la relation de symétrie.
<Sync time="3279.622"/>
et pourquoi est-ce qu'il y a d ?
<Sync time="3282.251"/>
parce qu'il y a lui-même.
<Sync time="3283.725"/>
d a quelqu'un qui a confiance en lui et en qui il a confiance.
<Sync time="3287.132"/>
*donc là aussi il faut faire attention :
<Sync time="3288.729"/>
les mathématiques sont très précises, il y a aucune ambiguïté, d en fait partie.
<Sync time="3292.907"/>
je suis pas sûr que sur la phrase elle-même, tout le monde aurait été d'accord pour inclure d.
<Sync time="3298.250"/>
donc on voit la différence entre la langue
<Sync time="3300.91"/>
et le fait que on fasse un peu d'informatique, de mathématiques, qu'on décrive j() les choses euh précisément
<Sync time="3306.313"/>
et on avance à partir de là.
<Sync time="3309.208"/>
je continue.
<Sync time="3310.827"/>
donc euh ouais la notation euh barre verticale, c'est euh cardinal de l'ensemble
<Sync time="3315.843"/>
donc que veut dire ça ? donc là il y a deux niveaux d'ensemble
<Sync time="3319.022"/>
il y a les x tel que l'ensemble des y
<Sync time="3325.910"/>
qui ont confiance en x
<Sync time="3327.862"/>
à un cardinal
<Sync time="3330.507"/>
supérieur ou *égal à deux.
<Sync time="3336.887"/>
un peu compliqué ?
<Sync time="3339.190"/>
l'ensemble des personnes qui ont au moins deux personnes qui leur font confiance.
<Sync time="3344.727"/>
ah ouais ?
<Sync time="3346.576"/>
bah c'est heureux qu'on puisse définir des propriétés de ce type-là
<Sync time="3350.057"/>
et que ben ensuite on pourra écrire l'algorithme qui permet de trouver l() ce cet ensemble
<Sync time="3355.390"/>
sachant que là, sur un algo s() sur cinq personnes, c'est pas très intéressant d'écrire l'algorithme :
<Sync time="3359.962"/>
on a plus vite fait de faire à la main.
<Sync time="3361.869"/>
mais si vous avez un réseau social de grande taille, vous avez plus vite fait d'écrire l'algorithme.
<Sync time="3366.810"/>
et donc euh là, on trouve que b, d, a sont les personnes qui ont au moins deux personnes qui leur font confiance
<Sync time="3374.268"/>
et on retrouve l'algo ; l'algo, on va le trouver où ?
<Sync time="3376.814"/>
beh on va parcourir euh
<Sync time="3379.880"/>
on va parcourir beh le le tableau
<Sync time="3382.933"/>
on va parcourir le tableau en faisant quoi ? on va faire une boucle "pour" sur les colonnes,
<Sync time="3387.448"/>
une boucle pour euh b() donc pour chaque colonne,
<Sync time="3390.353"/>
on va compter combien de v il y a dans la colonne.
<Sync time="3393.203"/>
donc il y a deux boucles "pour" imbriquées
<Sync time="3395.725"/>
*parce que je suis vraiment obligé de tout compter,
<Sync time="3398.204"/>
donc je compte, pour la première colonne je me rends compte qu'il y en a deux donc je dis : il y a a
<Sync time="3402.3"/>
je compte la deuxième colonne, je me rends compte qu'il y en a deux donc je dis :
<Sync time="3405.390"/>
b en fait partie aussi. je compte combien il y a de v dans la troisième colonne
<Sync time="3409.217"/>
je vois qu'il y en a que un donc je le retourne pas
<Sync time="3411.739"/>
et cetera, et cetera.
<Sync time="3417.442"/>
encore un
<Sync time="3434.563"/>
alors l'implication,
<Sync time="3436.744"/>
qui va nous poser quelques problèmes.
<Sync time="3439.612"/>
donc c, on sait que c'est quelqu'un, alors je me souviens plus comment () charles
<Sync time="3442.889"/>
b, c'est béa
<Sync time="3444.181"/>
c, c'est charles
<Sync time="3445.756"/>
x, c'est quelqu'un
<Sync time="3455.430"/>
*alors c'est quelque chose comme
<Sync time="3457.5"/>
on est en train de dire que si béa lui fait confiance, alors charles doit lui faire confiance.
<Sync time="3462.921"/>
donc c'est l'ensemble de personnes qui,
<Sync time="3465.013"/>
quand béa leur fait confiance,
<Sync time="3467.554"/>
alors charles leur faire confiance.
<Sync time="3470.690"/>
donc les personnes en qui, si béa a confiance,
<Sync time="3473.725"/>
alors charles aussi.
<Sync time="3476.440"/>
alors ça a l'air simple, celui-là, mais vous allez *probablement pas être d'accord. donc on a dit : si béa fait confiance, alors charles aussi.
<Sync time="3481.913"/>
et je regarde le résultat et je dis que a, b, s() a, b, d, e
<Sync time="3486.683"/>
sont des bonnes solutions.
<Sync time="3488.771"/>
donc si béa fait confiance, alors charles aussi.
<Sync time="3492.916"/>
donc pour d, tout le monde est d'accord : béa fait confiance en didier,
<Sync time="3497.026"/>
et charles aussi. donc il y a pas de problème, on est dans le cas où béa faisant confiance, charles fait
<Sync time="3502.542"/>
euh fait confiance tout va bien.
<Sync time="3504.668"/>
euh m() pour e,
<Sync time="3506.520"/>
est-ce que vous êtes d'accord pour dire que e
<Sync time="3509.185"/>
remplit la propriété ?
<Sync time="3511.5"/>
*c'est-à-dire que e, ben finalement, fait partie des gens qui,
<Sync time="3514.649"/>
béa () si béa fait confiance, alors charles aussi.
<Sync time="3520.230"/>
la réponse est oui par défaut.
<Sync time="3522.041"/>
on n'est pas en train de dire que il faut que béa et charles lui fassent confiance
<Sync time="3525.755"/>
ça, j'aurais écrit quelque chose comme : béa fait confiance à x, et charles fait confiance à x.
<Sync time="3531.560"/>
l'implication
<Sync time="3533.259"/>
alors l'implication, c'est l'idée *suivante et elle est () c'est compliqué, mais c'est la seule chose qui f() enfin c'est ce qui fait pa() marcher aussi les mathématiques
<Sync time="3540.060"/>
depuis très longtemps,
<Sync time="3541.76"/>
c'est :
<Sync time="3542.727"/>
vous avez une hypothèse qui implique une conclusion, vous ne demandez pas que la conclusion soit vraie si l'hypothèse est fausse.
<Sync time="3549.470"/>
si l'hypothèse est fausse,
<Sync time="3552.041"/>
c'est pas grave, la conclusion peut être vraie ou fausse.
<Sync time="3555.690"/>
donc si on y réfléchit, dans une implication,
<Sync time="3559.100"/>
le seul cas
<Sync time="3560.984"/>
qui fait planter une implication, qui fait que une implication ne va pas être vraie,
<Sync time="3566.253"/>
c'est quand l'hypothèse est vraie et la conclusion est fausse.
<Sync time="3570.289"/>
si on re-regarde ça comme ça, on se rend compte que petit c
<Sync time="3573.620"/>
est donc le mauvais cas. pourquoi ? parce que
<Sync time="3576.650"/>
béa fait confiance en charles, il y a une arête un arc qui part de b vers c ;
<Sync time="3582.4"/>
par contre, il y a pas de boucle de charles sur charles,
<Sync time="3585.226"/>
donc petit d est le cas où b euh on peut pas dire que béa
<Sync time="3590.322"/>
fait confiance en x et
<Sync time="3592.171"/>
charles fait aussi confiance en x, implique charles fait aussi confiance en x.
<Sync time="3596.480"/>
ouais
<Sync time="3597.034"/>
donc attention à l'implication
<Sync time="3599.186"/>
euh ce n'est pas une règle d'informaticiens.
<Sync time="3601.867"/>
alors il se trouve que les informaticiens l'utilisent
<Sync time="3604.591"/>
dans euh pas mal de cas, beaucoup p() pour faire de la modélisation
<Sync time="3608.335"/>
ils jouent beaucoup avec de la logique, mais les mathématiciens ils *utilisent exactement la même implication.
<Sync time="3614.249"/>
quand vous faites une démonstration en mathématiques,
<Sync time="3617.261"/>
vous êtes en train de partir de votre hypothèse, vous *allez la supposer vraie
<Sync time="3620.811"/>
et à partir de l'hypothèse ou l'hypothèse euh à partir de
<Sync time="3624.323"/>
oui c'est ça, de du fait que l'hypothèse soit vraie, vous allez essayer d'arriver à la conclusion
<Sync time="3628.834"/>
que justement () que la conclusion est vraie.
<Sync time="3634.570"/>
bon, notons un petit peu pour résumer que la logique du premier ordre
<Sync time="3639.500"/>
permet de définir des propriétés,
<Sync time="3645.600"/>
repose sur le calcul booléen. le calcul booléen, c'est celui que vous avez vu en algorithmique, c'est celui
<Sync time="3651.735"/>
qui vous dit de quelle façon on sait combiner les "et", les "ou" les "non"
<Sync time="3655.873"/>
donc on n'a pas changé de
<Sync time="3657.674"/>
on n'a pas *changé de règles, on n'a pas dit : à partir de maintenant,
<Sync time="3660.726"/>
euh le euh la double négation ne vaut pas la même chose qu'aucune négation du tout.
<Sync time="3666.906"/>
ou bien que la négation d'un "et", c'est la même chose que le "ou"
<Sync time="3671.3"/>
des négations.
<Sync time="3672.754"/>
vous avez vu ce genre de règles ?
<Sync time="3674.414"/>
*donc il y avait un certain nombre de règles pour manipuler les expressions booléennes ;
<Sync time="3677.936"/>
on retrouve exactement la même chose là.
<Sync time="3682.230"/>
repose sur le calcul booléen,
<Sync time="3684.382"/>
et donc on a des quantificateurs qui permettent de dire si la propriété s'applique à tous ou au moins un un élément.
<Sync time="3695.790"/>
alors un petit mot peut-être euh complémentaire sur la logique :
<Sync time="3700.380"/>
la logique fait aujourd'hui clairement partie des domaines partagés entre mathématiciens et informaticiens.
<Sync time="3706.189"/>
au départ, c'était un domaine tout à fait mathématique :
<Sync time="3708.939"/>
les mathématiciens qui voulaient beh écrire un langage mathématique
<Sync time="3712.899"/>
pour pouvoir beh
<Sync time="3714.302"/>
quelque part réécrire toutes les mathématiques. il y avait un rêve des mathématiciens vers mille neuf cents
<Sync time="3719.784"/>
qui était : j'essaye de tout écrire dans un langage unique et de voir ce qui se passe.
<Sync time="3725.244"/>
les informaticiens se sont *emparés de la logique parce que ils avaient besoin de faire le genre de choses dont je suis en train de parler.
<Sync time="3731.669"/>
le langage dont je suis en train de parler est déjà très puissant, la lan() la logique du premier ordre permet de faire beaucoup de choses,
<Sync time="3737.461"/>
mais c'est pas assez.
<Sync time="3739.221"/>
les logiciens et () vont v() avoir envie de faire de la logique qui porte () avec des quantificateurs qui vont porter sur des ensembles.
<Sync time="3746.432"/>
mais il y a plus intéressant :
<Sync time="3748.489"/>
les logiciens ou les informaticiens, quand ils font de l'intelligence artificielle,
<Sync time="3752.991"/>
vont faire porter de la logique non pas sur des choses qui sont, mais sur des choses qui pourraient être ;
<Sync time="3758.141"/>
c'est ce qu'on va appeler la *logique modale :
<Sync time="3760.826"/>
je pense que tu penses.
<Sync time="3762.964"/>
pensez à un programme euh informatique qui jouerait au poker :
<Sync time="3767.101"/>
il n'est pas que en train d'examiner les cartes qui sont devant lui ;
<Sync time="3771.183"/>
le programme informatique va devoir également
<Sync time="3774.230"/>
réfléchir sur le raisonnement de l'adversaire.
<Sync time="3777.669"/>
or le raisonnement, c'est encore de la logique.
<Sync time="3780.451"/>
le langage qui est là, vous allez avoir beaucoup de mal
<Sync time="3783.035"/>
à
<Sync time="3783.996"/>
faire rentrer beh des éléments de raisonnement là-dessus.
<Sync time="3787.142"/>
donc il y a des logiques beaucoup plus intéressantes qui sont euh
<Sync time="3791.009"/>
aujourd'hui apparues pour pouvoir décrire
<Sync time="3793.425"/>
ce ce genre de choses qui sont utiles par exemple en intelligence artificielle.
<Sync time="3801.210"/>
autres exemples : des gens qui ont confiance en exactement deux personnes.
<Sync time="3806.624"/>
ça risque de paraître très difficile, on peut peut-être prendre
<Sync time="3810.455"/>
la relation de tout à l'heure où on avait un inférieur ou égal, et puis remplacer ça par un égal. on a vu qu'on pouvait
<Sync time="3816.245"/>
compter, en utilisant cette logique,
<Sync time="3818.493"/>
des ensembles ou des sous-ensembles.
<Sync time="3821.607"/>
*alors des trucs plus intéressants, c'est de trouver euh
<Sync time="3824.514"/>
parmi tous les groupes possibles
<Sync time="3826.213"/>
beh un groupe dans lequel tout le monde aurait confiance en tout le monde
<Sync time="3829.901"/>
d'accord ? *c'est-à-dire c'est un peu le principe de la clique dont j'avais parlé tout à l'heure
<Sync time="3833.92"/>
donc je cherche un groupe
<Sync time="3835.481"/>
dans lequel tout le monde a confiance en tout le monde.
<Sync time="3838.204"/>
*donc il va falloir faire des x
<Sync time="3841.109"/>
tels que euh beh chaque y dans lequel x a *confiance en y, y a aussi confiance à x
<Sync time="3846.922"/>
mais on a quand même les outils pour le faire, ce genre de choses-là, qu'on fera, ce genre de choses, en td.
<Sync time="3852.111"/>
et puis alors là vous imaginez
<Sync time="3853.936"/>
que ce qui vous intéresse, c'est () vous avez un réseau social
<Sync time="3856.974"/>
et vous, ce que vous voulez, c'est choisir des leaders,
<Sync time="3859.590"/>
des gens euh qui pourraient servir des exemples () d'exemples à d'autres
<Sync time="3863.48"/>
eh ben vous allez peut-être aller chercher les gens qui () en qui les gens ont le plus confiance.
<Sync time="3868.379"/>
*donc vous allez trouver les maximaux
<Sync time="3870.815"/>
de ces ensembles-là.
<Sync time="3872.530"/>
à noter que c'est pas évident hein, la notion de leader. ça peut être aussi quelqu'un en qui tout le monde a confiance, mais qui n'a confiance en personne ; c'est peut-être pas tr() un très bon leader.
<Sync time="3879.765"/>
donc il va falloir ensuite rediscuter, mais en utilisant ces mathématiques
<Sync time="3883.404"/>
pour essayer de poser des questions comme bah s() finalement c'est quoi
<Sync time="3886.97"/>
beh le genre de personnes que, dans un réseau social comme celui-ci,
<Sync time="3890.484"/>
on va chercher à trouver ?
<Sync time="3894.863"/>
et donc j'ai terminé.
</Turn>
</Section>
</Episode>
</Trans>
