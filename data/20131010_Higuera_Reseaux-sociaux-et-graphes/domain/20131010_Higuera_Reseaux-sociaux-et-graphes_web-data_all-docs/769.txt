http://www.ens-lyon.fr/LIP/Pub/Rapports/PhD/PhD2005/PhD2005-04.pdf

N˚ d’ordre : 341
N˚ attribu´e par la biblioth`eque : 05ENSL0 341
´Ecole doctorale : Math´ematiques et Informatique fondamentale

Th`ese

pr´esent´ee pour l’obtention du titre de

Docteur de l’´Ecole Normale Sup´erieure de Lyon

Sp´ecialit´e : Informatique

par Emmanuelle LEBHAR

Algorithmes de routage et mod`eles al´eatoires

pour les graphes petits mondes

Soutenue publiquement le 6 d´ecembre 2005 devant la commission d’examen compos´ee de

Directeurs de th`ese : Michel Morvan et Nicolas Schabanel

Rapporteurs :

Examinateurs :

Pierre Fraigniaud et Jean-Claude K¨onig
Jose Rolim et Laurent Viennot

´Ecole Normale Sup´erieure de Lyon

Laboratoire de l’Informatique du Parall´elisme

46 all´ee d’Italie - 69007 Lyon

Mis en page avec la classe Phdlasl

Remerciements

Au d´ebut de ma th`ese, l’´etude des grands r´eseaux d’interaction ´etait un sujet
en plein essor et riche de nombreuses probl´ematiques de recherche. J’ai alors
eu la chance de rencontrer Nicolas Schabanel qui d´esirait ouvrir ses recherches
`a ces probl`emes. Sa grande culture algorithmique et sa vision originale de ces
probl`emes m’ont permis de me lancer dans l’´etude des aspects algorithmiques
de petits mondes. Ce fut un plaisir de travailler avec Nicolas Schabanel ; son
optimisme et ses id´ees originales m’ont permis de maintenir le cap sur des
probl`emes nouveaux et difﬁciles, et d’ouvrir mes recherches `a de nouveaux
domaines avec engouement. Je tiens `a le remercier d’avoir accept´e de co-encadrer
ma th`ese, ainsi que pour sa disponibilit´e, sa sympathie et son soutien.

J’ai rencontr´e Michel Morvan apr`es mon stage de DEA, il m’a alors fait
d´ecouvrir les probl´ematiques des grands r´eseaux d’interaction avec beaucoup
d’enthousiasme. Je le remercie de m’avoir propos´e de travailler avec lui sur
ce sujet de recherche passionnant. Sa grande connaissance de divers aspect de
l’informatique, sa culture pluridisciplinaire ainsi que son dynamisme m’ont
permis d’avoir de riches discussions avec lui sur les probl`emes que j’abordais,
m’apportant toujours un regard nouveau sur mes recherches, je l’en remercie.

Je remercie Pierre Fraigniaud et Jean-Claude K¨onig d’avoir accept´e d’ˆetre
les rapporteurs de ma th`ese. La pertinence et la pr´ecision de leurs commentaires
m’ont ouvert de nouvelles perspectives de recherche.

Je remercie Michel Habib et Christophe Paul qui ont co-encadr´e mon stage de
DEA au LIRMM, et m’ont r´eellement fait d´ecouvrir la recherche et ses attraits en
me proposant un sujet int´eressant, sur lequel j’ai pris plaisir `a travailler et ´ecrire
en leur compagnie dans une ambiance sympathique.

Je tiens `a remercier les membres de l’´equipe MC2 du LIP dans laquelle j’ai
pu effectuer ma th`ese de fac¸on tr`es agr´eable. Je remercie en particulier Marianne
Delorme et Jacques Mazoyer avec qui, depuis le d´ebut de mes ´etudes `a l’ENS
Lyon, j’ai pu avoir des discussions enrichissantes et sympathiques, tant sur la
science que sur le monde qui nous entoure.

Je remercie ´egalement mes camarades de th`ese et de bureaux avec qui j’ai

0

pu partager les difﬁcult´es ou les plaisirs d’une th`ese dans la bonne humeur et
l’humour, en particulier Nazim Fat`es, Emmanuel Jeandel, ´Eric Boix, Guillaume
Theyssier, Fr´ed´eric Chavanon, Gilles Radenne et Sylvain P´erifel.

Lors de ma th`ese, j’ai ´egalement eu la chance d’avoir des ´echanges scien-
tiﬁques enthousiasmants et motivants avec Philippe Duchon, Christoph D¨urr,
Pierre Fraigniaud, Cyril Gavoille, Nicolas Hanusse, Matthieu Latapy, Zvi Lotker,
Cristopher Moore et Ivan Rapaport, je les en remercie.

Pour mener `a bien ma th`ese, j’ai b´en´eﬁci´e du soutien d’une ´equipe de choc
que je souhaite remercier grandement : merci `a Fred&Mum, Emilie, Magali,
Fanfan ainsi qu’`a tous les amis cach´es dans ces points de suspension... Et un
grand merci `a Cl´ement !

Enﬁn, je remercie la machine `a caf´e et les Beatles sans qui rien de tout cela

n’aurait ´et´e possible.

Dear Sir or Madam will you read my book,
It took me years to write will you take a look,
[...] It’s a thousand pages give or take a few,
I’ll be writing more in a week or two,
I can make it longer if you like the style [...].
—Paperback writer, The Beatles—

Table des mati`eres

Introduction

Le contexte des grands r´eseaux d’interactions . . . . . . . . . . .
L’effet petit monde et la navigabilit´e . . . . . . . . . . . . . . . .
Probl´ematiques des petits mondes navigables
Mod`eles pour les r´eseaux d’interactions . . . . . . . . . . . . . .
Organisation du document

5
5
8
. . . . . . . . . . . 10
11
. . . . . . . . . . . . . . . . . . . . . 14

1 Pr´eliminaires : mod`ele de Kleinberg et principales d´eﬁnitions

1.1 Formalisme des graphes
1.2 Routage d´ecentralis´e dans un graphe augment´e
1.3 Le mod`ele de petit monde de J. Kleinberg (2000)
1.4 Classe des r´eseaux de Kleinberg . . . . . . . . . . . . . . . . . .

17
. . . . . . . . . . . . . . . . . . . . . . 17
18
. . . . . . . . . 20
21

. . . . . . . . . .

I Aspect dynamique de l’effet petit monde
2 Algorithmes de routage efﬁcaces et graphes petits mondes

25
27
. . . . . . . . . . . . . . . . . . . . . . . . 27
2.1 L’algorithme glouton de Kleinberg . . . . . . . . . . . . . . . . . 27
2.2 Am´eliorer l’efﬁcacit´e du routage grˆace `a une exploration restreinte
28
2.2.1 Compromis entre le recoupement et la profondeur d’ex-

Introduction .

. .

. .

.

.

2.2.2

ploration .
Lien valide et zone de s´ecurit´e . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . 30
31
2.3 Notre algorithme de routage
. . . . . . . . . . . . . . . . . . . . 32
2.4 Analyse de l’algorithme en dimension 1 . . . . . . . . . . . . . . 35
2.4.1 Analyse d’un processus de branchement g´en´erique . . . .
38
2.4.2 Analyse de l’algorithme . . . . . . . . . . . . . . . . . . 41
2.5 G´en´eralisation `a toute dimension . . . . . . . . . . . . . . . . . .
50
2.5.1 Lemmes g´eom´etriques pr´eliminaires . . . . . . . . . . . .
51
2.5.2 Analyse de l’algorithme . . . . . . . . . . . . . . . . . . 54
2.6 Remarques g´en´erales sur les performances et applications . . . . . 60

2

Table des mati`eres

.

3 Charge du r´eseau
Introduction .

63
. . . . . . . . . . . . . . . . . . . . . . . . . . . 63
3.1 Charge et esp´erance du nombre de noeuds visit´es . . . . . . . . .
65
3.1.1 Esp´erance du nombre de noeuds visit´es . . . . . . . . . .
66
3.1.2 Une premi`ere estimation de la charge . . . . . . . . . . . 66
69
3.2.1 Charge induite par l’algorithme glouton . . . . . . . . . . 71
3.2.1.1 Distance critique source-cible . . . . . . . . . . 71
72
3.2.1.2
3.2.1.3
76
3.2.2 Analyse de l’algorithme d’exploration . . . . . . . . . . . 79

Probabilit´e de visite d’un noeud . . . . . . . . .
Charge d’un lien de longueur ‘ > 1.
. . . . . .

3.2 Charge de deux algorithmes d´ecentralis´es

. . . . . . . . . . . . .

3.2.2.2

3.2.2.1

Charge d’un lien longue-distance pour une
source et une cible donn´ees . . . . . . . . . . .
Charge d’un lien longue-distance de longueur ‘

80
84
3.3 Autres param`etres de comparaison . . . . . . . . . . . . . . . . . 86
3.3.1 Taux moyen de liens locaux utilis´es dans un routage
87
3.3.2 Comparaison des longueurs de chemin . . . . . . . . . . . 91
3.4 Conclusion et perspectives . . . . . . . . . . . . . . . . . . . . . 93

. . .

Introduction .

II Aspect structurel de l’effet petit monde
4 Probl´ematique de la petit-mondisation

97
99
. . . . . . . . . . . . . . . . . . . . . . . . . . . 99
4.1 Vers une g´en´eralisation du mod`ele de Kleinberg . . . . . . . . . . 100
4.1.1 Les g´en´eralisations pour les r´eseaux sociaux . . . . . . . . 100
4.1.2 Caract´eristiques et limites structurelles du mod`ele . . . . . 101
4.1.3 Extension aux grilles inﬁnies . . . . . . . . . . . . . . . . 105
4.2 M´etriques de graphes et petits mondes . . . . . . . . . . . . . . . 108
4.2.1 Graphes petit-mondisables . . . . . . . . . . . . . . . . . 109

.

.

5 Processus de petit-mondisation

Introduction .

113
. . . . . . . . . . . . . . . . . . . . . . . . . . . 113
5.1 Graphes `a croissance mod´er´ee . . . . . . . . . . . . . . . . . . . 113
5.2 Petit-mondisation des graphes `a croissance mod´er´ee . . . . . . . . 115
5.3 Une caract´erisation non exhaustive des graphes petit-mondisables 122
5.4 D’autres distributions sont-elles possibles ?
. . . . . . . . . . . . 123
5.5 Un mod`ele qui peut engendrer (presque) toutes les distributions

.

de degr´es

. . . . . . . . . . . . . . . . . . . . . . . . . . . 126
5.6 Une autre approche : la petit-mondisation par plongement . . . . . 127
5.7 Discussion .
. . . . . . . . . . . . . . . . . . . . . . . . . . . 132

.

.

.

.

Table des mati`eres

3

. .

.

.

. .

6 Petit-mondisation distribu´ee

Introduction .

135
. . . . . . . . . . . . . . . . . . . . . . . . 135
6.1 Application aux r´eseaux informatiques d´ecentralis´es . . . . . . . . 136
6.2 Mod`ele ´etudi´e .
. . . . . . . . . . . . . . . . . . . . . . . 137
6.3 Petit-mondisation par ´echantillonnage multi-niveaux . . . . . . . 137
6.3.1 Le processus de petit-mondisation distribu´e . . . . . . . . 138
6.3.2 Analyse de l’algorithme de routage glouton dans le

.

.

6.4

graphe augment´e . . . . . . . . . . . . . . . . . . . . . . 141
Impl´ementations d´ecentralis´ees et performances . . . . . . . . . . 142
6.4.1 L’´etape d’exploration de LEADER . . . . . . . . . . . . . 143
6.4.2 L’´etape des requˆetes de contact longue-distance . . . . . . 145
. . . . . . . . . . . . . . . . . . . . . . . 150
6.4.3
6.5 Conclusion et perspectives . . . . . . . . . . . . . . . . . . . . . 151

Performances .

Conclusion g´en´erale

Index

Bibliographie

Bibliographie personnelle

153

161

163

169

Introduction

Cette th`ese est consacr´ee `a l’´etude des aspects algorithmiques du routage
dans les grands r´eseaux d’interactions pr´esentant la propri´et´e petit monde. Dans
cette introduction, nous pr´esentons le contexte de cette ´etude ainsi que les
probl´ematiques que nous avons choisi de d´evelopper.

Le contexte des grands r´eseaux d’interactions

On appelle r´eseau d’interactions tout ensemble d’entit´es interagissant de
fac¸on individuelle. Les grands r´eseaux d’interactions recouvrent ainsi des r´eseaux
aussi divers que le r´eseau des routeurs d’Internet, le r´eseau des contacts sociaux
entre individus, ou le r´eseau des r´eactions chimiques entre prot´eines dans le
m´etabolisme d’un ˆetre vivant. On parlera ´egalement de r´eseaux r´eels. Alors que
les interactions locales sont g´en´eralement bien connues (la communication entre
deux routeurs, la r´eaction entre deux prot´eines), le r´esultat global de l’ensemble
des interactions est encore mal compris. La compr´ehension de ces propri´et´es
globales touche pourtant `a des probl´ematiques essentielles : la dynamique des
interactions dans un r´eseau social ou un r´eseau informatique est par exemple li´ee
`a la probl´ematique de la propagation des virus (informatiques ou biologiques),
celle d’un r´eseau de distribution d’´electricit´e, au probl`eme de la robustesse d’un
grand r´eseau. L’augmentation r´ecente des capacit´es de traitement et de collecte
d’un grand nombre de donn´ees statistiques sur ces r´eseaux a permis l’essor des
´etudes de ces objets. En particulier, on a observ´e exp´erimentalement que ces
r´eseaux, a priori ´eloign´es, partageaient des propri´et´es macroscopiques communes.
Une de ces propri´et´es est l’effet petit monde qui est l’objet principal de cette th`ese.

L’´etude conjointe des propri´et´es macroscopiques de diff´erents types de
r´eseaux contient plusieurs probl´ematiques. Pour donner un sens `a une propri´et´e
observ´ee sur plusieurs ensembles de donn´ees statistiques, il faut s’assurer de sa
pertinence. En particulier, il faut garantir que la m´ethode de collecte des donn´ees
n’est pas biais´ee et que la propri´et´e est sp´eciﬁque, c’est-`a-dire qu’on ne l’ob-
serve pas sur tout ensemble de donn´ees arbitraire, ou al´eatoire uniforme. Une fois

6

Introduction

qu’une propri´et´e pertinente est isol´ee se pose la question de son apparition dans le
r´eseau : est-ce dˆu `a un processus dynamique de construction du r´eseau ? Comment
peut-on la reproduire ? R´ev`ele-telle un principe g´en´eral sous-jacent ? Les r´eponses
`a ces questions peuvent avoir des applications int´eressantes si la propri´et´e pr´esente
un avantage pratique (on peut par exemple penser aux m´ecanismes de diffusion de
rumeurs dans un r´eseau social pour une entreprise de marketing). Pour r´esumer,
les ´etudes sur les grands r´eseaux d’interactions ont trois objectifs principaux :

– isoler les propri´et´es communes pertinentes,
– les reproduire,
– et les expliquer.

FIG. 1 : Exemple de grand r´eseau d’interactions : le r´eseau des pages web qui
contient plusieurs millions de noeuds [BKM+00].

Nous en venons `a pr´esent aux trois principales propri´et´es qui ont ´et´e observ´ees
exp´erimentalement : le petit diam`etre, la distribution des degr´es suivant une loi
de puissance et la forte densit´e locale ou clustering.

1. Petit diam`etre. Le diam`etre d’un r´eseau est formellement le plus long des plus
courts chemins entre deux entit´es, ou noeuds, du r´eseau, via ses connexions. Dans
l’´etude des grands r´eseaux d’interactions, il est souvent fait r´ef´erence `a un petit
diam`etre pour d´ecrire l’observation d’une petite distance moyenne, le diam`etre
´etant g´en´eralement trop coˆuteux `a obtenir (puisqu’il s’agit d’un pire cas). Dans de
nombreux r´eseaux d’interactions, la distance moyenne observ´ee est, de fac¸on sur-
prenante, de l’ordre du logarithme du nombre total de noeuds, alors que le nombre
de connexions, ou liens, reste tr`es inf´erieur au carr´e du nombre de noeuds. New-
man [New01] donne l’exemple d’un r´eseau de co-auteurs d’articles de biologie
de 1 520 251 noeuds et 11 803 064 liens, dans lequel la longueur moyenne d’un
chemin est 4,9. Un autre exemple est l’´etude du r´eseau Internet de 10 597 noeuds
et 31 992 liens effectu´ee par Faloutsos et al. [FFF99], o`u la longueur moyenne
d’un chemin est de 3,3.

@@@@@@hyperlienPage webIntroduction

7

Si les chemins sont tr`es courts par rapport `a la densit´e de liens des r´eseaux,
la pertinence de cette propri´et´e peut toutefois ˆetre remise en cause lorsque l’on
remarque qu’un r´eseau al´eatoire uniforme, o`u chaque paire de noeuds est reli´ee
ind´ependamment avec une probabilit´e ﬁx´ee, pr´esente ´egalement un diam`etre
logarithmique en son nombre de noeuds lorsque le nombre d’arˆete est tr`es faible
(de l’ordre de n log n pour n noeuds).

2. Distribution des degr´es suivant une loi de puissance. On dit qu’un r´eseau
pr´esente une distribution des degr´es suivant une loi de puissance si le nombre de
noeuds de degr´e k est proportionnel `a 1/kα, pour une constante α > 0, sur un in-
tervalle de plusieurs ordres de grandeur (par exemple entre k = 10 et k = 106). En
1999, Faloutsos et al. [FFF99] ont observ´e que le r´eseau Internet pr´esentait cette
propri´et´e. Par la suite, elle a ´egalement ´et´e observ´ee dans des r´eseaux de pages
web, et des r´eseaux de distribution d’´electricit´e [New03]. Cette d´ecouverte a ´et´e
cruciale pour les travaux sur la propagation des virus dans les r´eseaux r´eels. Avant
cette d´ecouverte, le mod`ele usuel pour ce type d’´etude ´etait un r´eseau al´eatoire
uniforme, sur lequel on observe un effet de seuil pour la transmission d’un virus,
c’est-`a-dire qu’en dessous d’une fraction d’individus infect´es, le virus cesse de se
r´epandre. Mais une ´etude similaire men´ee sur un mod`ele pr´esentant une distribu-
tion de degr´es en loi de puissance a donn´e des r´esultats diff´erents [PSV00], en
particulier l’effet de seuil disparaˆıt. Une telle observation a donc remis en cause
les m´ecanismes mis en place pour freiner la propagation des virus et les mod`eles
utilis´es jusqu’alors.

R´ecemment, les travaux d’Achlioptas et al. [ACKM05] ont toutefois mis en
doute la pertinence de la loi de puissance comme propri´et´e caract´eristique, en
mettant en ´evidence un risque de biais li´e `a la m´ethode de collecte des donn´ees.
Ils d´emontrent qu’en parcourant un r´eseau al´eatoire uniforme selon un processus
similaire `a celui utilis´e pour les parcours exp´erimentaux du r´eseau des routeurs
Internet (le parcours par traceroute `a partir d’un faible nombre de sources), on
obtient des donn´ees statistiques pr´esentant une distribution des degr´es suivant
une loi de puissance. Il est pourtant connu que le r´eseau al´eatoire uniforme
pr´esente une distribution des degr´es suivant une loi de Poisson [ER59]. Cette
´etude souligne le risque de baser la construction de mod`eles sur une propri´et´e qui
pourrait n’ˆetre qu’un biais de la mesure exp´erimentale.

3. Forte densit´e locale ou clustering. On parle de forte densit´e locale d’un r´eseau
lorsque les voisins d’un mˆeme noeud sont tr`es reli´es entre eux. Dans un r´eseau
social, par exemple, cela signiﬁe que les amis d’un mˆeme individu ont une grande
probabilit´e d’ˆetre amis entre eux. Pour quantiﬁer cette propri´et´e, Watts et Strogatz
ont introduit en 1998 la notion formelle de coefﬁcient de clustering [WS98]. Il
s’agit de la moyenne, sur tous les noeuds u, du ratio du nombre de voisins de u

8

Introduction

qui sont reli´es entre eux sur le nombre total de liens qui pourraient potentiellement
exister entre ces voisins. Ils observent que ce coefﬁcient s’´el`eve `a 0,2 dans un
r´eseau de collaborations entre acteurs de cin´ema comprenant 449 913 noeuds et
25 516 582 liens, alors qu’en construisant un r´eseau al´eatoire uniforme ayant le
mˆeme nombre de noeuds et de liens, on obtient un coefﬁcient de l’ordre de 10−4
seulement.

Toutefois, cette propri´et´e semble encore mal d´eﬁnie par le coefﬁcient de clus-
tering. Il est en effet possible de construire des r´eseaux ayant un fort coefﬁcient de
clustering alors que, majoritairement, les noeuds n’ont pas de voisins reli´es entre
eux. Un exemple est illustr´e sur la ﬁgure ci-dessous, o`u le coefﬁcient de clustering
vaut environ 1/2 alors que n/2 noeuds sont dispos´es en chaˆıne et n’ont aucun de
leurs voisins reli´es entre eux.

Ces trois propri´et´es contiennent des ´el´ements essentiels aux probl´ematiques de
diffusion dans les r´eseaux, toutefois leur pertinence n’est pas assur´ee. Dans cette
th`ese, nous ´etudions l’effet petit monde, d´ecrit dans la section suivante, qui inclut
les propri´et´es de petit diam`etre et forte densit´e locale, et poss`ede une propri´et´e
pertinente suppl´ementaire : le routage efﬁcace, ou navigabilit´e. On pourra se re-
porter `a [AB02] et [New03] pour une vue d’ensemble des ´etudes sur les grands
r´eseaux d’interactions jusqu’en 2002 et 2003 respectivement.

L’effet petit monde et la navigabilit´e

L’effet petit monde tient son nom de l’expression populaire « le monde est
petit »d´esignant la surprise de constater que deux connaissances d’un mˆeme in-
dividu, a priori sans rapport, se connaissent entre elles. L’´etude des relations
sociales en tant que r´eseau d’interactions date des ann´ees 30, en particulier la
cr´eation par le psychologue Jacob-Levy Moreno de la sociom´etrie. Celle-ci a pour
but la mesure objective des relations sociales au sein d’un groupe. C’est dans une
p´eriode ult´erieure de d´eveloppement de la science des r´eseaux sociaux que les psy-
chologues se sont int´eress´es `a l’effet petit monde [TM69, dSPK78, KB78]. En par-
ticulier, Stanley Milgram a effectu´e une exp´erience sociologique en 1967 [Mil67]
en demandant `a 300 habitants du Nebraska et de Boston de faire parvenir une
lettre `a un habitant de Boston dont ils ne connaissaient que le lieu d’habitation
et la profession, en ne la retransmettant qu’`a une personne qu’ils connaissaient

}}noeudsnoeudsn/2n/4Introduction

9

personnellement (et en it´erant le processus jusqu’`a atteindre la personne cible).
Relativement peu de lettres sont arriv´ees `a destination (environ un quart), mais
le r´esultat surprenant fut que la longueur moyenne d’une chaˆıne de porteurs du
message de son origine `a sa destination ´etait tr`es faible (5,2) en regard du nombre
d’individus et de leur ´eloignement g´eographique et social. Cette exp´erience a par
ailleurs ´et´e reproduite r´ecemment par Dodds et al. [DMW03] sur 60 000 indivi-
dus, ´echangeant cette fois des e-mails, et a aboutit `a des chaˆınes de messages de
longueur moyenne 4,1 entre individus de continents diff´erents. On pourrait pen-
ser qu’il n’est pas vraiment surprenant que les chaˆınes soient si courtes, puis-
qu’en supposant que chaque individu ait seulement 10 connaissances, chacun
pourrait a priori atteindre 106 individus `a distance 6. Mais les r´eseaux sociaux
pr´esentent un fort coefﬁcient de clustering, il est donc probable que les connais-
sances imm´ediates d’un individu n’aient qu’une seule connaissance ´etrang`ere `a ce
voisinage, et que l’on atteigne seulement 11 individus `a distance 2 par exemple,
c’est pourquoi cette propri´et´e est remarquable.

La notion de petit monde n’a pas aujourd’hui de d´eﬁnition formelle ; elle est
d´eﬁnie, dans certains articles ([WS98]), comme la combinaison d’un fort coefﬁ-
cient de clustering et d’un petit diam`etre. L’objet de cette th`ese est d’approfondir
l’explication dynamique et algorithmique de ce ph´enom`ene propos´ee par Klein-
berg en 2000 [Kle00] qui y introduisit la notion de navigabilit´e. Il s’agit de ca-
ract´eriser non seulement la longueur des chemins, mais aussi la fac¸on dont ils
sont d´ecouverts. Dans l’exp´erience de Milgram, les individus n’utilisent que leurs
contacts locaux pour renvoyer la lettre ; il s’agit donc d’un routage d´ecentralis´e,
en ce sens que l’on n’utilise qu’une vue locale du r´eseau pour transmettre le mes-
sage. C’´etait aussi le cas de la navigation `a travers le r´eseau des pages web il
y a quelques ann´ees1 , qui se faisait d’une page `a l’autre sans connaˆıtre la carte
globale du r´eseau [AJB99, Kai99]. Par ailleurs, la d´ecouverte des chemins de
fac¸on d´ecentralis´ee est une n´ecessit´e pour les r´eseaux d’interactions r´eels qui com-
portent un tr`es grand nombre de sommets et o`u une recherche classique des plus
courts chemins n’est pas possible, car tr`es coˆuteuse en temps.

La propri´et´e de navigabilit´e de l’effet petit monde est une caract´erisation plus
sp´eciﬁque que la propri´et´e de petit diam`etre utilis´ee jusqu’alors, pour le d´eﬁnir.
En particulier, mˆeme si un r´eseau al´eatoire uniforme pr´esente un diam`etre lo-
garithmique en le nombre de noeuds, Kleinberg montre qu’il n’existe aucun al-
gorithme d´ecentralis´e qui puisse d´ecouvrir ces chemins courts (i.e. polylogarith-
miques) [Kle00]. On appellera par la suite petit monde navigable tout r´eseau dont
le diam`etre est polylogarithmique en le nombre de noeuds, et dont les chemins po-
lylogarithmiques peuvent ˆetre calcul´es par un algorithme d´ecentralis´e. On parlera

1Aujourd’hui, l’utilisation massive de moteurs de recherche comme Google pour acc´eder aux

pages web nous am`ene n´eanmoins `a nuancer ce fait.

10

Introduction

simplement de petit monde lorsqu’il n’y a pas d’ambigu¨ıt´e.

Probl´ematiques des petits mondes navigables

En ´etudiant l’effet petit monde sous l’angle algorithmique de la navigabilit´e,
nous abordons le probl`eme de la compr´ehension d’un ph´enom`ene r´eel qui
contient des probl´ematiques fondamentales pour l’informatique.

Compr´ehension de l’effet petit monde. La compr´ehension du ph´enom`ene petit
monde observ´e dans les r´eseaux sociaux contient deux questions essentielles :

– quel est le type d’algorithme de routage d´ecentralis´e utilis´e pour transmettre

– existe-t-il une structure sous-jacente particuli`ere qui permet la construction

un message dans un r´eseau social ?

d’un r´eseau petit monde navigable ?

Ces questions sont intimement li´ees puisque l’algorithme de routage utilise la
structure du r´eseau pour naviguer. Dans cette th`ese, nous allons d´ecrire ces deux
aspects du probl`eme comme l’aspect dynamique et l’aspect structurel de l’effet
petit monde :

– d’une part, un r´eseau petit monde navigable doit avoir une structure qui
pr´esente un faible diam`etre et qui permet de stocker de mani`ere locale les
informations requises pour ´evaluer les positions relatives des noeuds (aspect
structurel) ;

– d’autre part, il doit exister un processus de routage d´ecentralis´e qui peut en

tirer parti (aspect dynamique).

Nous traiterons l’aspect dynamique dans la premi`ere partie de ce document et
l’aspect structurel dans la seconde.

Probl´ematiques informatiques des petits mondes. Ces derni`eres ann´ees, le
r´eseau Internet a connu un changement d’´echelle rendant irr´ealistes des algo-
rithmes de routage centralis´es. Le d´eveloppement des algorithmes d´ecentralis´es
qui n’utilisent qu’une vue locale du r´eseau a permis de passer `a grande ´echelle
et de cr´eer de nouveaux grands r´eseaux informatiques totalement d´ecentralis´es,
comme les r´eseaux pair-`a-pair. Un protocole pair-`a-pair est un protocole
d’´echange de ﬁchiers entre ordinateurs jouant tous le mˆeme rˆole, c’est-`a-dire qu’il
n’y a pas, en g´en´eral, de serveur central (on peut citer les r´eseaux CAN [RFH+01]
et Chord [SMK+01]). Outre la propri´et´e de passage `a l’´echelle, un tel r´eseau
pr´esente ´egalement une bonne r´esistance aux pannes et aux attaques cibl´ees,
contrairement `a un r´eseau centralis´e, puisque la mise hors service d’un des or-
dinateurs du r´eseau a peu d’inﬂuence sur son fonctionnement global. Par ailleurs,
les ﬁchiers ´echang´es sur les r´eseaux pair-`a-pair sont souvent de grande taille (ﬁ-

Introduction

11

chiers vid´eo), il est donc n´ecessaire de construire des algorithmes d´edi´es qui sont
d´ecentralis´es et calculent des chemins courts. La sp´eciﬁcit´e du routage dans les
grands r´eseaux informatiques d´ecentralis´es et dans les petits mondes est donc si-
milaire ; nous verrons dans cette th`ese que cette sym´etrie permet un va-et-vient
tr`es riche entre les probl`emes et applications de l’un et l’autre domaine. On dis-
tingue deux probl´ematiques principales de l’effet petit monde pour l’informa-
tique :

– construire de nouveaux algorithmes d´ecentralis´es efﬁcaces, d´edi´es aux

grands r´eseaux ;

– construire de nouvelles architectures de grands r´eseaux de petit diam`etre,

dont les chemins courts peuvent ˆetre calcul´es de fac¸on d´ecentralis´ee.

Mod`eles pour les r´eseaux d’interactions

Dans la premi`ere partie de cette th`ese, nous commenc¸ons par baser notre
´etude de l’aspect dynamique de l’effet petit monde sur le seul mod`ele de pe-
tit monde navigable existant au d´ebut de cette th`ese : le mod`ele de Kleinberg.
Dans la deuxi`eme partie, nous nous employons avec succ`es `a d´eﬁnir un mod`ele
plus g´en´eral. De nombreux mod`eles ont ´et´e introduits pour repr´esenter les r´eseaux
d’interactions, ou certaines de leur propri´et´es statistiques, et ont inspir´e le mod`ele
de Kleinberg. Nous rappelons les principaux dans cette section.

Un r´eseau se repr´esente de fac¸on naturelle par un graphe. Nous utiliserons
dans toute la suite l’un ou l’autre vocabulaire de fac¸on indiff´erenci´ee : un noeud
correspond `a un sommet et un lien `a une arˆete. On trouvera la d´eﬁnition formelle
d’un graphe dans le pr´eambule.

Graphe al´eatoire uniforme d’Erd¨os et R´enyi. Le premier graphe ´etudi´e comme
un mod`ele possible pour les r´eseaux r´eels fut le graphe al´eatoire G(n, p) d’Erd¨os
et R´enyi [ER59]. Il s’agit d’un graphe al´eatoire uniforme sur n sommets o`u
il existe une arˆete entre deux sommets avec une probabilit´e p constante. Cet
objet math´ematique a ´et´e tr`es ´etudi´e, on pourra se r´ef´erer `a [Bol85] pour une
vue d’ensemble des r´esultats. Nous nous int´eressons seulement ici `a son rˆole
historique en tant que mod`ele pour les r´eseaux d’interactions, car il ´etait consid´er´e
jusqu’`a r´ecemment comme le seul mod`ele, par d´efaut, pour les r´eseaux r´eels.
Or les r´ecentes observations exp´erimentales (qui ´etaient impossibles ou tr`es
partielles auparavant) ont mis en lumi`ere d’importantes diff´erences. Ainsi, la
distribution des degr´es suit une loi de Poisson (exponentielle), alors qu’il s’agit
d’une loi de puissance pour la grande majorit´e des r´eseaux r´eels. Il s’agit l`a
d’une diff´erence importante puisqu’elle caract´erise l’h´et´erog´en´eit´e du r´eseau. Les
noeuds jouant tous le mˆeme rˆole dans un graphe d’Erd¨os-R´enyi, le graphe ne

12

Introduction

poss`ede pas de propri´et´e discriminante, et les degr´es sont naturellement r´epartis
de fac¸on ´egale autour de la moyenne. Pour la mˆeme raison, ce graphe pr´esente
un faible coefﬁcient de clustering, puisque les voisins d’un noeud n’ont aucune
raison d’ˆetre davantage reli´es entre eux que deux noeuds pris au hasard. Enﬁn,
mˆeme si ce graphe pr´esente un diam`etre polylogarithmique en le nombre de
sommets, on peut montrer que tout algorithme d´ecentralis´e y calcule des chemins
de longueur au moins polynomiale [Kle00] ; ce n’est donc pas un petit monde na-
vigable. Ces diff´erences ont montr´e l’importance de trouver un mod`ele plus ﬁd`ele.

Mod`ele d’Albert et Barabasi pour la distribution des degr´es. Suite `a la
d´ecouverte de distributions de degr´es suivant une loi de puissance dans de
nombreux r´eseaux r´eels, la construction de nouveaux mod`eles a ´et´e dirig´ee
vers la reproduction de cette propri´et´e. En 1999, Albert et Barabasi [BA99]
ont popularis´e un mod`ele dynamique permettant d’obtenir une distribution
des degr´es suivant une loi de puissance. Ce mod`ele consiste `a construire un
r´eseau noeud par noeud, en reliant chaque nouveau noeud pr´ef´erentiellement
aux sommets existants de plus hauts degr´es. Il est connu sous le nom de
l’attachement pr´ef´erentiel. Des processus similaires avaient ´et´e introduits d`es
les ann´ees 20 par des math´ematiciens
[EP23, Yul24, Zip49], puis ´etudi´es en
sociologie [Sim55, dSP76], mais ce fut la premi`ere ´etude de ce processus en tant
que mod`ele d’un ph´enom`ene physique. L’int´erˆet de ce mod`ele est sa construction
dynamique, puisque dans de nombreux r´eseaux r´eels, des noeuds et des liens sont
fr´equemment ajout´es et enlev´es au cours du temps (on peut penser au r´eseau des
pages web par exemple).

Nous pr´esentons maintenant

d´evelopp´es sp´eciﬁquement pour reproduire l’effet petit monde.

les deux principaux mod`eles qui ont

´et´e

Mod`ele de petit monde non navigable de Watts et Strogatz. En introduisant la
notion formelle de coefﬁcient de clustering, Watts et Strogatz [WS98] ont propos´e
un mod`ele qui pr´esente `a la fois un petit diam`etre et un fort coefﬁcient de cluste-
ring. Une variante du mod`ele a ´egalement ´et´e d´evelopp´ee et analys´ee par Newman
et Watts [NW99]. Le mod`ele est construit de la fac¸on suivante : `a partir d’un an-
neau r´egulier de n sommets et k arˆetes par sommet, distribu´ees r´eguli`erement par
rapport `a leur origine, on redirige ind´ependamment chaque extr´emit´e d’arˆete avec
une probabilit´e p constante, donn´ee en param`etre, vers un sommet de l’anneau
choisi de mani`ere al´eatoire uniforme. La ﬁgure 2 illustre ce mod`ele pour p = 0,
p = 1 et une valeur interm´ediaire 0 < p < 1 qui donne lieu `a l’apparition des
deux propri´et´es de petit diam`etre et fort clustering simultan´ement. Le nombre k
d’arˆetes de d´epart n’inﬂue pas sur le mod`ele.

Introduction

13

FIG. 2 : Mod`ele de Watts et Strogatz

En cherchant `a reproduire `a la fois le petit diam`etre pr´esent dans les graphes
al´eatoires uniformes et le fort coefﬁcient de clustering pr´esent dans les grilles
r´eguli`eres, Watts et Strogatz ont eu l’id´ee d’introduire une part d’al´eatoire sur un
r´eseau r´egulier et ils ont obtenu les deux propri´et´es simultan´ees pour un assez
grand intervalle de valeurs du param`etre p. Toutefois, ce mod`ele ne pr´esente pas
la propri´et´e dynamique de navigabilit´e. Pr´ecis´ement, Kleinberg [Kle00] a montr´e
que tout algorithme de routage d´ecentralis´e calcule, entre deux sommets de ce
graphe, un chemin de longueur au moins polynomiale en n. Cela signiﬁe que,
mˆeme lorsque le param`etre p donne naissance `a des chemins polylogarithmiques
en n entre toute paire de sommets, il n’existe pas d’algorithme qui puisse les
d´ecouvrir en n’ayant qu’une vue locale du graphe.

Mod`ele de petit monde navigable de Kleinberg. Le premier mod`ele de petit
monde pr´esentant la propri´et´e dynamique de navigabilit´e a ´et´e introduit par Klein-
berg en 2000 [Kle00]. Il s’agit d’une grille r´eguli`ere de dimension 2, augment´ee
d’un arc al´eatoire par sommet u, dont la destination est v avec probabilit´e propor-
tionnelle `a 1/|u − v|s, pour chaque v, o`u |u − v| est la distance ‘1 entre les deux
noeuds dans la grille r´eguli`ere, et s > 0 un param`etre2. La principale diff´erence
avec le mod`ele de Watts et Strogatz est la distribution non uniforme des liens
al´eatoires, elle est en effet fortement li´ee aux positions des noeuds sur la grille
sous-jacente. Kleinberg montre que lorsque s = 2, un algorithme de routage glou-
ton, tr`es simple et d´ecentralis´e, calcule un chemin de longueur polylogarithmique
en la taille du graphe (O(log2 n) pour n noeuds) entre toute paire de sommets.
Nous ´etudierons l’optimalit´e de ce routage dans la premi`ere partie.

2On trouvera une d´eﬁnition d´etaill´ee de ce mod`ele dans le pr´eambule, page 22

p=1p=00<p<1Grand diamètre et fort clustering.Petit diamètre et fort clustering.Petit diamètre et faible clustering.14

Introduction

Ce mod`ele met en valeur deux types d’informations contenues dans un r´eseau :
une information globale, mais partielle, partag´ee par tous (repr´esent´ee par la
grille) ; et une information locale qui permet la navigation (repr´esent´ee par les
liens al´eatoires). Un algorithme est alors dit d´ecentralis´e s’il calcule des chemins
en connaissant les positions de tous les noeuds sur la grille, mais en n’acc´edant `a
la position de la destination d’un lien al´eatoire qu’en visitant son origine. Klein-
berg propose une analogie avec un r´eseau social, o`u la grille serait l’ensemble
des positions g´eographiques des individus et les liens al´eatoires les connais-
sances amicales d’un individu dont lui seul connaˆıt les positions. Comme les liens
suppl´ementaires sont distribu´es selon une loi reli´ee `a la structure sous-jacente de
l’information globale, ils stockent cette information dans un certain sens, puisque
les d´ecisions de routage, prises en fonction des liens al´eatoires, sont corr´el´ees `a la
position des noeuds dans la structure sous-jacente. Il s’agit d’une caract´eristique
structurelle de l’effet petit monde pour ce mod`ele que nous ´etudierons dans la
deuxi`eme partie.

Un r´esultat r´ecent de Clauset et Moore [CM03] vient par ailleurs renforcer
la pertinence du mod`ele de Kleinberg et de sa distribution. Clauset et Moore ont
simul´e un processus de reconnexion dynamique des liens dans l’anneau que l’on
peut comparer, par exemple, au comportement d’un internaute qui cr´eerait un nou-
veau marque-page vers une page web lorsque la recherche d’une page a pris un
temps sup´erieur `a un certain seuil. Ils ont alors observ´e exp´erimentalement que la
distribution des liens convergeait vers une loi harmonique (la distribution des arcs
al´eatoires du mod`ele de Kleinberg pour l’anneau) tandis que l’esp´erance de lon-
gueur des chemins calcul´es par l’algorithme de routage glouton convergeait vers
O(log2 n), pour n noeuds.

Du point de vue informatique, le mod`ele de Kleinberg pr´esente des ca-
ract´eristiques algorithmiques int´eressantes que ne pr´esentaient pas les mod`eles
pr´ec´edents (mod`eles d’Erd¨os et R´enyi, et de Watts et Strogatz). Ajoutons que si
le mod`ele de Kleinberg reproduit bien la propri´et´e de petit monde navigable, une
critique fr´equente est qu’il ne reproduit pas la distribution des degr´es observ´ee sur
les r´eseaux r´eels, puisque chaque sommet a un degr´e sortant constant.

Organisation du document

Cette th`ese se structure en trois parties : un premier chapitre de pr´eliminaires
qui donne les d´eﬁnitions et propri´et´es des principaux objets utilis´es dans la suite
du document, une premi`ere partie consacr´ee `a l’aspect dynamique de l’effet petit
monde et une seconde partie consacr´ee `a son aspect structurel.

La premi`ere partie est divis´ee en deux chapitres. Dans le chapitre 2, nous
´etudions l’efﬁcacit´e des algorithmes de routage existant dans le cadre du mod`ele

Introduction

15

de Kleinberg original et nous pr´esentons un nouvel algorithme de routage
d´ecentralis´e qui reste le meilleur, `a notre connaissance, en terme de longueur de
chemin. Nous ´etudions ´egalement la pertinence des diff´erents algorithmes sous
l’angle de la compr´ehension de l’effet petit monde dans un r´eseau social. Apr`es
avoir ´etudi´e les am´eliorations du routage d´ecentralis´e en terme de longueur de
chemin, nous analysons, dans le chapitre suivant, leurs cons´equences sur la charge
du r´eseau. Cette ´etude accentue l’importance du compromis entre la charge et la
longueur du chemin dans un tel r´eseau et nous permet d’obtenir un moyen de dis-
criminer deux types d’algorithmes via l’observation de la charge qu’ils induisent
sur les liens les plus longs.

Dans la deuxi`eme partie, nous tentons d’extraire du mod`ele ´etudi´e jusqu’ici
les caract´eristiques intrins`eques qui permettent l’´emergence de la navigabilit´e, en
particulier les propri´et´es de la structure sous-jacente. Dans le chapitre 5, nous pro-
posons des mod`eles de petits mondes navigables qui g´en´eralisent celui de Klein-
berg. Pour cela, nous pr´esentons deux processus d’augmentation d’une grande
classe de graphes en graphes petits mondes par l’ajout d’un arc al´eatoire par
noeud : l’un bas´e la croissance des boules du graphes, et l’autre sur l’existence
d’un plongement de faible distorsion du graphe dans un espace euclidien de faible
dimension. Dans le chapitre 6, nous ´etendons notre ´etude en exhibant un proces-
sus enti`erement distribu´e qui permet d’augmenter un graphe en un petit monde,
en ajoutant un seul lien par noeud. Ces r´esultats mettent en valeur l’importance de
la cr´eation de raccourcis dans le r´eseau pour l’´emergence de l’effet petit monde,
tandis que la m´etrique sous-jacente semble jouer un rˆole moins d´eterminant.

Les r´esultats pr´esent´es dans cette th`ese sont pour la plupart issus de collabo-
rations avec d’autres chercheurs : Philippe Duchon, Nicolas Hanusse, Cristopher
Moore et Nicolas Schabanel. Ces r´esultats ont fait l’objet de publications dans
des conf´erences et journaux internationaux : [1, 2] pour le chapitre 2 et [3, 4] pour
le chapitre 5. Le chapitre 6 a fait l’objet d’un article soumis pour publication [7].

Pour la coh´erence de ce document, j’ai choisi de pr´esenter ici mon tra-
vail de th`ese portant sur les aspects algorithmique des petits mondes. J’ai par
ailleurs travaill´e durant ma th`ese sur les probl`emes de graphes sandwichs, dont
la probl´ematique est disjointe de celle de ce document. Il s’agit d’un probl`eme
central en algorithmique des graphes, g´en´eralisant les probl`emes de compl´etion et
de reconnaissance. ´Etant donn´es un graphe G et un surgraphe G0 de G, on cherche
`a compl´eter G de fac¸on `a ce qu’il satisfasse une propri´et´e de graphe donn´ee en
n’utilisant seulement les arˆetes pr´esentes dans le surgraphe G0. On appelle un
graphe correspondant ´eventuel un graphe sandwich pour la propri´et´e. En collabo-
ration avec Michel Habib et Christophe Paul, nous avons montr´e que le probl`eme
de l’´enum´eration des modules sandwichs pouvait ˆetre exponentiel [6], contrai-
rement `a ce qu’afﬁrmait la litt´erature. D’autre part, nous avons ´etendu l’´etude

16

Introduction

des probl`emes sandwichs aux ordres partiels. En collaboration avec Michel Ha-
bib, David Kelly et Christophe Paul, nous avons donn´e des algorithmes polyno-
miaux pour certaines classes d’ordres partiels, et d´emontr´e la NP-compl´etude du
probl`eme sandwich pour d’autres classes [5]. Cela a mis en ´evidence qu’il n’existe
pas de relation de complexit´e directe entre les probl`emes sandwich non orient´es
et les probl`emes d’ordres partiel sandwich correspondants.

Chapitre 1

Pr´eliminaires : mod`ele de Kleinberg
et principales d´eﬁnitions

Ce chapitre donne les d´eﬁnitions formelles des objets et notions ´etudi´es dans la
suite du document. Il pr´esente les principaux r´esultats pr´e-existants sur le mod`ele
de petit monde de Kleinberg.

1.1 Formalisme des graphes

Nous rappelons ici la d´eﬁnition usuelle d’un graphe, naturellement utilis´e pour

repr´esenter un r´eseau.

D´eﬁnition 1.1 (Graphe non orient´e)
Un graphe non orient´e est un couple (V, E) o`u V est un ensemble d’objets, appel´es
sommets du graphe, et E est un sous-ensemble de P2(V ), l’ensemble des parties
`a deux ´el´ements de V , dont les ´el´ements sont appel´es arˆetes du graphe. On note
{u, v} l’arˆete entre deux sommets u, v ∈ V lorsque {u, v} ∈ E.

Dans de nombreux r´eseaux, les connexions entre les noeuds ne sont pas
sym´etriques mais orient´ees. On peut citer l’exemple du graphe des pages web o`u
une page populaire (celle du groupe The Beatles) est point´ee par d’autres pages
web (celles d’amateurs des Beatles) sans avoir de liens r´eciproques vers ces pages.
Dans notre ´etude du routage dans les grands r´eseaux d’interactions, un chemin de
routage entre deux noeuds n’est valide qu’`a la condition que chaque connexion
d’un noeud vers un autre soit orient´ee dans le bon sens (on ne peut pas acc´eder `a
la page web d’un amateur des Beatles `a partir de la page web des Beatles, `a moins
d’y ˆetre arriv´e via la page web de cet amateur).

18

Chapitre 1 : Pr´eliminaires : mod`ele de Kleinberg et principales d´eﬁnitions

D´eﬁnition 1.2 (Graphe orient´e)
Un graphe orient´e est un couple (V, E) o`u V est l’ensemble des sommets du
graphe et E est un sous-ensemble de V 2 dont les ´el´ements sont appel´es arcs du
graphe. On note (u, v) l’arc du sommet u vers le sommet v lorsque (u, v) ∈ E.
On remarquera que tout graphe non orient´e peut ˆetre transform´e en un graphe
orient´e en remplac¸ant chaque arˆete {u, v} par deux arcs sym´etriques (u, v) et
(v, u). Dans toute la suite, on ne consid´erera que des graphes orient´es.

Les d´eﬁnitions suivantes nous seront utiles pour formaliser le routage dans un

r´eseau.
D´eﬁnition 1.3 (Voisin ou contact)
´Etant donn´e un sommet u d’un graphe orient´e G = (V, E), tout sommet v ∈ V
tel que (u, v) ∈ E est appel´e voisin ou contact de u.

D´eﬁnition 1.4 (Chemin)
´Etant donn´e un graphe orient´e G = (V, E) et deux sommets u, v ∈ V , on appelle
chemin de u vers v de longueur ‘ toute suite x0, x1, . . . , x‘−1, x‘ o`u x0 = u,
x‘ = v et pour tout 0 6 i 6 ‘ − 1, (xi, xi+1) ∈ E.
D´eﬁnition 1.5 (Distance)
´Etant donn´e un graphe orient´e G = (V, E) et deux sommets u, v ∈ V , on appelle
distance de u `a v la longueur du plus court chemin de u vers v.

D´eﬁnition 1.6 (Diam`etre)
Le diam`etre d’un graphe G est la plus grande des distances entre les paires de
sommets de G.

Enﬁn, nous ne consid´ererons que des graphes connexes dans toute la suite,
c’est-`a-dire pour lesquels il existe un chemin entre tout couple de sommet. En
effet, l’´etude d’algorithmes de routage dans un graphe non connexe peut se
faire ind´ependamment sur chaque composante connexe, c’est-`a-dire chaque sous-
ensemble de sommets appartenant `a la mˆeme classe d’´equivalence de la relation
« est reli´e par un chemin `a ».

1.2 Routage d´ecentralis´e dans un graphe augment´e

Dans cette section, nous d´eﬁnissons formellement

la notion de routage
d´ecentralis´e. Contrairement au routage centralis´e, le routage d´ecentralis´e utilise
seulement la connaissance locale de chaque noeud visit´e pour construire un che-
min. Au sens fort, cette connaissance locale est r´eduite `a l’ensemble des contacts
du noeud. On peut cependant ´etendre cette connaissance dans le cas o`u le r´eseau

1.2 : Routage d´ecentralis´e dans un graphe augment´e

19

poss`ede deux ensembles de liens, en s’inspirant du mod`ele de Kleinberg. Le pre-
mier ensemble de liens est suppos´e connu de tous les noeuds tandis que pour
l’autre ensemble, chaque lien n’est connu que de son origine. On parle alors de
graphe augment´e. Nous donnons la d´eﬁnition d’un algorithme d´ecentralis´e dans
le cadre de ce type de graphe.

D´eﬁnition 1.7 (Graphe augment´e)
Un graphe augment´e G = (V, E, E0) est un graphe obtenu `a partir d’un graphe
H = (V, E), en ajoutant un ensemble d’arˆetes suppl´ementaires E0 sur V .
La distance sous-jacente de u `a v dans G est la distance de u `a v dans H.

D´eﬁnition 1.8 (Algorithme de routage)
Un algorithme de routage A dans un graphe (V, E) rec¸oit en entr´ee la donn´ee
d’une source s ∈ V et d’une cible (ou destination) t ∈ V et renvoie en sortie un
chemin P de s `a t. P est appel´e chemin de routage de s `a t.

L’efﬁcacit´e d’un algorithme de routage d´ecentralis´e se mesure par deux pa-
ram`etres principaux : la longueur des chemins calcul´es et la latence qui est le
nombre de noeuds visit´es ou interrog´es. Durant le calcul d’un chemin, l’algo-
rithme peut en effet interroger des noeuds, c’est-`a-dire acqu´erir les informations
qu’ils contiennent sans que ces noeuds appartiennent au chemin renvoy´e par l’al-
gorithme (il peut par exemple s’agir d’une phase d’exploration du r´eseau).

D´eﬁnition 1.9 (Latence)
La latence d’un algorithme de routage sur un graphe donn´e est le plus grand
nombre de noeuds interrog´es pour calculer un chemin entre deux sommets.

Dans le cadre du routage d´ecentralis´e, le graphe H = (V, E) sous-jacent `a
un graphe augment´e G = (V, E, E0) repr´esente la structure globale sur les noeuds
qui est connue de tous, comme la position g´eographique des individus d’un r´eseau
social. C’est relativement `a cette structure que l’on rep`ere la position des liens
inconnus E0 qui peuvent repr´esenter les connaissances amicales du r´eseau social.
Dans toute la suite, on mesurera la distance entre les noeuds d’un graphe aug-
ment´e dans la structure sous-jacente. Le terme de distance sera donc toujours uti-
lis´e pour la distance sous-jacente s’il s’agit d’un graphe augment´e, et ne r´ef´erera
jamais `a la distance dans le graphe augment´e qui est a priori inconnue.

D´eﬁnition 1.10 (Algorithme de routage d´ecentralis´e)
Un algorithme de routage dans un graphe augment´e (V, E, E0) est d´ecentralis´e
si et seulement s’il a pour seule connaissance le graphe sous-jacent (V, E), la
position de la cible sur (V, E) et peut seulement interroger les noeuds connus ou
les voisins de noeuds connus.

20

Chapitre 1 : Pr´eliminaires : mod`ele de Kleinberg et principales d´eﬁnitions

On peut illustrer cette d´eﬁnition avec l’exp´erience de Milgram. Suppo-
sons que le graphe sous-jacent repr´esente la connaissance globale des positions
g´eographiques des individus. Supposons par exemple que Germaine, de Paris,
connaˆıt Paul, de Liverpool, qu’elle a rencontr´e lors d’un concert. C’est une infor-
mation locale, inconnue des autres individus. Durant la transmission d’une lettre
dans le r´eseau social, on ne peut acc´eder `a cette information qu’au moment o`u
Germaine rec¸oit la lettre. Si la lettre est destin´ee `a un Anglais, Germaine va sans
doute choisir de la retransmettre `a Paul, en utilisant l’information globale des po-
sitions entre individus selon laquelle Paul est a priori plus proche du destinataire
car il habite Liverpool.

1.3 Le mod`ele de petit monde de J. Kleinberg (2000)

En 2000, Kleinberg [Kle00] propose le premier mod`ele de petit monde
pr´esentant la propri´et´e de navigabilit´e, c’est-`a-dire le premier mod`ele de graphe
dont le diam`etre est polylogarithmique en le nombre de noeuds et dont des che-
mins polylogarithmiques peuvent ˆetre d´ecouverts par un algorithme d´ecentralis´e
entre tout couple de sommets.

Il s’agit d’une grille carr´ee de dimension 2 et de cˆot´e n que l’on augmente
en ajoutant `a tout sommet u un nombre k > 0 constant d’arcs al´eatoires tir´es
ind´ependamment. La destination du j-`eme arc de u, pour 1 6 j 6 k, est v avec
une probabilit´e proportionnelle `a 1/|u − v|s, o`u |u − v| est la distance ‘1 entre
u et v dans la grille1, et s > 0 est une constante. On remarquera que la grille est
constitu´ee de liens sym´etriques (ou arˆetes) tandis que les liens (ou arcs) ajout´es
al´eatoirement sont orient´es.

La ﬁgure 1.1 illustre un exemple de r´eseau de Kleinberg de dimension 2 ayant
un lien al´eatoire sortant par noeud (en gras). Les liens al´eatoires ne sont pas tous
repr´esent´es pour la lisibilit´e.

Kleinberg d´emontre que seul le cas o`u s = 2 permet d’obtenir la propri´et´e
de navigabilit´e. Il exhibe, pour ce cas, un algorithme de routage d´ecentralis´e qui
calcule des chemins dont l’esp´erance de la longueur est O(log2 n/k) entre tout
couple de noeuds (on dit que la longueur est O(log2 n/k) en esp´erance). Il s’agit
de l’algorithme glouton G (algorithme 1) qui transmet, en chaque noeud, le mes-
sage au voisin le plus proche de la cible du routage.

Ce r´esultat a ´et´e g´en´eralis´e par la suite `a toute grille de dimension d > 0 par
Barri`ere et al. [BFKK01] qui d´emontrent que l’on obtient la propri´et´e de naviga-
bilit´e pour le seul exposant s = d. Ils d´emontrent ´egalement que l’esp´erance de la

y = (y1, . . . , yd) est d´eﬁnie par : |x − y| =Pd

1Dans une grille d-dimensionnelle, la distance ‘1 entre deux noeuds x = (x1, . . . , xd) et
i=1 |xi − yi|, elle est ´egalement appel´ee distance

de Manhattan.

1.4 : Classe des r´eseaux de Kleinberg

21

FIG. 1.1 : Exemple de r´eseau de Kleinberg K2

1,n.

Algorithme 1 Algorithme de routage glouton

Entr´ee : la source s et la cible t.
Initialisation : x ← s. (x est le porteur courant du message)
tant que x 6= t faire

x ← y o`u y est le contact local ou longue-distance de x qui minimise |y−t|

(choix al´eatoire uniforme en cas d’´egalit´e).

ﬁn tant que

longueur du chemin construit par l’algorithme glouton G est Θ(log2 n/k).

Lorsque s 6= d, ils montrent que tout algorithme de routage d´ecentralis´e
calcule, entre deux noeuds, un chemin de longueur au moins polynomiale en
esp´erance en le nombre de sommets. Ce r´esultat d´emontre en particulier qu’au-
cune distribution uniforme (s = 0) n’est navigable sur le tore d-dimensionnel,
c’est le cas par exemple des mod`eles d’Erd¨os-R´enyi [ER59] et de Watts et Stro-
gatz [WS98].

1.4 Classe des r´eseaux de Kleinberg

Dans cette section, nous d´eﬁnissons de fac¸on pr´ecise la classe de graphes
al´eatoires des r´eseaux de Kleinberg navigables qui correspondent au mod`ele de
Kleinberg o`u l’exposant s est pris ´egal `a la dimension d.

D´eﬁnition 1.11 (Tore r´egulier)
Un tore r´egulier de dimension d > 1 et de cˆot´e n > 1 est un graphe dont l’en-
semble des sommets est {−n, . . . , 0, . . . , n}d et tel qu’il existe une arˆete entre

22

Chapitre 1 : Pr´eliminaires : mod`ele de Kleinberg et principales d´eﬁnitions

deux sommets (x1, . . . , xd) et (y1, . . . , yd) si et seulement s’il existe une coor-
donn´ee 1 6 i 6 d telle que xi = yi ± 1 mod 2n + 1, et xj = yj pour tout
j 6= i.

D´eﬁnition 1.12 (R´eseau de Kleinberg [Kle00])
´Etant donn´es k, n, d > 1, un r´eseau de Kleinberg de dimension d, not´e Kd
k,n, est
un tore r´egulier de dimension d et de cˆot´e n augment´e de k liens (ou arcs) longue-
distance sortants par noeud, al´eatoires et ind´ependants, tels que pour tout noeud
u, la probabilit´e que la destination de son j-`eme lien longue-distance soit v est
proportionnelle `a 1/|u − v|d.

On appelle lien local toute arˆete du tore sous-jacent. Sa destination est un
contact local de son origine. L’ensemble des liens locaux repr´esente l’information
globale connue par tous les noeuds du r´eseau. Ces liens sont sym´etriques.

On appelle lien longue-distance tout arc al´eatoire du mod`ele. Sa destination
est un contact longue-distance de son origine. Un lien longue-distance repr´esente
une information partielle, sans carte globale. Ces liens sont orient´es.
On note Lj(u) le j-`eme contact longue-distance d’un sommet u.
Dans toute la suite, ln repr´esente le logarithme n´ep´erien, log le logarithme en

base 2 et Hn la somme harmonique jusqu’`a l’indice n : Hn =Pn

i=1 1/i.

Distribution exacte des liens longue-distance. Pour d´eterminer de fac¸on exacte
la distribution des liens longue-distance dans un r´eseau de Kleinberg, nous devons
en calculer le facteur de normalisation, d´eﬁni ci-apr`es.
n,k, ´etant donn´e un entier j, 1 6 j 6 k et deux noeuds u et

Dans un r´eseau Kd

v, on a :

Pr{Lj(u) = v} =

1

Zn,d(u)

1

|u − v|d ,

o`u Zn,d(u) est le facteur de normalisation de la loi de probabilit´e pour u, d´eﬁni de
la fac¸on suivante :

X

1

|u − v|d .

Zn,d(u) =

v∈Kd

k,n,u6=v

Le tore r´egulier d-dimensionnel est sommet-transitif , cela signiﬁe qu’il existe
une bijection de l’ensemble des sommets qui pr´eserve l’ensemble des arˆetes.
Grossi`erement, chaque sommet a la mˆeme « vue »du graphe que tous les autres.
Par cons´equent, le facteur de normalisation Zn,d(u) ne d´epend pas de u. On le
notera donc simplement Zn,d.
En dimension 1, le tore sous-jacent est un anneau r´egulier et le nombre de
noeuds `a distance i d’un noeud donn´e u vaut 2 pour 1 6 i 6 n. On peut alors

1.4 : Classe des r´eseaux de Kleinberg

23

r´e´ecrire Zn,1 :

nX

i=1

2
i

Zn,1 =

= 2Hn.

Comme la somme harmonique v´eriﬁe l’encadrement
ln(n + 1) 6 Hn 6 1 + ln n,

on obtient dans K1

k,n :
c

|u − v| log n

6 Pr{Lj(u) = v} 6

c0

|u − v| log n

,

o`u c, c0 > 0 sont deux constantes que l’on peut d´eduire des remarques pr´ec´edentes.
En dimension sup´erieure, d > 1, nous devons ´evaluer le nombre de points `a
distance 1 6 i 6 n d’un noeud u dans un tore d-dimensionnel. Il s’agit du cardinal
de la sph`ere de rayon i centr´ee sur u. On note S(u, r) et B(u, r), respectivement
la sph`ere ‘1 et la boule ‘1 centr´ees sur u et de rayon r, de cardinalit´es respectives
su(r) et bu(r) (on omettra ´eventuellement l’indice du noeud centre, par sommet-
transitivit´e).
Clairement, pour r 6 n, s(r) = Θ(rd−1) et b(r) = Θ(rd). Plus pr´ecis´ement,
pour r 6 n,

s(r) =

et

2d

(d − 1)!
2d
d!

b(r) =

rd−1 + ξ(r)

rd + η(r),

o`u ξ(r) et η(r) sont deux polynˆomes strictement positifs de degr´es respectifs d−2
et d − 1. Ces expressions sont aussi des majorants de s(r) et b(r) pour r > n. On
obtient alors les minorations et majorations suivantes sur le facteur de normalisa-
tion :

Zn,d > nX
et Zn,d 6 ndX

i=1

i=1

>

s(i)
id

(cid:18) 2d

(d − 1)!

2d

Hn,

(d − 1)!
id−1
id + O

(cid:18) 1

i2

(cid:19)(cid:19)

6

2d

(d − 1)!

Hn + O(1).

Th´eor`eme 1.1 ([Kle00, BFKK01])
´Etant donn´e une source et une cible `a distance mutuelle δ dans un r´eseau de
Kleinberg de dimension d, de cˆot´e n et avec k arcs al´eatoires sortants par noeud,
k, n, d > 1, l’algorithme de routage glouton calcule un chemin de longueur
Θ(log n log δ/k) en esp´erance .

Premi`ere partie

Aspect dynamique de

l’effet petit monde

Chapitre 2

Algorithmes de routage efﬁcaces et
graphes petits mondes

Introduction

Dans ce chapitre, nous ´etudions la navigabilit´e `a travers les algorithmes de
routage d´ecentralis´es qui peuvent ˆetre utilis´es sur les graphes petits mondes. Nous
nous int´eressons `a deux questions principales sur cet aspect dynamique de l’effet
petit monde : la conception d’algorithmes efﬁcaces pour les r´eseaux petits mondes
et la pertinence des processus de routage pour un r´eseau r´eel. En particulier, nous
construisons un algorithme de routage d´ecentralis´e qui reste, `a notre connaissance,
le plus efﬁcace en terme de longueur de chemin sur un r´eseau de Kleinberg.

2.1 L’algorithme glouton de Kleinberg

L’algorithme glouton pr´esent´e par Kleinberg [Kle00] pr´esente l’avantage
d’ˆetre `a la fois tr`es simple et tr`es efﬁcace, puisqu’il calcule des chemins de

longueur Θ(cid:0)(log2 n)/k(cid:1) en esp´erance entre toute paire de noeuds d’un r´eseau
Θ(cid:0)(log2 n)/k(cid:1). Si ce diam`etre est inf´erieur, cela soul`eve une autre question :

de Kleinberg de cˆot´e n. On peut alors se poser la question de l’optimalit´e
des chemins calcul´es, c’est-`a-dire d´eterminer si le diam`etre de ce r´eseau est

existe-t-il un algorithme d´ecentralis´e qui peut trouver ces chemins plus courts ?
La propri´et´e de navigabilit´e se caract´erise en effet par la capacit´e de trouver les
chemins courts par un algorithme d´ecentralis´e. Ces observations nous conduisent
`a la notion de diam`etre apparent d’un graphe qui est l’esp´erance de la longueur
du plus long des plus courts chemins qui peuvent ˆetre calcul´es par un algorithme
d´ecentralis´e. Par exemple, le mod`ele de Watts et Stogatz [WS98] pr´esente un
diam`etre polylogarithmique, mais son diam`etre apparent est polynomial. Une

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

question est donc de d´eterminer si Θ(cid:0)(log2 n)/k(cid:1) est le diam`etre apparent du

28

mod`ele de Kleinberg.

Kleinberg compare cet algorithme glouton `a l’exp´erience de Milgram [Mil67]
de transmission de lettres, ce qui soul`eve la question de la pertinence de cet
algorithme pour les r´eseaux sociaux. En effet, l’algorithme de routage glouton
renvoie le message au voisin le plus proche de la cible, il semble pourtant plus
r´ealiste qu’un individu sonde un voisinage `a une distance sup´erieure `a 1 avant
de renvoyer la lettre. L’exp´erience de Milgram a ´et´e r´ecemment reproduite sous
forme de transmission d’e-mails par Dodds et al. [DMW03] qui ont recueilli
des statistiques sur la fac¸on dont les e-mails ont ´et´e transmis. Cette exp´erience a
r´ev´el´e que les individus avaient tendance `a choisir de transmettre le message `a
une de leur connaissance qu’ils pensaient ˆetre plus `a-mˆeme de le retransmettre.
Il ne s’agit donc pas dans ce cas de transmettre le message `a la connaissance
consid´er´ee comme la « plus proche »de la destination, mais plutˆot `a celle qui a
une connaissance plus proche.

Dans ce chapitre, nous pr´esentons un nouvel algorithme de routage
d´ecentralis´e d´edi´e aux graphes petits mondes. Nous verrons qu’il apporte des
r´eponses aux probl´ematiques soulev´ees ci-dessus, par son efﬁcacit´e en longueur
de chemin et son sch´ema de routage. En particulier, il effectue une recherche lo-
cale restreinte, pertinente dans le cadre des r´eseaux sociaux. Nous pr´esentons et
analysons cet algorithme dans un r´eseau de Kleinberg Kd

k,n, k, n, d > 1.

2.2 Am´eliorer l’efﬁcacit´e du routage grˆace `a une ex-

ploration restreinte

Pour rechercher des am´eliorations de l’efﬁcacit´e du routage glouton, nous
commenc¸ons par revenir sur son analyse. L’analyse globale du routage glouton
G entre une source et une cible `a distance δ se fait par dichotomie : on d´ecoupe
l’ex´ecution de l’algorithme en log δ phases correspondant aux divisions succes-
sives de la distance courante par deux. La i-`eme phase, 1 6 i 6 log δ, dure tant
que la distance du porteur courant du message (i.e. le noeud courant trait´e par l’al-
gorithme) `a la cible appartient `a (2i−1, 2i]. On peut alors montrer qu’en phase i, la
probabilit´e que le j-`eme contact longue-distance du porteur courant du message
soit `a distance strictement inf´erieure `a 2i−1 de la cible est sup´erieure `a 1/(c log n),
o`u c est une constante strictement positive, pour tout 1 6 j 6 k. On en d´eduit que
l’esp´erance du nombre de noeuds visit´es par G durant la i-`eme phase d’ex´ecution
est O ((log n)/k). En sommant sur toutes les phases, on obtient l’esp´erance de

2.2 : Am´eliorer l’efﬁcacit´e du routage grˆace `a une exploration restreinte

29

longueur totale du chemin de routage : O ((log n log δ)/k).

La cl´e de cette analyse est la bonne r´epartition des liens longue-distance sur
toutes les ´echelles de distance, dans le mod`ele de Kleinberg. Cette r´epartition
garantit qu’en visitant Ω ((log n)/k) nouveaux noeuds en esp´erance, `a distance
comprise entre x et x/2 de la cible du routage, on trouve un contact longue-
distance qui est `a distance strictement inf´erieure `a x/2 de la cible, pour tout x
inf´erieur ou ´egal `a n. La visite gloutonne d’un ensemble de noeuds de taille
S allonge de S la longueur du chemin de routage. Nous pouvons chercher `a
visiter ces noeuds de fac¸on plus compacte, aﬁn de diminuer la longueur du
chemin n´ecessaire pour trouver un contact deux fois plus proche de la cible.
Une id´ee naturelle est de construire une exploration arborescente, c’est-`a-dire
de visiter un voisinage de noeuds autour du noeud courant en suivant les liens
locaux et longue-distance des voisins, de proche en proche. Chaque noeud du
mod`ele ayant un degr´e sortant constant, on peut penser visiter de cette fac¸on
Ω ((log n)/k) nouveaux noeuds (i.e. non visit´es) avec une profondeur d’explo-
ration Θ (log ((log n)/k)). Toutefois, les contacts longue-distance des voisins
peuvent ˆetre des noeuds pr´ec´edemment visit´es par l’algorithme. On rencontre
alors des probl`emes de d´ependance des tirages des liens et les branches de l’arbre
ne sont pas disjointes, ce qui r´eduit le nombre de nouveaux noeuds contenus dans
l’ensemble explor´e. Dans les sections suivantes, nous allons ´etudier comment
parvenir `a r´esoudre ces probl`emes de d´ependance pour construire une structure
d’exploration compacte et contenant sufﬁsamment de nouveaux noeuds.

Principe g´en´eral de l’algorithme. Pour une source et une cible donn´ee, notre
algorithme va construire des structures d’explorations successives des contacts
locaux et longue-distance, dont la profondeur d´epend de la distance courante `a
la cible. `A la ﬁn de chaque exploration, le message `a transmettre est envoy´e de
la racine de l’exploration au noeud le plus proche de la cible, parmi les noeuds
explor´es. Nous faisons l’hypoth`ese que la d´ecouverte d’un lien longue-distance
lors de l’exploration nous autorise `a renvoyer une faible quantit´e d’information en
sens inverse sur ce lien, ce qui permet `a la racine de d´eterminer le noeud le plus
proche de la cible dans l’ensemble explor´e. En revanche, le message `a transmettre
emprunte les liens longue-distance suivant leur orientation. Cette hypoth`ese peut
s’illustrer par le passage d’une lettre dans un r´eseau social : supposons que Ringo
connaˆıt John mais que John ne connaˆıt pas Ringo ; si Ringo envoie une lettre `a
John en indiquant son adresse au dos de l’enveloppe (d´ecouverte du lien longue-
distance), John peut alors envoyer une lettre `a Ringo. On peut ´egalement illustrer
ce fait par la navigation dans le r´eseau des pages web : supposons que la page
web de Germaine pointe sur celle du groupe The Beatles, sans que celle-ci ait un
hyperlien vers la page de Germaine ; un internaute passant de la page de Germaine
`a la page des Beatles par l’hyperlien (d´ecouverte du lien longue-distance) peut

30

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

revenir sur la page de Germaine par la touche « back »du navigateur.

2.2.1 Compromis entre le recoupement et la profondeur d’ex-

ploration

Dans cette section, nous ´etudions les marges d’optimisation offertes par une
exploration des contacts locaux et longue-distance `a partir d’un noeud. On se
donne une source et une cible pour le routage, et l’on note x la distance sous-
jacente d’un noeud x `a la cible.

On consid`ere `a pr´esent le noeud x qui est la racine de notre structure d’explo-
ration. Pour faciliter la lecture, nous allons repr´esenter la structure d’exploration
par un arbre. Les branches sont les chemins constitu´es de liens locaux et longue-
distance des noeuds explor´es, l’ensemble des ﬁls d’un noeud est constitu´e de l’en-
semble de ses contacts locaux et longue-distance qui sont plus proches de la cible
que la racine.

Nous avons vu que, dans cet arbre, les branches ne sont pas disjointes. On

distingue deux cas de recoupements :

-1er cas : le contact d’un noeud est un noeud d´ej`a pr´esent dans la structure

d’exploration,

-2`eme cas : le contact d’un noeud est `a distance strictement sup´erieure `a x
de la cible. En effet, un noeud `a distance strictement sup´erieure `a x de la
cible peut avoir ´et´e visit´e par l’algorithme dans les phases pr´ec´edentes, son
ind´ependance n’est pas garantie.

Chaque recoupement ´elimine de la structure arborescente tout le sous-arbre
qui y est enracin´e. Cela diminue donc le nombre total de noeuds ; toutefois, ces
noeuds sont des r´ep´etitions, et leur visite est donc inutile dans la recherche d’un
contact deux fois plus proche de la cible. Un exemple d’exploration est illustr´e sur
la ﬁgure 2.1. Pour augmenter le nombre de noeuds de la structure et compenser
les recoupements, on peut augmenter la profondeur de l’exploration. Toutefois,
dans le but de diminuer la longueur totale du chemin de routage, la profondeur de
l’exploration doit ˆetre limit´ee, puisqu’elle repr´esente la longueur du morceau de
chemin que l’on ajoute au chemin courant `a chaque phase de division par deux de
la distance `a la cible. Il s’agit donc d’arriver `a un compromis entre une profondeur
d’exploration restreinte et un nombre de nouveaux noeuds sufﬁsamment grand.

Dans la suite, nous allons quantiﬁer pr´ecis´ement la probabilit´e de recoupe-
ment des voisins qui nous permet de minorer le nombre de nouveaux noeuds
dans l’arbre, pour chaque profondeur, avec une certaine probabilit´e. Nous verrons
que cette m´ethode seule ne permet pas d’obtenir une profondeur d’exploration
sufﬁsamment faible tout en garantissant Ω ((log n)/k) nouveaux noeuds dans la
structure. Aﬁn d’augmenter le nombre de nouveaux noeuds dans la structure, en

2.2 : Am´eliorer l’efﬁcacit´e du routage grˆace `a une exploration restreinte

31

FIG. 2.1 : Arbre d’exploration de profondeur 3 dans un r´eseau K1
1,n, `a partir du
noeud racine 3 et que l’on a dirig´e vers la cible t. En gras et en pointill´es ﬁgurent
les liens longue-distance, les pointill´es correspondent aux recoupements.

augmentant tr`es peu la profondeur de la structure, nous la prolongeons par des
chaˆınes de liens locaux dirig´ees vers la cible, enracin´ees aux feuilles de l’arbre
(cf. ﬁgure 2.2). Tant que l’on garantit que ces chaˆınes ne recoupent pas les autres
noeuds de la structure, l’ajout de ces chaˆınes multiplie le nombre de nouveaux
noeuds pr´esents dans la structure (les feuilles) par la longueur des chaˆınes.

D´eﬁnition 2.1 (Chaˆıne)
On appelle chaˆıne, un chemin constitu´e uniquement de liens locaux.

2.2.2 Lien valide et zone de s´ecurit´e

Cette section introduit dans notre vocabulaire les termes lien valide et zone de
s´ecurit´e, relatifs `a la gestion des recoupements, aﬁn de simpliﬁer la description de
notre algorithme dans la suite.

Aﬁn de garantir l’ind´ependance de la structure d’exploration courante vis-
`a-vis des noeuds visit´es dans une structure d’exploration pr´ec´edemment visit´ee,
nous ne consid´erons que les contacts qui sont strictement plus proches de la cible
que leur origine. On appelle liens valides les liens associ´es, d´eﬁnis formellement
ci-dessous.

012345678profondeur d'exploration = 3noeud racine3456423526336633456tArbre d'exploration avec recoupementsArbre d'exploration après retrait des recoupements32

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

FIG. 2.2 : Exemple d’arbre d’exploration de profondeur 3 avec ses chaˆınes de
liens locaux de longueur 3 attach´ees aux feuilles, dans un r´eseau K1

1,n.

D´eﬁnition 2.2 (Lien valide)
On dit qu’un lien (local ou longue-distance) d’un noeud u vers un noeud v est
valide si v est strictement plus proche de la cible que u selon la distance de Man-
hattan. On dit alors que v est un contact valide (local ou longue-distance) de u.
On dit qu’un noeud v est `a h liens valides de u, s’il existe un chemin de longueur
inf´erieure ou ´egale `a h de u vers v compos´e uniquement de liens valides.
On dit que v est `a h liens locaux valides de u si ce chemin est uniquement com-
pos´e de liens locaux valides.

Supposons que la structure d’exploration est compos´ee de liens locaux et
longue-distance et prolong´ee par des chaˆınes de liens locaux enracin´ees en cha-
cune de ses feuilles, comme d´ecrit dans la section pr´ec´edente.

Aﬁn de garantir que les chemins de liens locaux de l’arbre (dont les chaˆınes)
sont constitu´es de noeuds distincts, il sufﬁt de ne consid´erer dans la structure
que les contacts longue-distance qui sont `a une distance sup´erieure ou ´egale `a la
hauteur de l’arbre des autres noeuds de la structure. On appelle zone de s´ecurit´e
d’un noeud u l’ensemble des noeuds `a distance inf´erieure `a la hauteur de l’arbre
de u. On dit que ces noeuds sont interdits pour les contacts longue-distance des
autres noeuds de la structure. On remarquera que les contacts longue-distance que
l’on ne consid`ere pas sont visit´es par ailleurs dans la structure, puisque ce sont des
r´ep´etitions.

2.3 Notre algorithme de routage

Dans cette section, nous pr´esentons en d´etail le fonctionnement de notre al-
gorithme de routage. Nous consid´erons tout d’abord le cas unidimensionnel pour

}}ExplorationChaînes de liens locaux(noeuds non visités)2.3 : Notre algorithme de routage

33

la lisibilit´e. La section 2.5 g´en´eralisera cet algorithme, ainsi que tous les r´esultats
obtenus, `a une dimension quelconque.

Nous d´ecrivons notre algorithme suivant un parcours en profondeur qui
permet de comprendre son fonctionnement de fac¸on simple. Nous verrons par la
suite une impl´ementation de l’algorithme suivant un parcours en largeur, moins
efﬁcace en pratique, mais dont l’analyse probabiliste est plus simple.

Description de l’algorithme (selon le parcours en profondeur). Soient s et t
la source et la cible respectivement. On suppose que trois fonctions hmax(x),
bmax(x) et g(x), ainsi qu’un param`etre stop nous sont donn´es. La fonction hmax(x)
repr´esente la profondeur d’exploration pour une racine `a distance x de t, bmax(x)
le nombre de feuilles que l’on cherche `a obtenir, g(x) la longueur des chaˆınes de
liens locaux (cf. ﬁgure 2.3). Enﬁn, stop est la distance seuil `a t en dessous de
laquelle on ex´ecute l’algorithme glouton de Kleinberg car l’exploration devient
inutile.

Les valeurs de ces fonctions seront donn´ees dans la suite. La difﬁcult´e consiste
`a choisir les valeurs de ces fonctions de fac¸on `a minimiser la longueur du che-
min hmax(x)+g(x) tout en garantissant un nombre de feuilles sufﬁsamment grand.

Soit x le porteur courant du message et π le chemin courant de s `a x :

1. Tant que |x − t| > stop :

– Explorer les noeuds `a hmax(x) liens valides de x suivant un parcours
en profondeur, enregistrer dans un ensemble F tous les contacts longue-
distance valides visit´es, mais sauter dans l’exploration tous les contacts
longue-distance `a distance strictement inf´erieure `a hmax(x) + g(x) d’un
noeud de l’ensemble F courant. Le parcours en profondeur est arrˆet´e d`es
que |F| = bmax(x), mˆeme s’il reste des noeuds `a parcourir.

– `A chaque fois qu’un noeud z, `a exactement hmax(x) liens valides de x,
est rencontr´e, lire les adresses des contacts longue-distance des noeuds `a
g(x) liens locaux valides de z, et enregistrer dans une variable y le noeud
le plus proche de la cible parmi les noeuds visit´es et leurs contacts.

– `A la ﬁn de l’exploration en profondeur, router le message de x `a y dans
l’arbre d’exploration et ´etendre le chemin π jusqu’`a y, suivant ces liens.
2. Lorsque |x − t| 6 stop : appliquer l’algorithme glouton de Kleinberg, i.e.
transmettre le message au contact de x le plus proche de t et ´etendre le
chemin π par ce lien, jusqu’`a atteindre t.

La ﬁgure 2.3 illustre le principe de la structure visit´ee durant chaque phase
d’exploration : les lignes droites repr´esentent les liens locaux valides et les ﬂ`eches
repr´esentent les liens longue-distance valides ; les noeuds de F sont repr´esent´es
par des cercles blancs, chacun commence une nouvelle chaˆıne de liens locaux de

34

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

longueur inf´erieure ou ´egale `a hmax(x) + g(x), dirig´ee vers la cible. La structure
explor´ee est compos´ee d’un arbre (k + 1)-aire (partiel) de hauteur hmax(x) ´etendu
par des chaˆınes de liens locaux de longueur g(x) attach´ees `a ses feuilles.

Pour all´eger les notations, on pose ˆk =def k + 1.
Les zones de s´ecurit´e (cf. section 2.2.2) des noeuds sont respect´ees, puisqu’on
ne consid`ere que des contacts longue-distance `a distance sup´erieure `a hmax(x) +
g(x) (la profondeur de la structure) de l’ensemble des noeuds d´ej`a explor´es F .
Cela garantit que les chaˆınes de liens locaux enracin´ees en les noeuds de F ne
se recoupent pas. Rappelons que les contacts ´evit´es sont en fait des r´ep´etitions de
noeuds existant dans notre structure, cet ´evitement n’est donc pas une limite sur
les performances de l’algorithme.

L’arbre est dessin´e dans le plan pour illustrer la structure arborescente, mais il
est en fait plong´e dans le tore. `A la ﬁn d’une phase d’exploration, le chemin est
´etendu depuis x vers le noeud y le plus proche de la cible parmi les noeuds ex-
plor´es et leurs contacts. Une nouvelle phase d’exploration commence alors depuis
le noeud y.

FIG. 2.3 : Extension du chemin π (en gras) `a la ﬁn d’une phase d’exploration.

La ﬁgure 2.4 illustre la succession des structures d’exploration durant un rou-

tage.

L’impl´ementation selon un parcours en largeur (algorithme 2) que nous ana-
lysons dans la section suivante construit la structure arborescente d’exploration
niveau par niveau. Mˆeme si la partie de l’arbre explor´ee n’est pas la mˆeme que
dans l’impl´ementation selon le parcours en profondeur, l’analyse des deux pro-
grammes est identique.

La ﬁgure 2.5 illustre les ensembles de noeuds qui correspondent `a un niveau
interm´ediaire h, compris entre 1 et hmax, de la construction de la structure. A est
l’ensemble des noeuds visit´es durant la phase d’exploration (sans les chaˆınes de
liens locaux C).

Les liens suivis durant une phase d’exploration forment une structure d’arbre
ˆk-aire sur A, de hauteur hstop. hstop est la hauteur `a laquelle le nombre de branches
a atteint le seuil bmax(x). L’ensemble des feuilles Bhstop est ´etendu par |Bhstop|
chaˆınes de liens locaux valides de longueur g(x), enracin´ees en les noeuds de

SourceπCibleyxg(x)hmax(x)2.4 : Analyse de l’algorithme en dimension 1

35

FIG. 2.4 : Routage par explorations successives.

Bhstop. L’ensemble Bh est l’ensemble des noeuds au niveau h de l’arbre. A peut
aussi ˆetre vu comme un ensemble de |F| = |Bhstop| chaˆınes de longueur inf´erieure
`a hmax(x) + g(x), enracin´ees en les noeuds de F , qui ne se recoupent pas, pointent
vers la cible et sont reli´ees entre elles par des liens longue-distance.

FIG. 2.5 : Les ensembles A, Bh, C et F (noeuds blancs) durant une phase d’ex-
ploration.

2.4 Analyse de l’algorithme en dimension 1
Dans cette section, nous analysons l’algorithme 2 sur K1

k,n. L’analyse
consiste `a ´etudier la structure d’exploration enracin´ee en un noeud x, porteur
du message, `a distance x de la cible t. Nous montrons que pour une profondeur
O(log n log log n/ log x) seulement, elle est sufﬁsamment large pour garantir

Sourcexx/2CibleBhABhCFxhstop ≤ hmax(x)g(x)stop36

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

Algorithme 2 Algorithme de routage selon le parcours en largeur

Entr´ee : la source s et la cible t.
Initialisation : x ← s.
tant que |x − t| > stop faire
Phase d’exploration :

x ← |x − t|, A0 ← {x}, B0 ← {x}, F ← {x}, h ← 0.
tant que h < hmax(x) et |Bh| < bmax(x) faire

Bh+1 ← ∅.
pour chaque u ∈ Bh faire

Bh+1 ← les contacts locaux valides de u.
pour chaque contact longue-distance valide v de u faire

si ∀w ∈ F, |v − w| > hmax(x) + g(x) alors
F ← F ∪ {v}, Bh+1 ← Bh+1 ∪ {v}.

ﬁn si

ﬁn pour

ﬁn pour

ﬁn tant que
Ah+1 ← Ah ∪ Bh+1.
h++.
si |Bh| > bmax(x) alors

ﬁn si
hstop ← h,
A ← Ahstop−1 ∪ Bhstop.

C ← S

b∈Bhstop

liens locaux valides de b.

enlever les (|Bh| − bmax(x)) derniers noeuds ins´er´es dans Bh et F .

(Remarque : |Bhstop| 6 bmax(x))
Cb, o`u Cb est l’ensemble des noeuds `a moins de g(x)

Phase de retransmission du message :

x ← le noeud le plus proche de la cible t parmi les contacts locaux et
longue-distance d’un noeud dans A ∪ C.
Router le message vers x dans l’arbre form´e par A ∪ C.

ﬁn tant que
Phase ﬁnale (Algorithme glouton) : Retransmettre le message au noeud
le plus proche de la cible parmi les contacts (locaux ou longue-distance) du
porteur courant du message, jusqu’`a ce qu’il atteigne la cible t.

2.4 : Analyse de l’algorithme en dimension 1

37

2k · x. Comme cette
l’existence d’un contact dont la distance `a t est inf´erieure `a log ˆk
analyse est ind´ependante de la fac¸on dont on explore l’arbre, elle s’appliquera
´egalement `a l’impl´ementation (plus efﬁcace) selon le parcours en profondeur.

Rappelons que K1

k,n est un anneau augment´e de 2n + 1 noeuds, num´erot´es
de −n `a n. En plus de ses deux voisins sur l’anneau (ses contacts locaux),
chaque noeud u est l’origine de k liens orient´es suppl´ementaires (1 6 k 6
log n), chacun pointant vers un noeud vj (le j-`eme contact longue-distance de u)
choisi ind´ependamment suivant la distribution 1-harmonique, i.e. avec probabilit´e
1/(2Hn · |u − vj|).
D´eﬁnition 2.3 (Param`etres pour l’algorithme 2 en dimension 1)
Les valeurs des param`etres pour l’algorithme 2 en dimension 1 sont, pour un
noeud x `a distance x de la cible :

hmax(x) =

bmax(x) =

g(x) =

log log x − log log log n
log (1 + k log x/(6 log n))

,

,

log x
log log n
log n · log log n
log ˆk · log x

,

et

stop = k log2 n.

On remarquera que ces valeurs nous permettent d’obtenir une profondeur
totale d’exploration au plus hmax + g(x), de l’ordre de log n log log n/ log x,
strictement inf´erieure `a log n et d´ecroissante avec la distance courante `a la cible.
Par ailleurs, l’exploration est arrˆet´ee d`es que l’on atteint bmax(x) branches ;
dans ce cas, le nombre de nouveaux noeuds pr´esents dans la structure est
g(x) · bmax(x) = log n/ log ˆk, c’est le nombre de noeud minimal `a partir duquel
2k · x
on garantit l’existence d’un contact longue distance `a distance inf´erieure `a log ˆk
de la cible avec probabilit´e constante (lemme 2.4). Nous verrons dans l’analyse
que si l’exploration s’arrˆete pour la seconde raison, c’est-`a-dire lorsque l’on
atteint la hauteur maximale hmax(x), la structure contient le mˆeme nombre de
noeuds, `a un facteur constant pr`es.

Plan de l’analyse. Nous allons prouver que l’ensemble des chaˆınes de liens lo-
caux C contient bien Ω(log n/ log ˆk) nouveaux noeuds, avec probabilit´e constante
(lemme 2.7). En appliquant le lemme 2.4, nous pourrons conclure qu’en visi-
tant un nombre constant de structures en esp´erance, on trouve un contact longue-
distance qui est 2k/ log ˆk fois plus pr`es de la cible que la racine de la premi`ere
exploration.

38

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

Pour prouver le lemme 2.7, nous allons montrer que le nombre de branches
de la structure d’arbre de A est sufﬁsamment grand en comparant l’arbre `a un
processus de branchement stochastique. Pour cela, on minore la probabilit´e de
cr´eer une nouvelle branche dans A (corollaire 2.6). Cela nous permet de minorer
la croissance de A par celle d’un processus de branchement classique que l’on sait
´evaluer.

2.4.1 Analyse d’un processus de branchement g´en´erique

Chaque lien local valide d’un noeud de A (il en existe toujours un pour chaque
noeud) cr´ee une nouvelle branche vers le niveau suivant dans A. Chaque lien
longue-distance d’un noeud de A cr´ee une nouvelle branche vers le niveau sui-
vant si et seulement si :

– il est valide,
– et son contact longue-distance n’intersecte aucune des zones de s´ecurit´e des

noeuds d´ej`a construits.

Le lemme 2.6 donne un minorant, en fonction de x, de la probabilit´e de cet
´ev´enement pour un lien longue-distance donn´e ; on le note α−. On peut alors
minorer la taille de A par celle d’un processus de branchement classique de
param`etre α−, o`u k branches sont cr´e´ees ind´ependamment avec une probabilit´e
α− et une branche avec probabilit´e 1 (correspondant `a un lien local dans A).
Dans cette section, nous ´etudions la croissance du nombre de branches dans un
tel processus.

D´eﬁnition du processus ´etudi´e.
Soit α ∈]0, 1] et posons, pour 0 6 l 6 k :

ρl =

l

(cid:18)k

(cid:19)

αl(1 − α)k−l.

On consid`ere le processus de branchement suivant : commencer avec un noeud ;
durant le h-i`eme pas, donner ind´ependamment, `a chaque noeud du niveau h − 1,
exactement 1 + l ﬁls, avec probabilit´e ρl.

Les lemmes 2.1 et 2.2 d´emontrent que le nombre de branches au niveau h,
dans l’arbre (k + 1)-aire partiel r´esultant de ce processus, est sup´erieur `a la moiti´e
de son esp´erance, avec probabilit´e constante.

Soit bh la variable al´eatoire pour le nombre de branches au niveau h (i.e., pour
le nombre de noeuds au niveau h de l’arbre). Le lemme suivant est une analyse
classique de processus de Galton-Watson (voir par exemple [HMRe98]).

2.4 : Analyse de l’algorithme en dimension 1

39

Lemme 2.1 Pour tout h > 0,

E[bh] = (1 + kα)h

et E[(bh)2] 6

(cid:18)

1 − α
1 + kα

1 +

(cid:19)

(1 + kα)2h.

Preuve. On proc`ede par induction. Pour h = 0,

E[b0] = 1

et E[b0] = 1 6 1 +

1 − α
1 + kα

.

Supposons maintenant h strictement positif. L’esp´erance du nombre de ﬁls de
chaque noeud au niveau h− 1 est (1 + kα) puisque chaque branche correspondant
`a un lien longue-distance est cr´e´ee avec probabilit´e α. L’esp´erance du nombre
de noeuds au niveau h est donc (1 + kα)E[bh−1]. Par hypoth`ese d’induction, on
obtient :

E[bh] = (1 + kα)h.

On ´evalue `a pr´esent l’esp´erance de (bh)2. Avec probabilit´e ρl, la racine du proces-
sus de branchement a exactement 1 + l ﬁls ; si l’on note β0, β1, . . . , βl les variables
al´eatoires pour le nombre de branches au niveau h− 1 dans chacun des 1 + l sous-
arbres de la racine, on a :

lX

lX

lX

lX

(bh)2 = (

βi)2 =

(βi)2 + 2

βiβj.

Les βi sont des variables ind´ependantes, distribu´ees identiquement `a bh−1. Ainsi :

i=0

i=0

i=0

j=i+1

E[b2

h | la racine a exactement l ﬁls] = (l + 1)E[(bh−1)2] + l(l + 1)E[bh−1]2.

αl(1 − α)k−l(cid:0)(l + 1)E[(bh−1)2] + l(l + 1)E[bh−1]2(cid:1)

= (1 + kα)E[(bh−1)2] + kα(2 + α(k − 1))E[bh−1]2.

En sommant sur l, on obtient :

(cid:18)k

(cid:19)

l

kX

l=0

E[(bh)2] =

(cid:18)

1 − α
1 + kα

1 +

(cid:19)

Comme, par induction,

E[(bh−1)2] 6

on conclut que :

(1 + kα)2h−2

et E[bh−1] = (1 + kα)h−1,

E[(bh)2] 6 (1 + kα)2h−2(1 + 2kα + k2α2 + 1 − α)

(cid:18)

(cid:19)

1 − α
1 + kα

=

1 +

(1 + kα)2h.

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

40

(cid:3)

La m´ethode du second moment, introduite `a la remarque 3.1 de [JŁR00]
pour les variables al´eatoires positives, permet d’assurer qu’une variable al´eatoire
prend des valeurs sufﬁsamment grandes lorsque l’on peut majorer sa variance. La
g´en´eralisation suivante de ce r´esultat aux variables pouvant prendre des valeurs
n´egatives nous sera tr`es utile par la suite.

Lemme 2.2 (M´ethode du second moment) Soit X une variable al´eatoire r´eelle,
on pose X + = max(X, 0) et X− = max(−X, 0) tels que X = X + − X−.
Si E[X−] 6 2E[X +], alors :

Pr{X > 0} > E[X]2/E[X 2].

On remarquera que la minoration E[X]2/E[X 2] s’exprime aussi comme
E[X]2/(E[X]2 + Var(X)), o`u Var(X) est la variance de X.

Preuve. Il s’agit d’une g´en´eralisation imm´ediate de [JŁR00, Remarque 3.1]. Soit
Y = 11X>0 la variable al´eatoire qui vaut 1 lorsque X > 0 et 0 sinon. On a :
E[X]2 = (E[X +] − E[X−])2 = E[X +]2 − E[X−](2E[X +] − E[X−])

6 E[X +]2 = E[XY ]2,

puisque X + = XY . L’in´egalit´e de Cauchy-Schwarz donne :

E[X]2 6 E[XY ]2 6 E[X 2]E[Y 2] = E[X 2] Pr{X > 0},
puisque Y 2 = Y et E[Y ] = Pr{X > 0}. Cela conclut la preuve. (cid:3)

On montre `a pr´esent qu’avec probabilit´e constante, le nombre de branches

dans le processus de branchement est sup´erieur `a la moiti´e de son esp´erance.
Lemme 2.3 Pour tout h, Pr{bh > E[bh]/2} > 1
5.
Preuve. On d´eﬁnit une variable al´eatoire X = bh − E[bh]/2 et l’on ´etudie
Pr{X > 0}. On a E[X] = E[bh]/2 > 0, donc E[X +] − E[X−] > 0 et la m´ethode
du second moment (lemme 2.2) s’applique : Pr{X > 0} > E[X]2/E[X 2].
On a :

et E[X 2] = E[(bh)2] − 3
4

E[bh]2.

E[X]2 =

D’apr`es le lemme 2.1,

E[bh]2

4

(cid:18)

(cid:19)

E[(bh)2] <

1 − α
1 + kα

1 +

E[bh]2 < 2E[bh]2.

2.4 : Analyse de l’algorithme en dimension 1

41

Ainsi, E[X 2] <

5
4

E[bh]2. Finalement, on obtient :

Pr{X > 0} > E[X]2
E[X 2]

>

1
4

1

(5/4)

=

1
5

.

(cid:3)

2.4.2 Analyse de l’algorithme

L’analyse de l’algorithme glouton de [Kle00] partage l’ex´ecution en phases
successives de division de la distance `a la cible par deux. Nous montrons que l’on
peut choisir un facteur de division de la distance croissant avec k. Le nombre de
phases d’ex´ecution est alors d´ecroissant avec k. La preuve de ce r´esultat (lemme
2.4) est inspir´ee de [Kle00].
Lemme 2.4 Soit t la cible d’un routage dans K1
k,n. Soient γ > 0 et 1 < x < n,
il existe une constante p0
1 > 0 (ind´ependante de n, x et k) telle que, pour tout
sous-ensemble Γ de γ · log n
2k · x et
inf´erieure ou ´egale `a x de la cible, un noeud de Γ (au moins) a un contact longue-
2k · x de la cible, avec probabilit´e au
distance `a distance inf´erieure ou ´egale `a log ˆk
moins p0
· x et u un noeud `a distance u ∈ (y, x] de la cible. La
Preuve. Soit y = log ˆk
probabilit´e que le j-`eme contact longue-distance de u soit `a distance inf´erieure ou
´egale `a y de la cible est sup´erieure ou ´egale `a1 :

noeuds, `a distance strictement sup´erieure `a log ˆk

1 > 0.

log ˆk

2k

 

ln

1 +

2x log ˆk

2ku − x log ˆk

!

u+yX

1

2Hn

i=u−y

Z u+y
 

u−y

ln

1 +

· log ˆk
kHn

,

1
i

> 1
2Hn

> 1
2Hn

> ln 2
2

dt
t

=

2Hn

1

!

log ˆk

k

puisque u 6 x et ln(1 + z) > z ln 2, pour z ∈ [0, 1]. La probabilit´e que tous
les k|Γ| contacts longue-distance des noeuds de Γ soient `a distance strictement
sup´erieure `a log ˆk

2k · x de la cible est donc inf´erieure `a :
(cid:16)

(cid:17)γ k log n

1 − ln 2
2

· log ˆk
kHn

log ˆk 6 e−γ/2 =def 1 − p0

1 < 1.

1On a l’´egalit´e pour |u| 6 n/2.

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

42

(cid:3)

Nous allons `a pr´esent minorer la probabilit´e de non-recoupement, c’est-`a-dire
la probabilit´e qu’un lien longue distance donn´e cr´ee une nouvelle branche dans A.

Lemme 2.5 Soient u un noeud `a distance u de la cible t, v son j-`eme contact
longue-distance, Q un ensemble de q noeuds interdits et r un entier.
La probabilit´e que v soit valide et `a distance sup´erieure ou ´egale `a r de tout noeud
de Q est sup´erieure ou ´egale `a :

H2u−1 − H2rq−1

.

2Hn

Preuve. Soit E l’´ev´enement : « v est valide et `a distance sup´erieure ou ´egale `a r
de tout noeud de Q ». E est l’´ev´enement « v est valide et n’appartient `a aucune
des q chaˆınes de noeuds de longueur 2r centr´ees sur les noeuds de Q ». On minore
la probabilit´e de E en remarquant que la probabilit´e que v soit `a distance δ de u
d´ecroˆıt quand δ augmente. Ainsi, la probabilit´e de E est minimis´ee lorsque les
noeuds des q chaˆınes sont tous distincts, dans l’intervalle de noeuds de rayon
u− 1 autour de la cible et aussi proche que possible de u, selon la distance dans la
grille. La ﬁgure 2.6 illustre cette minoration : les sommets de Q sont repr´esent´es
en blanc et entour´es de leurs zones de s´ecurit´e de rayon r sur le sch´ema sup´erieur ;
le sch´ema inf´erieur repr´esente le cas de ﬁgure o`u la probabilit´e de l’´ev´enement E
est minimale car les zones sont plus proches de l’origine du lien.

FIG. 2.6 : Minimiser la probabilit´e de recoupement (lemme 2.5).

Le placement des 2rq noeuds interdits sur l’anneau qui correspond `a la pro-
babilit´e minimale est sur la zone qui est `a la fois `a distance inf´erieure `a u de
t et le plus proche possible de u. Nous devons alors examiner trois cas, selon
le placement de u sur l’anneau. La ﬁgure 2.7 illustre les trois cas u 6 n/2 ou
n/2 6 u 6 n − rq ou u > n − rq, et la position de la zone de noeuds interdite
associ´ee qui minimise la probabilit´e.

2r2qr?2r2r?2.4 : Analyse de l’algorithme en dimension 1

43

FIG. 2.7 : Illustration de la preuve du lemme 2.5

On conclut que la probabilit´e de E est sup´erieure `a la probabilit´e que v soit `a
distance sup´erieure ou ´egale `a 2rq de u et `a distance strictement inf´erieure `a u de
la cible. Ainsi :

PrE > 1
2Hn

1
i

=

H2u−1 − H2rq−1

2Hn

> H2u − H2rq

2Hn

.

2u−1X

i=2rq

(cid:3)

On peut d´eduire de ce lemme un corollaire nous donnant une minoration α− de
la probabilit´e de cr´eer une branche pour chaque niveau de l’exploration qui pourra
ˆetre utilis´ee pour la comparaison avec un processus de branchement classique.

Corollaire 2.6 Pour nos valeurs de bmax(x), hmax(x) et g(x), il existe une
constante n0 ind´ependante de x, n et k, telle que si n > n0, durant chaque
phase d’exploration, pour tout noeud u non encore visit´e, `a distance u strictement
2k · x de la cible, la probabilit´e αu que le j-`eme contact longue-
sup´erieure `a log ˆk
distance v de u soit valide et `a distance > h1
max(x) + g(x) de tout ensemble de
bmax(x) noeuds est sup´erieure `a :

log x
6 log n

=def α−.

Preuve. En appliquant le lemme 2.5 avec Q = F et r = hmax(x) + g(x), on
obtient :

αu > H2u − H2bmax(x)(hmax(x)+g(x))

.

2Hn

n (= t)0-n/2n/2u2rqn 0-n/2n/22rqu>rqn 0-n/2n/22rq-su<2rqsPlacement des 2rq noeuds interdits.n/2≤u≤n−rqu≥n−rqu≤n/2Noeuds plus proches de t que u.44

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

Comme on a :

hmax(x) =

log log x − log log log n
log(1 + kHx/(6Hn))
et log(1 + kz) > z log ˆk pour tout 0 6 z 6 1, on obtient :
6 6g(x).

,

hmax(x) 6 6Hn
Hx

log log x

log ˆk

Et comme bmax(x)g(x) = log n, on a : 2bmax(x)(hmax(x) + g(x)) 6 14 log n,
ainsi :

 

!(cid:30)

αu > H2u − H14 log n

> log

x(log ˆk)/k
14 log n

(2 log n),

2Hn
puisque u > x(log ˆk)/(2k).
On peut alors r´e´ecrire x/k = (x2/3/k) · x1/3. Comme x > k log2 n, on a
x2/3 > k2/3 log4/3 n. Ainsi : x/k > ((log4/3 n)/k1/3)· x1/3. Comme k 6 log n, on
a x/k > log n · x1/3. On conclut que, pour n > n0, pour une constante absolue n0
(ind´ependante de x, n et k) :

αu >

log(x1/3)
2 log n

> log x
6 log n

.

(cid:3)

lit´e constante :

Le lemme suivant montre qu’`a la ﬁn d’une phase d’exploration, avec probabi-
– soit un noeud de A ∪ C `a distance inf´erieure ou ´egale `a log ˆk
2k · x de la cible a
– soit l’arbre est sufﬁsamment large pour contenir le nombre requis de noeuds

d´ej`a ´et´e atteint,

pour pouvoir appliquer le lemme 2.4.

Nous donnons ce lemme pour des valeurs quelconques des param`etres hmax(x)
et g(x), ce qui nous permettra de le g´en´eraliser directement `a la dimension d. Il
s’applique en particulier avec les valeurs des param`etres de la dimension 1 en
prenant β− = α−.
Lemme 2.7 Soient bmax(x) = log x/ log log n et β− un minorant de la proba-
bilit´e que le j-`eme contact longue-distance d’un noeud u `a distance comprise
2k · x et x de la cible soit valide et `a distance sup´erieure ou ´egale `a
entre log ˆk
hmax(x) + g(x) de tout ensemble de bmax(x) noeuds, pour hmax(x) et g(x) deux
valeurs satisfaisant :

(1 + kβ−)hmax(x) =

log x

log log n

.

Alors, `a la ﬁn de toute phase d’exploration, avec probabilit´e au moins 1
5 :

2.4 : Analyse de l’algorithme en dimension 1

45

– soit il existe un noeud dans A `a distance inf´erieure ou ´egale `a log ˆk
– soit |Bhstop| > log x

cible,

2 log log n.

2k · x de la

Preuve. Soit E l’´ev´enement : « `a la ﬁn d’une phase d’exploration, il existe un
2k · x de la cible dans la grille, ou
noeud de A `a distance inf´erieure ou ´egale `a log ˆk
|Bhstop| > log x/(2 log log n) ».
Soit Z = {z : |z − t] > log ˆk

2k x} et ¯Z son compl´ementaire.

Durant toute phase d’exploration, comme F contient moins de bmax(x) noeuds,
pour tout noeud u ∈ Z non encore visit´e, la probabilit´e que le j-`eme contact
longue-distance de u soit valide et `a distance sup´erieure ou ´egale `a hmax(x)+g(x)
de tout noeud de F est sup´erieure `a β−. Ainsi, tant que l’on consid`ere les noeuds
de Z, chacun de leurs contacts longue-distance sera ajout´e `a Bh+1 avec probabilit´e
sup´erieure ou ´egale `a β−. D`es qu’un noeud u de ¯Z est ins´er´e dans Ah, pour un
h donn´e, la probabilit´e que, pour un j donn´e, son j-`eme contact longue-distance
soit valide et `a distance > hmax(x) + g(x) de tout noeud de l’ensemble F courant
dans la grille n’est plus minor´ee par β− ; mais l’´ev´enement E est v´eriﬁ´e.
Nous utilisons un argument de couplage probabiliste pour minorer la probabi-
lit´e de E, en ex´ecutant virtuellement une phase d’exploration sur un r´eseau ﬁctif,
construit `a partir du r´eseau original. Ce r´eseau est construit de la fac¸on suivante :
il a la mˆeme grille sous-jacente ; les noeuds de Z ont exactement les mˆeme liens
que dans le r´eseau original ; mais on consid`ere une distribution virtuelle de liens
pour les noeuds de ¯Z telle que pour tout noeud u non encore visit´e, la probabi-
lit´e que son j-`eme contact longue-distance soit valide et `a distance sup´erieure ou
´egale `a hmax(x) + g(x) de tout ensemble de noeuds de taille inf´erieure ou ´egale
`a bmax(x) est β− (on remarquera qu’il n’est pas utile que cette distribution existe
r´eellement). On ex´ecute la phase d’exploration sur ce r´eseau ﬁctif depuis le mˆeme
x que dans le r´eseau r´eel, `a l’exception du fait que l’on ne l’interrompt pas avant
que h = hmax(x). Cela donne trois familles d’ensembles (A0
h) et F 0, telles
h ∩ Z, et F ∩ Z = F 0 ∩ Z, pour tout
que : Ah ∩ Z = A0
1 6 h 6 hstop.

h ∩ Z, Bh ∩ Z = B0

h), (B0

Les liens suivis durant la phase d’exploration du r´eseau ﬁctif d´eﬁnissent une
max(x), sur l’en-
h est l’ensemble des noeuds au niveau h. Soit

structure d’arbre qui ne se recoupe pas, de hauteur exactement h1
semble des noeuds A0 = ∪hA0
E0 l’´ev´enement « |B0
On montre `a pr´esent que PrE > PrE0 :

hmax(x)| > log x/(2 log log n) ».

h, o`u B0

– Si, dans le r´eseau original, A ∩ ¯Z = ∅, alors B0

hstop = Bhstop. Si hstop <

hmax(x), alors

|B0

hmax(x)| > |B0

hstop| = |Bhstop| = bmax(x) = log x/ log log n,
et E et E0 sont tous les deux v´eriﬁ´es. Si hstop = hmax(x), Bhstop = B0

hmax(x) et

46

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

E et E0 sont alors ´equivalents. Ainsi, quel que soit le r´eseau ﬁctif `a l’int´erieur
de ¯Z,

Pr{E | A ∩ ¯Z = ∅} = Pr{E0 | A ∩ ¯Z = ∅}.

– Si, dans le r´eseau original, A ∩ ¯Z 6= ∅, alors E est v´eriﬁ´e, et quel que soit

le r´eseau ﬁctif `a l’int´erieur de ¯Z,

Pr{E | A ∩ ¯Z 6= ∅} = 1 > Pr{E0 | A ∩ ¯Z 6= ∅}.

On minore `a pr´esent PrE0. L’ensemble A0 = ∪hA0
h est structur´e comme un arbre
al´eatoire de racine x, dans lequel tout noeud u, au niveau h, a ind´ependamment
un nombre al´eatoire 1 + l de ﬁls (un contact
local et l contacts longue-
distance), o`u l est donn´e par une loi binomiale de param`etres (k, αu), avec
αu > β−. Ainsi, le nombre de noeuds au niveau h, |B0
h|, domine stochasti-
quement la variable al´eatoire bh du nombre de noeuds au h-i`eme niveau2 dans
le processus de branchement suivant : commencer avec un noeud, au niveau
h, chaque noeud au niveau h − 1 rec¸oit, ind´ependamment, exactement 1 + l
lemme 2.1, on a : E[bh] = (1 + kβ−)h , puis, par la m´ethode du second mo-
5, bh > E[bh]/2. Ainsi, puisque
ment (lemme 2.3), avec probabilit´e au moins 1
(1 + kβ−)hmax(x) = log x/ log log n, on conclut que

(cid:1)(β−)l(1 − β−)k−l, o`u 0 6 l 6 k. D’apr`es le

ﬁls, avec probabilit´e ρl = (cid:0)k

l

PrE > PrE0 = Pr{|B0

max(x)| > log x/(2 log log n)} > 1

h1

.

5

(cid:3)

En combinant les lemmes 2.6 et 2.7, on obtient le corollaire suivant :

Corollaire 2.8 Pour n > n0, `a la ﬁn de toute phase d’exploration, avec probabi-
lit´e au moins 1
5,
2k · x de la

– soit il existe un noeud dans A `a distance inf´erieure ou ´egale `a log ˆk

cible,

– soit il y a plus de log n
2 log ˆk

noeuds distincts non encore visit´es dans C.

Preuve. D’apr`es le corollaire 2.6, pour les valeurs des param`etres de hmax(x)
et g(x) donn´ees pour la dimension 1, α− est un minorant de la probabi-
lit´e que le j-`eme contact longue-distance d’un noeud u, `a distance comprise
· x et x de la cible, soit valide et `a distance sup´erieure ou ´egale `a
entre log ˆk
hmax(x) + g(x) de tout ensemble de bmax(x) noeuds. Comme ces valeurs v´eriﬁent
(1 + kα−)hmax(x) = log x log log n, on peut appliquer le lemme 2.7. Ainsi, avec
probabilit´e au moins 1
5,
2i.e., pour tout z, Pr{|B0
h| > z} > Pr{bh > z}.

2k

2.4 : Analyse de l’algorithme en dimension 1

47

– soit il existe un noeud de A `a distance inf´erieure ou ´egale `a log ˆk
– soit |Bhstop| > log n/(2 log log n).

cible,

Dans ce dernier cas, puisque A ∪ C est compos´e de |Bhstop| chaˆınes de longueur
inf´erieure ou ´egale `a hmax(x) + g(x) enracin´ees en les noeuds de F et puisque les
noeuds de F sont `a distance > h1
max(x) + g(x) les uns des autres dans la grille, il
y a exactement |Bhstop| · g(x) > log n
noeuds distincts non encore visit´es dans C.
2 log ˆk
(cid:3)

2k · x de la

Nous pouvons `a pr´esent conclure qu’avec une probabilit´e constante, on trouve

un lien longue-distance qui m`ene 2k
log ˆk

fois plus pr`es de la cible.

2k · x de la cible dans la grille.

Proposition 2.9 Il existe deux constantes p1 > 0 et n0, ind´ependantes de n et x,
telles que, pour n > n0, `a la ﬁn de toute phase d’exploration, avec probabilit´e
sup´erieure `a p1, il existe un noeud u dans A ∪ C tel que u ou l’un de ses contacts
longue-distance soit `a distance 6 log ˆk
Preuve. D’apr`es le corollaire 2.8, avec probabilit´e au moins 1
A n’est `a distance inf´erieure ou ´egale `a log ˆk
log n
2 log ˆk
noeuds distincts et aucun de leurs contacts longue-distance n’a encore ´et´e visit´e.
2k · x de
Dans ce cas, soit il existe un noeud de C `a distance inf´erieure ou ´egale `a log ˆk
la cible, soit, d’apr`es le lemme 2.4, avec probabilit´e sup´erieure `a p0
1, au moins un
2k · x de la cible. Puisque
noeud de C a un contact longue-distance `a distance 6 log ˆk
les liens longue-distance de C n’ont pas encore ´et´e visit´es, ces ´ev´enements sont
ind´ependants et en posant p1 = p0

1/5, on conclut la preuve. (cid:3)
Ce r´esultat nous permet de prouver le th´eor`eme suivant :

2k · x de la cible, alors C contient

5, si aucun noeud de

Th´eor`eme 2.10 (Analyse de l’algorithme 2)
Pour tout 1 6 k 6 log n, l’algorithme 2 requiert Θ(log2 n/ log ˆk) bits de m´emoire,
et calcule, pour toute paire de noeuds (s, t) de K1
k,n, un chemin de s `a t dont
l’esp´erance de la longueur vaut

O

log n

.

De plus, il visite O(cid:0)(log n/ log(1 + k))2(cid:1) noeuds en esp´erance pour calculer ce

log(1 + k)

chemin.
Preuve. Sans perte de g´en´eralit´e, on peut supposer que la cible est 0 et que la
source est s, `a distance s de 0. Soient x le porteur courant du message et x sa
distance `a la cible. Rappelons tout d’abord qu’`a la ﬁn d’une phase d’exploration,
l’algorithme s´electionne le noeud le plus proche de la cible parmi les contacts

 

(cid:18) log log n

(cid:19)2!

48

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

locaux ou longue-distance de A ∪ C et que l’ensemble A ∪ C s’´etend en direc-
tion de la cible ; ainsi, chaque phase d’exploration visite des noeuds qui n’ont
jamais ´et´e explor´es auparavant. Chaque phase d’exploration est ind´ependante des
pr´ec´edentes.

L’ex´ecution de l’algorithme se d´ecompose en T phases successives de divi-
(ˆk = k + 1). T est la partie enti`ere
sion de la distance courante `a la cible par 2k
log ˆk
de la solution T 0 de (
= s. Lorsque l’on atteint une distance `a la cible
inf´erieure `a stop, on ex´ecute l’algorithme glouton, cela se produit apr`es U di-
, o`u U est la partie enti`ere de la solution U0 de
visions de la distance par
l’´equation (

= stop. On remarquera que :

log(1+k) )T 0

2k
log ˆk

2k

2k

log(1+k) )U0
T ∼

log s

log(1 + k)

et U ∼ 3 log log n + log k

log(1 + k)

.

)i−1 < x 6 ( 2k
log ˆk

La phase i, 0 6 i 6 T , dure tant que ( 2k
)i. On dit qu’une ´etape
log ˆk
d’exploration en phase i r´eussit si elle conduit `a une phase j 6 i − 1. Soient Yi
et Zi les variables al´eatoires pour le nombre de noeuds visit´es durant la phase i
et pour la longueur du chemin par lequel le message est rout´e durant la phase i
respectivement.
Supposons que nous soyons en phase i, avec T > i > U, alors x >
stop. Selon la proposition 2.9, chaque ´etape d’exploration r´eussit avec proba-
bilit´e sup´erieure ou ´egale `a p1. Chaque ´etape d’exploration visite moins de
d’un chemin de longueur inf´erieure ou ´egale `a hmax(x) + g(x) 6 7g(x) vers
la cible. On obtient :

(cid:0)hmax(x) + g(x)(cid:1) bmax(x) 6 7g(x)bmax(x) noeuds et route le message le long

E[Yi] 6X

(cid:16)

(j · 7g(x)bmax(x)) (1 − p1)j−1(cid:17)

j>1

6 7g(x)bmax(x)

p1
6 7
et E[Zi] 6 7g(x)
p1
p1

6 7
p1

log n
log ˆk
log n log log n

i log2 ˆk

,

puisque log x > i log(1 + k). Une fois que l’on a atteint une phase i 6 U, on a
x 6 stop = k log2 n et l’algorithme ex´ecute l’algorithme glouton G de Kleinberg.
D’apr`es [Kle00], nous savons que, pour une certaine constante γ, l’algorithme
glouton calcule alors un chemin de longueur inf´erieure `a

γ log n log(stop)/k 6 3γ(log n log log n)/k,

en esp´erance. De plus,
esp´erance.

il visite moins de 3γ(log n log log n)/k noeuds en

2.4 : Analyse de l’algorithme en dimension 1

49

Posons xi = ( 2k
log ˆk

)i. On a log xi > i log ˆk/2, ainsi :

hmax(xi) 6 6g(xi)
et g(xi) 6 2 log n log log n

i log2 ˆk

.

La longueur moyenne du chemin de s `a 0 calcul´ee par l’algorithme est major´ee
par :

TX

i=0

E[Zi] 6 γ

log n log(stop)

k

+

1
p1

6 3γ

(cid:18)

log n log log n

k

+

(cid:18) log log n

14
p1

(cid:19)2(cid:19)

= O

log n

log ˆk

X

(hmax(xi) + g(xi))

U <i6T
log n log log n

X

1
i

log2 ˆk

U <i6T

.

Le nombre moyen de noeuds visit´es par l’algorithme est major´e par :

TX

i=0

E[Yi] =

1
p1

TX

i=0

(hmax(xi) + g(xi)) bmax(xi)

TX

i=0

.

6 14
p1

log n log log n

(cid:18)(cid:18)log n

log2 ˆk

(cid:19)2(cid:19)

= O

log ˆk

log xi

log log n

1
i

Pour la dur´ee de chaque ´etape d’exploration, l’impl´ementation selon le parcours
en profondeur de l’algorithme requiert seulement

Θ (log n · (bmax(x) + hmax(x) + g(x))) = O(log2 n/ log ˆk)

bits de m´emoire. En effet, chaque adresse de noeud requiert O(log n) bits et
chaque ´etape d’exploration requiert seulement le stockage de l’adresse de la
cible, de l’adresse des noeuds de F (dont le nombre est inf´erieur `a bmax(x) =
O(log n/ log log n) = O(log n/ log ˆk)), ainsi que l’´etat de la pile durant le par-
cours en profondeur de A ∪ C (dont la profondeur est major´ee par hmax(x) +
g(x) = O(log n/ log ˆk)) et le chemin de x au meilleur noeud courant y parmi les
noeuds de A ∪ C et leurs contacts. (cid:3)

50

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

2.5 G´en´eralisation `a toute dimension

Rappelons que dans un r´eseau d-dimensionnel, d > 1, la grille sous-jacente est
le tore d-dimensionnel {−n, . . . , n}d. Chaque noeud u a k liens longue-distance,
le j-`eme lien (1 6 j 6 k) pointant vers un noeud vj choisi ind´ependamment
selon la distribution d-harmonique, i.e. avec probabilit´e 1/(Zn,d · |u − v|d).

Zn,d est le facteur de normalisation calcul´e dans le pr´eambule, p. 22, qui satis-

fait :

2d

(d − 1)!

Hn 6 Zn,d 6

2d

(d − 1)!

Hn + O(1).

L’algorithme pour les r´eseaux d-dimensionnels. Pour g´en´eraliser l’algorithme
2 `a toute dimension, il sufﬁt d’adapter les param`etres de l’exploration de la fac¸on
suivante, le reste de l’algorithme est inchang´e.

D´eﬁnition 2.4 (Param`etres pour l’algorithme 2 en dimension quelconque)
Les valeurs des param`etres pour l’algorithme 2 en dimension d sont, pour chaque
exploration enracin´ee en un noeud x `a distance x de la cible :

hd
max(x) =

log log x − log log log n
log (1 + ck (Hx/Hn))

,

stopd = k log2d+1 n,
o`u c > 0 est une constante telle que c 6 1
les mˆemes qu’en dimension 1.

2d+3 . Les fonctions bmax(x) et g(x) sont

Bari`ere et al. [BFKK01] ont d´emontr´e que le r´eseau de Kleinberg d-dimensionnel
pr´esentait des propri´et´es de routage similaires au r´eseau unidimensionnel. En par-
ticulier, la visite de Ω(log n/k) nouveaux noeuds `a distance comprise entre x et
x/2 de la cible garantit de trouver un contact longue-distance `a distance inf´erieure
`a x/2 de la cible avec probabilit´e constante. Nous montrons que nous pouvons
visiter ces nouveaux noeuds dans une structure d’exploration compacte et obtenir
une longueur de chemin de mˆeme esp´erance que celle obtenue en dimension 1,
avec le mˆeme algorithme. Cela conﬁrme que la dimension a peu d’effets sur le
routage d´ecentralis´e.

La structure des boules dans le tore d-dimensionnel rend toutefois l’analyse
plus difﬁcile. En effet, on ne peut plus minorer la probabilit´e de recoupement dans
la structure d’exploration en consid´erant que des ensembles de noeuds interdits
(zones de s´ecurit´e) sont plac´es sur une chaˆıne de liens locaux dirig´ee vers la cible.
Dans la sous-section suivante, nous analysons les propri´et´es g´eom´etriques des
boules et sph`eres du tore d-dimensionnel. Cela nous permettra de d´eterminer le

2.5 : G´en´eralisation `a toute dimension

51

FIG. 2.8 : Deux exemples de coins (points blancs) des boules centr´ees en 0 dans
le tore (2D et 3D).

placement d’un ensemble de noeuds interdits qui minimise la probabilit´e qu’un
lien longue-distance les ´evite.

Par ailleurs, nous exprimons, dans notre analyse, la d´ependance des constantes
en d, ce qui permet d’´evaluer la perte d’efﬁcacit´e lorsque la dimension augmente.
Cette d´ependance est rarement explicit´ee dans la litt´erature du routage dans le
r´eseau de Kleinberg.
Rappelons que l’on note S(u, r) et B(u, r) la sph`ere ‘1 et la boule ‘1 centr´ees

sur u et de rayon r. On note respectivement s(r) et v(r) leur cardinalit´e.

2.5.1 Lemmes g´eom´etriques pr´eliminaires

Dans le tore 2-dimensionnel, les sph`eres ont des formes en diamant et
pr´esentent des coins. Pour un noeud plac´e sur une sph`ere centr´ee sur la cible,
la probabilit´e que son contact longue-distance soit strictement plus proche de la
cible est minimale lorsqu’il est plac´e sur un de ces coins. Nous montrons ici ce
r´esultat en dimension d > 1. Cela nous permettra, dans la sous-section suivante,
de minorer la probabilit´e de recoupement d’une branche en plac¸ant l’origine du
lien sur un coin de la sph`ere centr´ee sur la cible, de rayon maximal pour la phase
consid´er´ee.

D´eﬁnition 2.5 (Coin d’une sph`ere)
On dit qu’un noeud u est un coin de la sph`ere S(0, r) si u ∈ S(0, r)
et si au plus une des coordonn´ees de u n’appartient pas `a l’ensemble
{−min(r, n), 0, min(r, n)} (voir Fig. 2.8) .
Les coins d’une sph`ere S(v, r) centr´ee en un noeud arbitraire v sont d´eﬁnis par
translation du vecteur v.

······−n···0n···−nn···−n−nn···−nn···−nn···052

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

On remarquera que lorsque r 6 n, S(v, r) est un « octah`edre d-dimensionnel »et
que notre d´eﬁnition de coins correspond `a la d´eﬁnition g´eom´etrique usuelle.
Lemme 2.11 Soit u un noeud `a distance u de la cible. Pour tout r > 0, la pro-
babilit´e que son j-`eme contact longue-distance appartienne `a la boule B(t, r) est
minimale lorsque u est plac´e en un coin de la sph`ere S(t, u) centr´ee sur la cible
t et de rayon u.
Preuve. On peut supposer sans perte de g´en´eralit´e que la cible est 0. On consid`ere
un sommet u = (u1, . . . , ud) qui n’est pas un coin de S(0, u). Sans perte de
g´en´eralit´e, n > u1 > u2 > 0. Soit v = (u1 + 1, u2 − 1, u3, . . . , ud) ∈ S(0, u).
Soit ρu (resp., ρv) la probabilit´e que le j-`eme contact longue-distance de u (resp.,
de v) appartienne `a B(0, r). Nous allons montrer que ρv 6 ρu. En it´erant ce
proc´ed´e un nombre ﬁni de fois, on pousse v dans un coin de la sph`ere, ce qui
conduit au r´esultat.
Pour prouver le r´esultat, on construit une bijection φ : B(0, r) → B(0, r), telle
que pour tout z ∈ B(0, r), φ(z) soit plus loin de v que de u, i.e. |φ(z) − v| >
|φ(z) − u|. En fait, pour la plupart des noeuds z de la boule B(0, r), la distance
|φ(z) − v| sera ´egale `a |z − u| ; et pour les autres noeuds z, |φ(z) − v| sera
sup´erieure ou ´egale `a |z− u|. Puisque la probabilit´e qu’un noeud z soit un contact
longue-distance de u d´ecroˆıt lorsque la distance |z − u| augmente, on a :

ρv =

X
6 X

z∈B(0,r)

z∈B(0,r)

X

z∈B(0,r)

1

|z − v|Zn,d

=

1

|φ(z) − v|Zn,d

1

|z − u|Zn,d

= ρu.

La construction de φ se fait `a partir de la translation du vecteur (1,−1, 0, . . . , 0)
sur le tore. L’action de φ est illustr´ee par la ﬁgure 2.9. On pose :

Γ1 = {z ∈ S(0, r) ∪ S(0, r − 1) : z1 > 0 et z2 6 0}
et Γ2 = {z ∈ S(0, r) ∪ S(0, r − 1) : z1 6 0 et z2 > 0}.

On remarquera que Γ1 ∩ Γ2 = ∅ et que Γ1 et Γ2 sont sym´etriques l’un de l’autre
par rapport `a 0. On d´eﬁnit φ : B(0, r) → B(0, r) de la fac¸on suivante :

(cid:26) (z1 + 1, z2 − 1, z3, z4, . . . , zd)

(z2, z1, z3, z4 . . . , zd)

φ : z 7→

si z 6∈ Γ1,
sinon.

φ est bien une bijection puisque : z ∈ Γ1 ⇔ φ(z) ∈ Γ2 et la restriction de
φ `a B(0, r) r Γ1 est une translation vers B(0, r) r Γ2. En particulier, pour z ∈

2.5 : G´en´eralisation `a toute dimension

53

FIG. 2.9 : Γ1, Γ2 et l’action de φ (repr´esent´ee par les ﬂ`eches noires).

B(0, r) r Γ1, on a |z − u| = |φ(z) − v|.
On consid`ere maintenant z ∈ Γ1 et l’on pose :
∆ = |φ(z), v| − |z − u| = |z2 − 1 − u1| + |z1 + 1 − u2| − |z1 − u1| − |z2 − u2|.
Puisque z1 > 0, z2 6 0 et 0 < u2 6 u1, on a :

∆ = 1 + u1 − u2 + |z1 + 1 − u2| − |z1 − u1|.

Ainsi,

– si z1 6 u2 − 1, alors ∆ = 0,
– si u2 − 1 6 z1 6 u1, ∆ = 2(1 − u2 + z1) > 0,
– et enﬁn, si z1 > u1, ∆ = 2(1 + u1 − u2) > 2.
∆ est donc toujours positif, ce qui conclut la preuve. (cid:3)
Lemme 2.12 Pour tout 1 6 x 6 min(r, n), le nombre de noeuds de B(0, r) `a
distance x d’un coin de S(0, r) est sup´erieur `a xd−1/(d − 1)!.
Preuve. Supposons dans un premier temps que r est inf´erieur ou ´egal `a n. Sans
perte de g´en´eralit´e, on peut supposer que le coin consid´er´e est c = (r, 0, . . . , 0).
Soit c0 = (r − bx/2c, 0, . . . , 0). Pour x 6 r, tout noeud y de S(c0,bx/2c) tel que
y1 est inf´erieur ou ´egal `a r − bx/2c appartient `a B(0, r) et est `a distance x de c
2 s(bx/2c) est sup´erieur
(voir la ﬁgure 2.10). Il y a 1
`a xd−1/(d − 1)!.
Supposons `a pr´esent que r > n, soit µ = br/nc et x 6 n. Sans perte de
– ci = n pour tout i 6 µ,

g´en´eralit´e, on peut prendre comme coin c = (c1, . . . , cd), avec

2 s(bx/2c) noeuds de ce type et 1

0n···−nn···−nB(0,r)Γ1Γ2S(0,u)uvφ54

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

FIG. 2.10 : Illustration de la preuve du lemme 2.12.

– cµ+1 = r − µn,
– et ci = 0 pour tout i > µ + 1.

Soit c0 l’image de c par la translation de vecteur (−bx/2c, 0, . . . , 0). Tout noeud
y de S(c0,bx/2c) tel que y1 6 n − bx/2c appartient `a B(0, r) et est `a distance x
de c. Encore une fois, il y a 1
On en conclut que pour x 6 min(n, r), il y a toujours au moins xd−1/(d − 1)!
noeuds `a distance x de tout coin de S(0, r) dans B(0, r). (cid:3)

2 s(x/2) > xd−1/(d − 1)! noeuds de ce type.

2.5.2 Analyse de l’algorithme

La preuve suit le mˆeme d´eroulement que l’analyse unidimensionnelle de la
section 2.4.2. On commence par montrer qu’avec probabilit´e constante, parmi
Ω(log n/ log ˆk) noeuds,
longue-distance est

il en existe un dont

le contact

(cid:16) 2k

(cid:17)1/d

fois plus pr`es de la cible.

log ˆk
Lemme 2.13 Pour tout 0 < λ 6 1/2, la probabilit´e qu’un noeud u `a distance u
de la cible ait son j-`eme contact longue-distance `a distance inf´erieure ou ´egale `a
λu de la cible est sup´erieure `a :

ln 2
dd 22d

λd
Hn

.

Preuve. Soit p la probabilit´e `a ´evaluer. Sans perte de g´en´eralit´e on peut supposer
que la cible est 0. Comme il s’agit de minorer p, on peut supposer que u est
plac´e sur un coin, d’apr`es le lemme 2.11. Soit c le plus proche coin de S(0, λu) `a
distance (1 − λ)u de u. p est minor´ee par la somme des probabilit´es que le j-`eme

y1≤min(r,n)−x20n···−nn···−ncB(0,r)c!S(c!,x2)S(c,x)2.5 : G´en´eralisation `a toute dimension

55

contact longue-distance de u soit `a distance i de c et dans B(0, λu), pour i allant
de 1 `a 2λu (voir la ﬁgure 2.11).

FIG. 2.11 : Illustration de la preuve du lemme 2.13.

Le lemme 2.12 garantit qu’il y a au moins id−1/(d− 1)! noeuds dans B(0, λu)
`a distance i de c, c’est-`a-dire `a distance inf´erieure ou ´egale `a i + (1 − λ)u de u.
Par ailleurs, il sufﬁt de sommer les probabilit´es pour i allant de λu/(2d) `a λu/d
pour obtenir une minoration (la division par d assure que la valeur est inf´erieure
ou ´egale `a n), on obtient ainsi i + (1 − λ)u 6 2d

λ i. Cela conduit `a :

Z λi/d

>

λd

(2d)d(d − 1)!Hn,d

dt
t

λu/(2d)

λu/dX

i=λu/(2d)

id−1/(d − 1)!

Hn,d(i + (1 − λ)u)d
> ln 2
dd 22d

λd ln 2

(2d)d(d − 1)!Hn,d

λd
Hn

.

p >

>

(cid:3)

Corollaire 2.14 ´Etant donn´e γ > 0, il existe une constante p0
de n, x et k telle que, pour tout sous-ensemble Γ de γ · log n
log ˆk
strictement sup´erieure `a x
et inf´erieure ou ´egale `a x de la cible, il existe
au moins un sommet de Γ dont un des contacts longue-distance est `a distance
inf´erieure ou ´egale `a x

(cid:16) log ˆk
(cid:17)1/d
(cid:17)1/d
(cid:16) log ˆk

de la cible, avec probabilit´e au moins p0
d.

d > 0, ind´ependante
noeuds `a distance

2k

2k

0cuiλuu56

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

Preuve. Selon le lemme 2.13, avec λ =
, la probabilit´e que le j-`eme
contact longue-distance d’un noeud u donn´e soit `a distance inf´erieure ou ´egale `a
λu de la cible est sup´erieure ou ´egale `a :

2k

(cid:16) log ˆk

(cid:17)1/d

ln 2

log(1 + k)

.

kHn

(cid:17)1/d

dd 22d+1

(cid:16) log ˆk
(cid:1)γ k log n

2k

La probabilit´e que tous les k|Γ| contacts longue-distance des noeuds de Γ soient
`a distance strictement sup´erieure `a x

de la cible est donc inf´erieure `a

(cid:0)1 − ln 2

dd 22d+1

log(1 + k)

kHn

log(1+k) 6 e−γ log 2/(dd 22d+1) =def 1 − p0

d < 1.

(cid:3)

Nous allons `a pr´esent minorer la croissance du processus de branchement
sous-jacent dans A∪ C. Nous commenc¸ons par minorer la probabilit´e de cr´eation
d’une nouvelle branche par α−
d = Θ(log x/ log n), de fac¸on similaire au cas uni-
dimensionnel (cf. lemme 2.6).
Lemme 2.15 Il existe une constante c1 > 0 ne d´ependant que de d telle que,
pour tout noeud u `a distance u de la cible t, la probabilit´e que son j-`eme contact
longue-distance v soit valide est au moins :
Hu − c1
(d − 1)!Hn,d

.

Preuve. D’apr`es le lemme 2.11, la probabilit´e que v soit valide est minimale
lorsque u est un coin de S(t, u). D’apr`es le lemme 2.12, le nombre de noeuds
B(t, u − 1) `a distance i d’un coin de S(t, u − 1) est sup´erieure `a id−1
(d−1)!, ainsi la
probabilit´e consid´er´ee est sup´erieure `a :

min(u,n)X

(cid:18) id−1

i=1

(cid:19)

(d − 1)!

·

1

idZn,d

> Hmin(u,n)
(d − 1)!Zn,d

> Hu − c1
(d − 1)!Zn,d

,

pour c1 = ln d + 1, puisque u 6 nd. (cid:3)

Le lemme suivant correspond au lemme 2.5 en dimension 1.

Lemme 2.16 Soient 1 6 j 6 k, u un noeud `a distance u de la cible, v son j-`eme
contact longue-distance, Q un ensemble de q noeuds interdits et r un entier. La

2.5 : G´en´eralisation `a toute dimension

57

probabilit´e que v soit valide et `a distance sup´erieure ou ´egale `a r de tout noeud
de Q est sup´erieure ou ´egale `a :

Hu − 2dHrq1/d − c3

2dHn + c4

,

pour deux constantes c3, c4 > 0 qui ne d´ependent que de d.
Preuve. Soit E l’´ev´enement « v est valide et `a distance sup´erieure ou ´egale `a r
de tout noeud de Q ». On peut r´e´ecrire l’´ev´enement E comme « v est valide et
n’appartient `a aucune des q boules de rayon r centr´ees sur les noeuds de Q ».
On peut alors minorer la probabilit´e de E en remarquant que la probabilit´e que v
soit `a distance δ de u d´ecroˆıt lorsque δ augmente. Ainsi, la probabilit´e de E est
minimale lorsque tous les noeuds interdits sont aussi pr`es que possible de u, c’est-
`a-dire lorsqu’ils sont contenus dans une boule centr´ee sur u de rayon minimum δ,
o`u δ 6 c2qf 1/d, pour une constante c2 > 0, est la solution de l’´equation v(δ) =
q · v(r).

On conclut que :

PrE > Pr{v ∈ B(t, u − 1)} − Pr{v ∈ B(u, δ)}

> Hu − c3
(d − 1)!Zn,d

− Hδ
Zn,d

,

d’apr`es le lemme 2.15. Ainsi :

PrE > Hu − 2dHrq1/d − c3

2dHn + c4

,

pour des constantes c3 et c4 qui ne d´ependent que de d. (cid:3)

Le corollaire suivant correspond au corollaire 2.6 en dimension 1.

Corollaire 2.17 Il existe une constante nd ∈ N, ind´ependante de x, n et k telle
que, si n > nd, durant toute phase d’exploration, pour tout noeud u qui n’a
jamais ´et´e visit´e auparavant et `a distance u sup´erieure `a x
de la cible,
la probabilit´e αu,d que le j-`eme contact longue-distance v de u soit valide et `a
distance sup´erieure ou ´egale `a hd
max(x) + g(x) de tout noeud de F est sup´erieure
`a α−
Preuve. A tout instant d’une phase d’exploration, F contient moins de bmax(x)
noeuds. D’apr`es le lemme 2.16,

d =def c log x/ log n.

2k

(cid:16) log ˆk

(cid:17)1/d

αu,d > Hu − 2dH(hd

max(x)+g(x))bmax(x)1/d − c3
2dHn + c4

.

58

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

Mais, hd

max(x) 6 Hn

Hx

log log x
c log ˆk

, donc :

max(x) + g(x) 6 2Hn
hd
Hx

log log x
c log ˆk

,

puisque 0 < c < 1. Ainsi,

max(x) + g(x))bmax(x)1/d 6 (hd

(hd

max(x) + g(x))bmax 6 2 log n
c log ˆk

.

On obtient :

(cid:18)

(cid:16) log ˆk

(cid:17)1/d

2k

(cid:19)

c2d
22d log2d

log2d ˆk
n

− c3

,

2d+1 log n

q

x

k log2d+1 n. On

αu,d > Hu − 2dH2 log n/c log ˆk − c3

log

x

>

2dHn + c4

pour n > n2 o`u n2 est un entier qui ne d´epend que de d.

Mais x > stopd

remarquera aussi que log ˆk > 1.

> k log2d+1 n, on peut donc ´ecrire x > √
(cid:1) − c3

αu,d > log(cid:0)√

22d log2d

(2k)1/d

2 n

2d+1

c2d

√

log

x

n

k

2d+1 log n

Mais il existe une constante enti`ere n3 ne d´ependant que de d et c telle que,
2 n > 1. Ainsi, pour n > max(n2, n3), et puisque k 6

2d+1

pour n > n3, c2d log
log n, on obtient :

− log(cid:0)22d+1/d log2d+1/d−1/2 n(cid:1) + c3

2d+1 log n

αu,d > log x

2d+3 log n

Puisque le terme n´egatif est o(1) lorsque n tend vers l’inﬁni, il existe
une constante enti`ere n4 ne d´ependant que de d telle que, pour n >
max(n2, n3, n4) =def nd,

αu,d > log x

2d+3 log n

> c log x/ log n.

(cid:3)

)hd

Puisque les param`etres sont choisis de fac¸on `a ce que (1 + kα−

max(x) =
max(x) = log x/ log log n, nous sommes maintenant dans un cadre
(1 + ck Hx
Hn
exactement identique `a celui de la dimension 1. Nous pouvons appliquer le
lemme 2.7 avec β− = α−
d tient compte du nouveau fac-
teur de division de distance `a la cible, on remarquera que le lemme peut s’´enoncer
avec ce nouveau facteur. Nous omettons donc sa preuve qui est identique `a la
dimension 1.

d . Comme le minorant α−

d )hd

2.5 : G´en´eralisation `a toute dimension

59

Lemme 2.18 Pour n > nd, `a la ﬁn de toute phase d’exploration, avec probabilit´e
au moins 1
5,

(cid:16) log ˆk

(cid:17)1/d

2k

de

– soit il existe un noeud de A `a distance inf´erieure ou ´egale `a x

la cible,

– soit il y a plus de log n/(2 log ˆk) noeuds distincts dans C.

La proposition suivante est

le
th´eor`eme 2.10 en dimension d > 1, comme la proposition 2.9 en dimension 1. Le
cadre ´etant ´egalement identique, elle se d´eduit des lemmes pr´ec´edents de fac¸on
similaire `a la proposition 2.9 en dimension 1 et nous omettons sa preuve.

le dernier pas pour pouvoir prouver

Proposition 2.19 Il existe deux constantes pd > 0 et nd, ind´ependantes de n et
x, telles que, pour n > nd, `a la ﬁn de toute phase d’exploration, avec probabilit´e
> pd, il existe un noeud u dans A ∪ C tel que u, ou l’un de ses contacts longue-
distance, est `a distance inf´erieure ou ´egale `a x

(cid:16) log ˆk

(cid:17)1/d

de la cible.

2k

Nous pouvons `a pr´esent conclure avec la g´en´eralisation du th´eor`eme 2.10 en

dimension d > 1.
Th´eor`eme 2.20 (Analyse de l’algorithme 2 en dimension quelconque)
Pour toute dimension d > 1 et pour tout 1 6 k 6 log n, l’algorithme 2 avec les
max(x) et stop = stopd requiert Θ(log2 n/ log ˆk) bits de
param`etres hmax(x) = hd
m´emoire et calcule, pour toute paire de noeuds (s, t) de Kd
k,n, un chemin de s `a t
dont l’esp´erance de la longueur vaut

 

(cid:18) log log n

(cid:19)2!

.

Il visite O(cid:0)(log n/ log(1 + k))2(cid:1) noeuds en esp´erance pour calculer ce chemin.

log(1 + k)

O

log n

Preuve. Soient T et U les solutions de
remarquera que :

= stopd. On

log ˆk

log ˆk

= s et

(cid:17)T /d

(cid:16) 2k

(cid:16) 2k
(cid:17)U/d
et U ∼ d(cid:0)(2d + 1) log log n + log k(cid:1)
(cid:17)i/d
< x 6 (cid:16) 2k

log ˆk

.

T ∼ d log s
log ˆk

Comme en dimension 1, on d´ecompose l’ex´ecution de A en T phases : l’ex´ecution
de la i-`eme phase, pour 1 6 i 6 T , dure tant que la distance x du porteur cou-
rant du message `a la cible v´eriﬁe
. Si Zi et Yi
repr´esentent respectivement les variables al´eatoires pour le nombre de pas et pour

(cid:17)(i−1)/d

(cid:16) 2k

log ˆk

log ˆk

60

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

(cid:16) 2k

log(1+k)

(cid:17)i/d

, on

le nombre de noeuds visit´es en phase 0 6 i 6 N, avec xi =
obtient les formules :

TX
TX

i=0

i=0

TX

i=0

E[Zi] 6 ω

log n log(stopd)

k

+

1
pd

hd
max(xi) + g(xi)

et

E[Yi] =

1
pd

(hd

max(xi) + g(xi)) bmax(xi),

X

T <i6U

o`u ω > 0 est une constante (ind´ependante de n, k). Avec notre choix de param`etres
stopd et hd

max(x), on a :

max(xi) + g(xi) 6 2 log n log log n/(c log(xi) log ˆk),
hd

et aussi log xi > i log ˆk/2d, on obtient :

TX

i=0

TX

E[Zi] 6 ω(2d + 1)

6 O

+

k

log n log log n

 
 (cid:18) log n

(cid:19)2!
(cid:18) log log n
(cid:19)2!

log ˆk

log n

.

et

E[Yi] 6 O

2d
cpd

log n log log n

log2 ˆk

X

U <i6T

1
i

,

log(1 + k)

i=0

Enﬁn, pour la dur´ee de chaque ´etape d’exploration, l’impl´ementation selon le par-

cours en profondeur de l’algorithme requiert Θ(cid:0)log n · (bmax + hd
bits de m´emoire (comme en dimension 1), soit O(cid:0) log2 n/ log ˆk(cid:1) bits. (cid:3)

max(x) + g(x))(cid:1)

2.6 Remarques g´en´erales sur les performances de

l’algorithme et applications

D´ependance des constantes en la dimension. Les facteurs 2d qui apparaissent
dans les constantes lorsque d > 1 peuvent paraˆıtre exag´er´es. Ils sont en effet
obtenus en consid´erant syst´ematiquement les pires cas dans le but d’un r´esultat
asymptotique en n. Une analyse plus ﬁne, et sans doute tr`es d´elicate, des cas
moyens pourrait am´eliorer ces facteurs. Cependant, la croissance de la taille des
boules dans le tore fait naturellement apparaˆıtre des facteurs exponentiels en d
qui ne sont pas compens´es par la distribution harmonique ; il est donc possible
qu’on ne puisse pas obtenir de constante polynomiale en d.

2.6 : Remarques g´en´erales sur les performances et applications

61

Un algorithme proche de l’optimal. Le r´eseau Kd
k,n ayant un degr´e sortant
constant k + 2d (2d liens locaux et k liens longue-distance), son diam`etre est

Ω(cid:0) log n/ log(k + 2d)(cid:1). En 2002, Coppersmith et al. [CGS02a, CGS02b] ont

mins calcul´es par l’algorithme glouton sont de longueur Ω(cid:0) log2 n/(k log log n)(cid:1)

d´emontr´e que, dans un r´eseau de Kleinberg o`u les liens longue-distance sont
sym´etriques (non orient´es), le diam`etre est Θ(log n/ log log n) (l’esp´erance du
degr´e ´etant O(log n) dans la conﬁguration sym´etrique). Cela prouve que de tels
chemins courts existent, toutefois ils n’exhibent pas d’algorithme d´ecentralis´e
qui les calcule. En 2002, Aspnes et al. [ADS02] ont d´emontr´e que, sur un
anneau r´egulier et pour une grande classe de distributions d’arcs al´eatoires
suppl´ementaires (incluant celle du mod`ele de Kleinberg en dimension 1), les che-
pour k 6 log n liens par noeuds. Martel et Nguyen [MN04] ont d´emontr´e par
la suite que le diam`etre d’un r´eseau de Kleinberg Kd
k,n est Θ(log n) lorsque
k = O(1) avec forte probabilit´e, sans toutefois donner un algorithme d´ecentralis´e
qui calcule ces chemins optimaux. On peut ainsi dire que notre algorithme est
proche de l’optimal en terme de longueur de chemin puisqu’il calcule des che-
mins de longueur moyenne O (log n(log log n/ log(1 + k))2), optimale `a un fac-
teur (log log n/ log(1 + k))2 pr`es. En particulier, les chemins sont `a un facteur
log log n de l’optimal lorsque le degr´e sortant est Θ(log n). Ce r´esultat a en par-
ticulier d´emontr´e que les chemins calcul´es par l’algorithme glouton n’´etaient pas
optimaux (le r´esultat de Martel et Nguyen [MN04] ´etant ult´erieur).

Par la suite, d’autres travaux r´ecents ont propos´e des algorithmes de routage
d´ecentralis´es. Manku et al. [MNW04] proposent l’algorithme d´ecentralis´e NoN
(Neighbor-Of-Neighbor). Cet algorithme, `a la base de la preuve de [CGS02b],
effectue une exploration de profondeur 2 dans Kd
O(log n),n sur les liens locaux
et longue-distance. Il calcule des chemins de longueur O(log n/ log log n) en
esp´erance, qui sont donc optimaux dans ce r´eseau o`u k = log n. Toutefois l’al-
gorithme ne s’applique pas aux r´eseaux de degr´e sortant o(log n). Fraigniaud
et al. [FGP04] ont pour leur part propos´e un algorithme d´ecentralis´e o`u l’on
augmente l´eg`erement la m´emoire de chaque noeud (O(log2 n) bits au lieu de
O(log n)) aﬁn de m´emoriser l’ensemble de contacts longue-distance de O(log n)
voisins locaux. Cette connaissance est en fait ´equivalente `a une exploration des
seuls liens locaux sur un rayon O(log1/d n), o`u d est la dimension. Avec cette
connaissance, l’algorithme glouton calcule, entre toute paire de noeuds, un che-
en esp´erance. Ils montrent ´egalement que
min de longueur O
cette taille d’exploration est optimale, au sens qu’une exploration locale plus large
augmente le nombre de noeuds visit´es sans raccourcir les chemins obtenus. Tou-
tefois, les chemins calcul´es restent en moyenne plus longs que ceux calcul´es par
notre algorithme, ce qui montre que l’exploration des voisins des contacts longue-
distance permet un gain substantiel.

log n(cid:0) log n

(cid:16)

(cid:1)1/d(cid:17)

k

62

Chapitre 2 : Algorithmes de routage efﬁcaces et graphes petits mondes

Par ailleurs, Manku et al. ont ´egalement d´emontr´e, dans le lemme 5.2 de
[MNW04], que tout algorithme d´ecentralis´e doit visiter Ω(log2 n/k) noeuds en
esp´erance pour router un message entre deux sommets `a distance n dans Kd
k,n,
c’est-`a-dire la mˆeme latence que l’algorithme glouton. Notre algorithme visite

en esp´erance O(cid:0)(log n/ log(1 + k))2(cid:1) noeuds pour router un message entre deux

sommets distants de n, et est donc asymptotiquement optimal en terme de latence
pour des r´eseaux de degr´e sortant constant ; en visitant un nombre de noeuds du
mˆeme ordre de grandeur que l’algorithme glouton, nous parvenons `a diviser par
un facteur log n/(log log n)2 la longueur du chemin de routage calcul´e.

`A notre connaissance, il n’existe pas de meilleur algorithme d´ecentralis´e sur
les r´eseaux de Kleinberg, c’est-`a-dire qui calcule une longueur de chemin plus
faible asymptotiquement pour tout degr´e sortant O(log n).

Pertinence pour les grands r´eseaux d’interactions. Concernant la navigation
sur les pages web, Kleinberg remarquait dans [Kle02] qu’un individu recherchant
une information sur le r´eseau du web explore de nouvelles pages `a l’aide des hy-
perliens, et revient en arri`ere par la touche « back » du navigateur, effectuant de
cette fac¸on une s´erie d’aller-retours jusqu’`a la page d´esir´ee. Il s’agit cette fois
d’une recherche (algorithme proche du routage puisque l’on construit un che-
min) utilisant une faible exploration du r´eseau. Dans ce cadre, il est pertinent de
consid´erer un algorithme qui, comme celui que nous venons de pr´esenter, effectue
une exploration sur des liens orient´es et est autoris´e `a les reprendre en sens in-
verse lors de l’exploration, le message ´etant ﬁnalement renvoy´e selon un chemin
qui respecte l’orientation.

En termes de r´eseaux sociaux, notre algorithme reste r´ealiste puisque
faible,

Θ(cid:0) log2 n/ log(1 + k)(cid:1), et le processus de choix du prochain interm´ediaire est

la m´emoire requise pour qu’un individu calcule un chemin est

simple `a impl´ementer, puisqu’il sufﬁt de sonder un voisinage de connaissances
avant d’envoyer le message `a la connaissance la mieux plac´ee.

Enﬁn, l’algorithme que nous venons de pr´esenter calcule des chemins de lon-
gueur tr`es courte sans n´ecessiter de calcul global sur le r´eseau, il pourrait donc
s’av´erer tr`es efﬁcace pour le routage des ﬁchiers dans un r´eseau pair-`a-pair. Des
travaux r´ecents ont par exemple montr´e que les r´esultats de Kleinberg pouvaient
permettre d’am´eliorer les performances du syst`eme pair-`a-pair Freenet [ZGG02].

Chapitre 3

Charge du r´eseau

Introduction

Dans le chapitre pr´ec´edent, nous avons constat´e qu’il est possible d’am´eliorer
l’efﬁcacit´e du routage, dans le r´eseau petit monde de Kleinberg, grˆace `a de nou-
veaux algorithmes d´ecentralis´es. Nous nous int´eressons, dans ce chapitre, aux
cons´equences de leur fonctionnement sur un r´eseau, en particulier en terme de
charge des liens.

Nous donnons ici une d´eﬁnition de la charge d’un lien adapt´ee aux r´eseaux

augment´es al´eatoirement.

D´eﬁnition 3.1 (Charge d’un lien)
Soient un r´eseau R dont une partie des liens est tir´ee selon une distribution de
probabilit´e φ, un algorithme de routage A et ‘ un lien de R. On appelle charge
du lien ‘ la probabilit´e que ce lien soit sur le chemin de routage de A entre s et t
lorsque s et t sont deux noeuds choisis al´eatoirement uniform´ement dans R.

On remarquera que dans le cas d’algorithmes de routage monotones o`u un lien
ne peut apparaˆıtre qu’une seule fois sur le chemin de routage, la charge d’un lien
est aussi l’esp´erance (prise sur φ) du nombre de chemins qui le traversent lorsque
A calcule les chemins entre tous les couples de noeuds de R simultan´ement,
divis´ee par le nombre de couples de noeuds de R.

L’´etude de la charge des liens contient deux probl´ematiques :

– la question du choix d’un algorithme qui limite la charge du r´eseau tout en
restant efﬁcace : dans le cas o`u l’on peut le choisir, comme pour les r´eseaux
pair-`a-pair ;

– et le probl`eme de d´eduire, d’apr`es la charge observ´ee sur un r´eseau r´eel, le
type d’algorithme qui y est utilis´e : on peut par exemple penser `a un r´eseau

64

Chapitre 3 : Charge du r´eseau

social dont on observe la quantit´e de messages le long d’une connexion
donn´ee et dont on cherche `a comprendre le m´ecanisme de diffusion.

Nous ´etudions ici

la charge induite par deux algorithmes de routage
d´ecentralis´es sur le mod`ele de Kleinberg. Nous comparons la charge induite par
l’algorithme glouton `a celle d’un algorithme utilisant une faible exploration des
liens. Plusieurs algorithmes d´ecentralis´es utilisant une exploration des liens ont
en effet ´et´e propos´es r´ecemment pour r´eduire la longueur des chemins calcul´es
et l’on peut s’interroger sur leurs cons´equences en terme de charge. Concernant
l’algorithme que nous avons pr´esent´e dans le chapitre pr´ec´edent, l’exploration se
fait `a la fois sur les liens locaux et longue-distance. L’algorithme de Fraigniaud
et al. [FGP04] explore pour sa part les seuls liens locaux (sur une profondeur
O(log n)). Effectuer un choix sur un ensemble de liens longue-distance en fonc-
tion de leur longueur peut entraˆıner une surcharge des liens les plus longs, qui sont
par ailleurs les plus rares. Nous cherchons donc `a d´eterminer l’inﬂuence d’une ex-
ploration locale sur la charge induite sur un lien longue-distance, en fonction de
sa longueur.

Les simulations exp´erimentales qui permettraient d’obtenir une bonne
approximation de la charge d’un lien longue-distance de longueur donn´ee
demanderaient de simuler un grand nombre de r´eseaux de Kleinberg et pour
chacun, un grand nombre de routages entre toutes les paires de noeuds. Ce
proc´ed´e ´etant tr`es lourd et coˆuteux en temps de calcul, nous avons choisi une
approche analytique du probl`eme nous permettant d’obtenir les valeurs exactes
de la charge pour toutes valeurs des param`etres (taille du r´eseau et longueur du
lien). Nous ´etudierons la charge du r´eseau `a travers les observations graphiques
de ces valeurs d´etermin´ees analytiquement. En outre, les ´equations obtenues dans
le cadre de l’´etude de la charge des liens nous permettrons par la suite de pr´eciser
notre ´etude, en comparant les taux d’utilisation du graphe sous-jacent par les
deux algorithmes de routage.

L’approche analytique de la charge met en jeu des ´equations de r´ecurrence
non lin´eaires qui sont des objets math´ematiques encore difﬁciles `a analyser ; c’est
pourquoi nous nous restreindrons, dans ce chapitre, `a l’´etude du mod`ele de Klein-
berg unidimensionnel et unidirectionnel ~Kk,n.
D´eﬁnition 3.2 (R´eseau de Kleinberg unidimensionnel et unidirectionnel)
´Etant donn´es n, k > 1, un r´eseau de Kleinberg unidimensionnel et unidirec-
tionnel, not´e ~Kk,n, est un anneau orient´e {0, . . . , n − 1} o`u chaque noeud u,
u ∈ {0, . . . , n − 1}, est l’origine d’un lien local pointant vers u + 1 mod n
et de k liens longue-distance al´eatoires tels que le j-`eme contact longue distance
de u est v avec probabilit´e 1/(~δ(u, v)Hn), o`u ~δ(u, v) est la distance orient´ee de
u vers v dans l’anneau.

3.1 : Charge et esp´erance du nombre de noeuds visit´es

65

Par extension, on notera u + i le noeud v tel que ~δ(u, v) = i, pour tout

1 6 i 6 n.
D´eﬁnition 3.3 (Intervalle de u `a v)
´Etant donn´es deux noeuds u et v de ~Kk,n, pour k, n > 1, on appelle intervalle de
u `a v, not´e [u, v], le sous-graphe de l’anneau induit par l’ensemble des noeuds
compris entre u et v sur la partie de l’anneau orient´ee de u vers v.
On note (u, v] (resp. [u, v)) l’intervalle de u `a v priv´e de u (resp. priv´e de v).
La ﬁgure 3.1 illustre un r´eseau ~K1,n. Les liens longue-distance sont en gras ; ils
ne sont pas tous repr´esent´es pour plus de lisibilit´e. Comme la plupart des proto-
coles pair-`a-pair fonctionnent sur des anneaux (on peut citer Chord [RFH+01] et
Tapestry [ZHS+04]), l’´etude du seul cas unidimensionnel n’est pas restrictive.

FIG. 3.1 : R´eseau ~K1,n.

3.1 Charge de l’algorithme glouton et esp´erance du

nombre de noeuds visit´es

Dans cette section, nous ´etudions la probabilit´e de visite d’un noeud par l’al-
gorithme glouton G aﬁn d’obtenir une premi`ere estimation de la charge d’un lien
longue-distance induite par G. Nous consid´erons le routage d’une source s vers
une cible t. L’argumentation informelle pr´esent´ee dans cette section est bas´ee sur
l’hypoth`ese, v´eriﬁ´ee exp´erimentalement, que la charge d’un lien est une fonc-
tion unimodulaire de la distance de son origine `a s. Nous verrons par la suite
que l’expression de la charge d’un lien rend cette hypoth`ese difﬁcile `a d´emontrer
math´ematiquement. Aﬁn de clariﬁer notre argumentation, nous nous restreignons
ici au cas o`u le nombre k de liens longue-distance par noeud vaut 1. On notera
L(x) le contact longue-distance du noeud x.

0n−166

Chapitre 3 : Charge du r´eseau

3.1.1 Esp´erance du nombre de noeuds visit´es

Dans le chapitre pr´ec´edent, nous avons vu que l’analyse du routage glouton
peut se faire en d´ecomposant son ex´ecution en phases de divisions successives de
la distance `a la cible par deux. La phase i, pour i variant de 1 `a log n, dure tant
que la distance courante `a la cible est comprise entre 2i et 2i−1. Kleinberg [Kle00]
montre que l’algorithme glouton G visite O(log n) noeuds durant chaque phase.
Barri`ere et al. [BFKK01] ont montr´e par la suite que cette borne sup´erieure
´etait ´egalement une borne inf´erieure. Pr´ecis´ement, pour toutes les phases i de
l’ex´ecution, o`u i est sup´erieur ou ´egal `a log log n, l’esp´erance du nombre de
noeuds visit´es par G est sup´erieure ou ´egale `a c log n, o`u c > 0 est une constante
absolue (th´eor`eme 5 de [BFKK01]). Notons Ci l’ensemble des noeuds dont la dis-
tance `a la cible est comprise entre 2i−1 et 2i. Manku et al. [MNW04] ont d´emontr´e
que G visite au moins un noeud de chaque ensemble Ci avec probabilit´e constante
p > 0, ind´ependante de n et i (lemme 5.3 de [MNW04]). En combinant ces trois
r´esultats, on obtient le fait suivant.
Fait 3.1 Pour tout log log n 6 i 6 log n, soit Ei l’esp´erance du nombre de noeuds
de Ci visit´es par G. Il existe deux constantes absolues c, c0 telles que :

c log n 6 Ei 6 c0 log n.

Rappelons que nous consid´erons le routage entre une source s et une cible t
donn´ees. ´Etant donn´e un noeud x, notons Elien charg´e l’´ev´enement « le lien longue-
distance de x appartient au chemin calcul´e par G de s `a t » et Evisit´e l’´ev´enement
« x est visit´e par G durant le routage de s `a t ». On a :

PrElien charg´e = Pr{L(x) ∈ (x, t]} · PrEvisit´e.

La probabilit´e Pr{L(x) ∈ (x, t]} peut ˆetre ´evalu´ee directement depuis la distri-
bution des liens. Aﬁn d’estimer la charge d’un lien longue-distance, nous allons
donc ´evaluer, dans la section suivante, la probabilit´e que son origine soit visit´ee.
On remarquera par ailleurs que la d´eﬁnition de G implique, sur ~K1,n :

PrEvisit´e = 0

si x /∈ [s, t].

Par cons´equent, nous ne consid´erons que les noeuds appartenant `a l’intervalle
[s, t].

3.1.2 Une premi`ere estimation de la charge

On peut avoir l’intuition que la probabilit´e qu’un noeud soit visit´e par G d´ecroˆıt
avec sa distance `a s, puis croˆıt en se rapprochant de t. En effet, pour un noeud

3.1 : Charge et esp´erance du nombre de noeuds visit´es

67

proche de s, la probabilit´e qu’il soit visit´e est proche de la probabilit´e qu’il soit
le contact longue-distance de la source, la longueur moyenne d’un lien longue-
distance ´etant n/ log n. Mais plus on s’approche de la cible, plus ce ph´enom`ene
s’att´enue. En effet, de plus en plus de contacts longue-distance sont au-del`a de t
et ne peuvent ˆetre pris par G, ce qui favorise la visite des contacts locaux suivants.
`A partir de ces observations, nous avons commenc´e par ´etudier la charge des liens
sous l’hypoth`ese que la probabilit´e qu’un noeud soit visit´e lors du routage de s `a
t est une fonction unimodulaire, d´ecroissante puis croissante, de la distance de s `a
ce noeud. Nous verrons que cette hypoth`ese est v´eriﬁ´ee, exp´erimentalement, pour
le cas k = 1.
Hypoth`ese 3.2 Il existe un noeud y ∈ [s, t] tel que la probabilit´e qu’un noeud
x ∈ [s, t] soit visit´e par G est une fonction f (x) d´ecroissante sur [s, y] (i.e. pour
tout 0 6 i < ~δ(s, y), f (s + i) > f (s + i + 1)) et croissante sur [y, t] (i.e. pour
tout 0 6 i < ~δ(y, t), f (y + i) 6 f (y + i + 1)).
Sous cette hypoth`ese, nous obtenons le lemme suivant qui nous donne une
premi`ere estimation de la charge induite par G sur un lien longue-distance.
Lemme 3.3 Soient n > 1 et s, t ∈ ~K1,n. Sous l’hypoth`ese 3.2, il existe y0 ∈
[y, y + ~δ(s, y)/2] tel que, pour tout noeud x ∈ [y0, t − log n], la probabilit´e que
x appartienne au chemin calcul´e par G de s `a t est :

 

!

,

PrEvisit´e = Θ

log n
~δ(x, t)

et la probabilit´e que son lien longue-distance appartienne au chemin de routage
est :

  H~δ(x,t)

!

~δ(x, t)

.

PrElien charg´e = Θ

Preuve. On consid`ere la premi`ere phase i0 `a partir de laquelle la probabilit´e f
qu’un noeud soit visit´e devient croissante avec sa distance `a la source (i0 existe
d’apr`es l’hypoth`ese 3.2) :

i0 = max{i| 2i 6 ~δ(y, t)}.

Supposons log log n 6 i 6 i0. D’apr`es le fait 3.1, l’esp´erance du nombre de
noeuds visit´es par G dans Ci est sup´erieure `a c log n et inf´erieure `a c0 log n, pour
deux constantes absolues c, c0 > 0. Par ailleurs, l’esp´erance du nombre de noeuds
visit´es dans Ci est aussi la somme, sur tous les noeuds u de Ci, des probabilit´es
qu’ils soient visit´es, par lin´earit´e de l’esp´erance. On remarquera ´egalement que

68

Chapitre 3 : Charge du r´eseau

FIG. 3.2 : Illustration de la preuve du lemme 3.3.

Ci = [t− 2i, t− 2i−1]. Comme f croˆıt sur l’intervalle Ci d’apr`es l’hypoth`ese 3.2,
il existe deux noeuds x−

i , x+

i ∈ Ci tels que :
∀u ∈ [t − 2i, x−

i ], f (u) 6 c0 log n
2i−1
i , t − 2i−1], f (u) > c log n
2i−1 .

,

et ∀u ∈ [x+

En effet, la somme des f (~δ(s, u)) sur tous les noeuds u de Ci est Θ(log n) (c’est
l’esp´erance du nombre de noeuds visit´es) et il y a 2i−1 noeuds u dans cet ensemble
Ci. Ce raisonnement est illustr´e sur la ﬁgure 3.2.
Soit j tel que x ∈ Cj. Supposons dans un premier temps que log log n < j < i0.
Par monotonie de f, on a :

f (x+

ainsi c log n
2j
c’est-`a-dire c log n
2~δ(x, t)

j+1) 6 f (x) 6 f (x−
j−1),
6 f (x) 6 c0 log n
2j−2 ,
6 f (x) 6 4c0 log n
~δ(x, t)

.

Ce raisonnement n´ecessite d’avoir deux autres ensembles Cj−1 et Cj+1 qui res-
pectent l’hypoth`ese de monotonie, ce qui n’est pas le cas lorsque j = i0. Toute-
fois, lorsque j = i0, on peut refaire ce raisonnement pour les noeuds situ´es apr`es
x+
i0

=def y0 puisque l’on dispose alors d’une borne inf´erieure dans Ci0.

Ciblefxx+j+1x−j−1Cj+1Cj−1Cj≥clogn2j≤c"logn2j−2Distance depuis la source3.2 : Charge de deux algorithmes d´ecentralis´es

69

On obtient donc l’´equivalent asymptotique de PrEvisit´e pour tout noeud de
[y0, t − log n]. On tire directement l’´equivalent de PrElien charg´e en remarquant que
Pr{L(x) ∈ (x, t]} = H~δ(x,t)/Hn. (cid:3)

On tire de ce lemme un corollaire imm´ediat sur la probabilit´e qu’un lien

longue-distance donn´e de longueur ‘ appartienne au chemin de routage.
Corollaire 3.4 Soient n > 1 et s, t ∈ ~K1,n. Sous l’hypoth`ese 3.2, il existe y0 ∈
[y, y + ~δ(y, s)/2] tel que, pour tout lien longue-distance donn´e d’origine x ∈
[y0, t − log n] et de longueur ‘ > 1, la probabilit´e qu’il appartienne au chemin de
routage est

(cid:16) log n

(cid:17)

δ(x, t)

Θ

si 1 6 ‘ 6 ~δ(x, t), et 0 sinon,

o`u y0 est donn´e par le lemme 3.3.

Dans la section suivante, nous analysons pr´ecis´ement
r´ecurrence qui r´egissent la probabilit´e qu’un noeud soit visit´e.

les ´equations de

3.2 Charge de deux algorithmes d´ecentralis´es

Nous comparons ici la charge induite par deux algorithmes de routage
d´ecentralis´es. Nous allons d´eterminer leur expression analytique pour pouvoir en-
suite observer leurs variations graphiquement. Le premier est l’algorithme glouton
G (d´ecrit p. 21). Nous avons ensuite choisi un algorithme de routage d´ecentralis´e
Eω o`u il existe une exploration locale des liens longue-distance aﬁn de mettre
en valeur l’impact d’une telle exploration. Il s’agit d’une version simpliﬁ´ee de
l’algorithme pr´esent´e dans [FGP04], choisie dans le but de simpliﬁer l’analyse.
L’algorithme Eω, de param`etre ω > 1 (algorithme 3), proc`ede par explorations
successives des contacts longue-distance des ω voisins locaux imm´ediatement `a
droite du porteur courant du message.

Parmi les contacts longue-distance explor´es, le meilleur est celui qui est le plus
proche de t dans [s, t] ; on dit qu’il s’agit du meilleur lien longue-distance de la
fenˆetre d’exploration. `A la ﬁn d’une exploration, le chemin de routage courant est
´etendu par la chaˆıne de liens locaux qui m`ene `a l’origine du meilleur lien longue-
distance et par ce meilleur lien longue-distance. S’il n’existe pas de meilleur lien
longue-distance, le chemin est simplement ´etendu par la chaˆıne de liens locaux de
longueur ω, on dit alors que l’exploration est en ´echec.

La ﬁgure 3.3 illustre le fonctionnement de Eω : le sch´ema sup´erieur repr´esente
l’exploration de la fenˆetre (noeuds gris) et le sch´ema inf´erieur, le prolongement π
du chemin courant (en gras).

70

Chapitre 3 : Charge du r´eseau

Algorithme 3 Algorithme Eω de routage par exploration locale
Entr´ee : la source s, la cible t, la largeur de fenˆetre ω > 1.
Initialisation : x ← s.
tant que ~δ(x, t) > ω faire

F ← (x, x + ω] (F est la fenˆetre d’exploration).
A ← {L(y)| y ∈ F, L(y) ∈ [x + ω + 1, t]}.
si A 6= ∅, alors

x ← L(y), le meilleur contact de A (choix uniforme en cas
d’´egalit´e).

sinon x ← x + ω + 1 (exploration en ´echec).
ﬁn si
ﬁn tant que
Phase ﬁnale : Suivre les contacts locaux jusqu’`a la cible t.

FIG. 3.3 : Fonctionnement de l’algorithme Eω.

Le fait suivant nous sera tr`es utile pour condenser les notations des probabi-
lit´es dans l’analyse des deux algorithmes. C’est une cons´equence directe de la
distribution des liens longue-distance sur ~Kk,n.
Fait 3.5 Soient k, n > 1. Pour tous 1 6 j 6 k et 1 6 a 6 b 6 n, la proba-
bilit´e que le j-`eme contact longue-distance du noeud v ∈ ~Kk,n soit de longueur
sup´erieure ou ´egale `a a et inf´erieure ou ´egale `a b est :

Hb
Hn

si a = 1

et Hb − Ha−1

Hn

sinon.

Preuve. La probabilit´e qu’un lien longue-distance donn´e soit de longueur ‘ est
1/(‘Hn) dans ~Kk,n. En sommant sur ‘ allant de a `a b, on obtient le r´esultat. (cid:3)

sπttsωMeilleur lien3.2 : Charge de deux algorithmes d´ecentralis´es

71

Dans la suite, nous omettrons g´en´eralement le param`etre n dans le nom des

fonctions consid´er´ees pour all´eger l’´ecriture.

3.2.1 Charge induite par l’algorithme glouton

Dans cette section, nous calculons la charge induite par l’algorithme G sur un

lien longue-distance.

3.2.1.1 Distance critique source-cible

Avant de calculer la charge d’un lien longue-distance, nous ´etudions dans cette
section le cas critique o`u G n’utilise aucun lien longue-distance dans son chemin
de routage.

Si s et t sont trop proches, tous les liens longue-distance des noeuds de [s, t]
ont une forte probabilit´e de d´epasser la cible. La proposition suivante d´emontre
qu’il existe ainsi une distance minimale source-cible en dessous de laquelle G
n’emprunte aucun lien longue-distance dans son chemin de routage, avec forte
probabilit´e.
Proposition 3.6 Soient k, n > 1 et s, t ∈ ~Kk,n. Si
log n

~δ(s, t) 6

k(log log n)2 ,

alors le chemin de routage calcul´e par G de s `a t est compos´e uniquement de liens
locaux avec probabilit´e 1 − o(1) (lorsque n tend vers l’inﬁni).
Preuve. Notons m = ~δ(s, t) et p la probabilit´e consid´er´ee, i.e. p est la probabilit´e
que que tous les contacts longue-distance des noeuds de [s, t] soient au-del`a de t.
Soit x ∈ [s, t], d’apr`es le fait 3.5, pour tout 1 6 j 6 k, la probabilit´e que Lj(x)
soit au del`a de t est :

> 1 − Hm
Hn

.

Chacun des k liens longue-distance de chacun des m noeuds de [s, t] ´etant tir´e
ind´ependamment, on en d´eduit :

(cid:18)

1 − H~δ(x,t)
Hn
(cid:18)

(cid:19)km >

(cid:18)

p >

1 − Hm
Hn

1 − Hlog n/(k(log log n)2)

Hn

Soit encore :

log p >

log n

(log log n)2

(cid:18)

−log log n
log n
1

+ o

(cid:19)

.

log log n

> −

1

log log n

+ o

(cid:19)k (log n/(k(log log n)2))
(cid:18) log log n

(cid:19)(cid:19)

log n

72

Finalement,

(cid:3)

Chapitre 3 : Charge du r´eseau

p > 1 −

1

log log n

= 1 − o(1).

3.2.1.2 Probabilit´e de visite d’un noeud

Comme nous l’avons remarqu´e dans la section 3.1, une premi`ere ´etape pour
quantiﬁer la charge des liens induite par l’algorithme glouton entre une source et
une cible donn´ees consiste `a d´eterminer la probabilit´e qu’un noeud de l’intervalle
[s, t] soit visit´e. Les probabilit´es sont calcul´ees sur tous les r´eseaux al´eatoires de
Kleinberg possibles.

´Etant donn´es s et t, pour tout x ∈ [s, t], on note g

bilit´e que x appartienne au chemin de routage calcul´e par G de s `a t.
Proposition 3.7 Soient k, n > 0 et s, t ∈ ~Kk,n, avec ~δ(s, t) = m. Pour tout noeud
x ∈ [s, t] o`u l’on note x = ~δ(s, x) on a :

(cid:16)~δ(s, x), ~δ(s, t)
(cid:17)

la proba-

(cid:19)k

g(x, m) = 1

g(x, m) =

xX

si x = 0,
(g(x − i, m) · px−i) +

avec :

i=1

px−i =

(cid:18)

1 − Hm−x+i − Hi

Hn

(cid:18)
(cid:19)k −

1 − Hm−x+1

Hn

g(x − 1, m)

sinon,

(cid:18)

1 − Hm−x+i − Hi−1

Hn

(cid:19)k

.

Preuve. Soit x l’´ev´enement « le noeud x appartient au chemin de routage ». On
remarquera tout d’abord que x = 0 correspond `a x = s, comme la source est
toujours sur le chemin de routage, on a g(0, m) = 1.
Supposons x > 1. Soit y ∈ [s, x) son pr´ed´ecesseur imm´ediat sur le chemin.

Alors :

– soit x est un contact longue-distance de y et le lien longue-distance appar-
– soit y = x − 1 et le lien local de y `a x appartient au chemin (´ev´enement

tient au chemin (´ev´enement 1
x),

x).
2

On a x = 1
Pr x = Pr 1

x ∪ 2
x, o`u les deux ´ev´enements 1
x.
x + Pr 2
La probabilit´e de 2

x est la probabilit´e que y appartienne au chemin et ait tous
ses contacts longue-distance au-del`a de t. Comme l’appartenance de y au chemin

x et 2

x sont disjoints. Ainsi,

3.2 : Charge de deux algorithmes d´ecentralis´es

73

calcul´e par G est ind´ependante de ses liens longue-distance, on obtient en utilisant
le fait 3.5 :

x =(cid:0)1 − Hm−x+1

(cid:1)kg(x − 1, m).

Pr 2

Hn

Pour calculer la probabilit´e de l’´ev´enement 1

x, on somme sur toutes les po-
sitions possibles de y la probabilit´e que y soit visit´e, qu’il ait x pour contact
longue-distance et que G emprunte ce lien longue-distance. Comme x a un unique
pr´ed´ecesseur sur le chemin, ce sont des ´ev´enements deux-`a-deux disjoints et l’on
peut bien faire la somme de ces probabilit´es.
Soit px−i la probabilit´e que le noeud y = x − i ait j liens longue-distance
d’extr´emit´e x et ses k − j autres contacts longue-distance hors de l’intervalle
[x, t], pour tous les 1 6 j 6 k possibles. On remarquera que dans ce cas de
ﬁgure, si G visite y, le noeud visit´e suivant est x. Cet ´ev´enement est ind´ependant
de x−i, on a donc :

Pr 1

x =

(Pr x−i · px−i),

X

0<i6x

o`u Pr x−i = g(x − i, m).

On ´evalue enﬁn px−i en sommant sur toutes les positions possibles des j liens
longue-distance de y de longueur ´egale `a i (et donc d’extr´emit´e x) parmi ses k
La probabilit´e d’avoir j liens de longueur i est 1/(iHn)j et celle d’avoir k − j
liens dont l’extr´emit´e n’appartient pas `a [x, t] est (1 − (Hm−x+i − Hi−1)/Hn)k−j
en utilisant le fait 3.5. On obtient :

(cid:1) positions possibles pour les liens de longueur i.
liens. Pour chaque j, il y a(cid:0)k
(cid:19)(cid:18) 1
(cid:18)k

(cid:19)j(cid:18)

(cid:19)k−j

kX

1 − Hm−x+i − Hi−1

px−i =

.

j

j

iHn

j=1

Hn

En ajoutant

l’expression du binˆome
(1 − (Hm−x+i − Hi)/Hn)k. Puisque Hi = Hi−1 + 1/i, cela d´emontre le r´esultat.
(cid:3)

le terme j = 0, on reconnaˆıt

Nous avons `a pr´esent une ´equation de r´ecurrence non lin´eaire d´eﬁnissant
de fac¸on exacte la probabilit´e de visite d’un noeud. Toutefois les ´equations de
r´ecurrence non lin´eaires sont encore mal connues et se r´ev`elent difﬁciles `a ana-
lyser. En particulier, l’unimodularit´e est une propri´et´e difﬁcile `a obtenir, et qu’on
ne sait d´emontrer que sur des cas tr`es particuliers. La programmation de cette
r´ecurrence nous permet cependant de tracer ses valeurs et d’observer ses varia-
tions pour toutes valeurs des param`etres m et n. Les courbes ont une grande sta-
bilit´e par rapport `a la taille de l’anneau n, on peut donc se restreindre `a une petite
taille d’anneau tout en observant des trac´es repr´esentatifs des valeurs sup´erieures
de n. En choisissant par exemple un anneau de taille 50 ou 100, nous parvenons `a

74

Chapitre 3 : Charge du r´eseau

des trac´es repr´esentatifs des anneaux plus grands, tout en conservant un temps de
calcul tr`es faible.
Nous avons choisi de repr´esenter le trac´e de g(x, m) pour m = n − 1 et
pour diff´erents degr´es sortants k ∈ {1, . . . , 6} (ﬁgure 3.4 et 3.5 pour son trac´e
en ´echelle semi-logarithmique). Dans le cas o`u m = n − 1, tous les noeuds sont
susceptibles d’ˆetre visit´es. Pour des valeurs inf´erieures de m, la probabilit´e qu’un
lien longue-distance d´epasse t augmente mais elle est renormalis´ee uniform´ement
pour tous les noeuds de l’intervalle [s, t] et l’on obtient une courbe similaire. Le
trac´e en ´echelle semi-logarithmique nous permet d’observer les variations plus
pr´ecis´ement.

FIG. 3.4 : Variations de g(x, n − 1) en fonction de x pour n = 100.

Observations des trac´es. Lorsqu’il n’y a qu’un lien longue-distance par noeud
(k = 1) la courbe d´ecroˆıt assez rapidement jusqu’`a atteindre un minimum, puis
devient croissante `a partir de ce minimum (ﬁgures 3.4 et 3.5). Nous avons pu
observer exp´erimentalement une propri´et´e remarquable de la position de ce mi-
nimum sur [s, t]. La ﬁgure 3.6 repr´esente les diff´erentes positions x du minimum
de la courbe g(x, n − 1) lorsque l’on fait varier n de 1 `a 104. On observe une
droite de pente 1/4 (ﬁgure 3.6) qui sugg`ere que la probabilit´e minimale est tou-
jours atteinte au quart de l’intervalle [s, t] lorsque k = 1. Toutefois, la distribution
des liens longue-distance fait intervenir Hn qui varie peu lorsque n varie de 1 `a

 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 100g(x,n-1)xk=1k=2k=3k=4k=5k=63.2 : Charge de deux algorithmes d´ecentralis´es

75

FIG. 3.5 : Variations de g(x, n − 1) en fonction de x pour n = 100 en ´echelle
semi-logarithmique.

104 ; la valeur 1/4 peut donc cacher une d´ependance en n (par exemple, la pente
pourrait en fait s’exprimer comme 1/(4 + Hn/n2), mais ce type de d´ependance
est invisible pour n 6 104).

Lorsque k > 1, la partie croissante de la courbe est assez similaire au cas
k = 1, mais la partie d´ecroissante atteint un minimum d`es x = 1 et remonte
rapidement avec un point d’inﬂexion. Pour des valeurs interm´ediaires de k (k = 2
et 3), la fonction pr´esente mˆeme deux extrema locaux. Cela peut s’expliquer en
remarquant que lorsque m = n − 1, G utilise toujours un lien longue-distance de
s, et lorsque k > 1, la probabilit´e que le lien pris soit long est plus grande. La
probabilit´e de visiter un noeud tr`es proche de s devient donc de plus en plus faible
et la courbe s’inﬂ´echit de plus en plus (lorsque k augmente), en passant par une
´etape interm´ediaire o`u le minimum, qui existe pour k = 0, est encore pr´esent.

Les trac´es observ´es pr´esentent un comportement assez complexes pour les
petites valeurs de x qui justiﬁe notre approche graphique. On remarquera que ces
trac´es corroborent l’hypoth`ese 3.2 lorsque k = 1.

 1e-05 0.0001 0.001 0.01 0.1 1 0 10 20 30 40 50 60 70 80 90 100g(x,n-1)xk=1k=2k=3k=4k=5k=676

Chapitre 3 : Charge du r´eseau

FIG. 3.6 : Valeurs de x au minimum de la courbe g(x, n − 1) pour k = 1 et
1 6 n 6 10000

3.2.1.3 Charge d’un lien de longueur ‘ > 1.

Nous sommes `a pr´esent en mesure d’exprimer la charge induite par l’algo-
rithme glouton G sur un lien longue-distance de longueur ‘ > 1 et d’origine
donn´ee.

Proposition 3.8 Pour tout k, n > 1, soit loadG(k, ‘) la charge d’un lien longue-
distance, de longueur ‘ > 1 et d’origine x induite par G dans ~Kk,n. On a :

"
 (cid:18)
1 − Hm−x − H‘
(cid:18)k − 1
(cid:19)(cid:18)
1 − Hm−x − H‘

g(x, m)

Hn

(cid:19)k−1
(cid:19)k−1−i(cid:18) 1

+

!#

(cid:19)i 1

.

i

Hn

‘Hn

i

loadG(k, ‘) =

1
n2

n−1X

m=‘

m−‘X
k−1X

x=0

i=1

Preuve. Nous calculons l’esp´erance du nombre de chemins traversant le lien d’ori-
gine x et de longueur ‘ lorsque l’on choisit une source et une cible al´eatoirement
uniform´ement. On consid`ere le routage entre chacun des n2 couples (s, t) du
r´eseau. On remarquera que, pour un lien d’origine x et de longueur ‘ > 1 ﬁx´ees,

3.2 : Charge de deux algorithmes d´ecentralis´es

77

les seuls couples (s, t) source-cible pour lesquels le chemin de routage est suscep-
tible de contenir le lien sont ceux qui v´eriﬁent x ∈ [s, t − ‘]. Notons x = ~δ(s, x)
et m = ~δ(s, t), on suppose `a pr´esent m > ‘ + x (les autres valeurs de m ont une
contribution nulle dans l’esp´erance).

La probabilit´e que le lien longue-distance consid´er´e soit sur le chemin calcul´e
entre s et t est exactement la probabilit´e que x appartienne au chemin (probabilit´e
g(x, m)) et que les k − 1 autres liens longue-distance de x soient de longueur
inf´erieure `a ‘ ou strictement sup´erieure `a m− x (avec un choix al´eatoire uniforme
en cas d’´egalit´e). Lorsqu’il n’y a pas de cas d’´egalit´e, d’apr`es le fait 3.5, le lien
est choisi avec probabilit´e :

(cid:16)

p1(x, m) =

1 − Hm−x − H‘

(cid:17)k−1

.

Hn

le lien consid´er´e est choisi avec probabilit´e uniforme 1/i. Il y a alors(cid:0) i

En cas d’´egalit´e avec i autres liens longue-distance de longueur ‘, pour 1 6 i 6 k,
tions possibles pour ces liens de longueur ‘ parmi les k − 1 liens autres que celui
consid´er´e. La probabilit´e d’avoir i liens de longueur ‘ est 1/(‘Hn)i ; et la proba-
bilit´e d’avoir k − 1 − i liens de longueur strictement inf´erieure `a ‘ ou qui vont
au-del`a de t est (1 − (Hm−x − H‘)/Hn)k−1−i. Le lien consid´er´e est donc choisi
avec probabilit´e :

(cid:1) posi-

k−1

p2(x, m) =

k−1X

i=1

k − 1

(cid:18) i
(cid:19)(cid:18)
1 − Hm−x − H‘
g(x, m)(cid:0)p1(x, m) + p2(x, m)(cid:1).

Hn

(cid:19)k−1−i(cid:18) 1

(cid:19)i 1

.

‘Hn

i

La probabilit´e que le lien appartienne au chemin est ﬁnalement :

Notons X(s,t) la variable al´eatoire qui vaut 1 si le chemin de routage calcul´e par
G utilise le lien consid´er´e et 0 sinon. X(s,t) est conditionn´ee par le choix de (s, t)
comme couple source-cible pour le routage. N´eanmoins, X(s,t) est d´etermin´ee de
fac¸on unique par les param`etres x et m, et son esp´erance vaut

E[X(s,t)] = g(x, m) (p1(x, m) + p2(x, m))

si m > ‘ + x

= 0

sinon.

Comme la source et la cible sont choisies de fac¸on al´eatoire uniforme, tous les
couples (s, t) ont une probabilit´e 1/n2 d’ˆetre choisis pour le routage. Par lin´earit´e
de l’esp´erance, on en d´eduit :

loadG(k, ‘) =

1
n2

n−1X

m−‘X

m=‘

x=0

g(x, m) (p1(x, m) + p2(x, m)) .

78

(cid:3)

Chapitre 3 : Charge du r´eseau

Observations des trac´es. Pour pouvoir comparer les trac´es avec diff´erentes va-
leurs de k, nous devons renormaliser les valeurs. En effet, lorsque l’on multiplie
le nombre de liens longue-distance par noeud par un facteur c > 0, on diminue la
probabilit´e qu’un lien soit parcouru par un chemin. Comme il y a c fois plus de
liens de longueur ‘ en esp´erance qu’auparavant, on renormalise le nombre de che-
mins de routage entre chaque paire source-cible en multipliant la charge par c aﬁn
de faciliter la comparaison des courbes en fonction de ‘ pour les diff´erentes valeurs
de k. Ce facteur de normalisation est celui qui a donn´e les meilleurs r´esultats. La
ﬁgure 3.7 (3.8 pour le trac´e en ´echelle semi-logarithmique) repr´esente les trac´es
des charges loadG(k, ‘) en fonction de ‘ pour un anneau de n = 50 noeuds et
diff´erents degr´es sortants k ∈ {1, 3, 4, 5}.

FIG. 3.7 : loadG(k, ‘) pour n = 50 et k ∈ {1, 3, 4, 5}.

On observe une charge d´ecroissante en ‘, c’est-`a-dire que le ratio de
l’esp´erance du nombre de chemins traversant un lien sur le nombre total de
chemins est d´ecroissante avec sa longueur. Cette d´ecroissance est assez lente,
sauf pour les petites valeurs de ‘ (‘ 6 5). Dans le cas k = 1, on observe
une d´ecroissance quasi lin´eaire en ´echelle semi-logarithmique `a partir d’une lon-
gueur de lien ‘ = 4. Pour des degr´es k > 1, la d´ecroissance en ´echelle semi-
logarithmique n’est plus lin´eaire. Ces observations exp´erimentales montrent que

 0 0.05 0.1 0.15 0.2 0.25 0 5 10 15 20 25 30 35 40 45 50lload(1,l)3*load(3,l)4*load(4,l)5*load(5,l)3.2 : Charge de deux algorithmes d´ecentralis´es

79

FIG. 3.8 : loadG(k, ‘) pour n = 50 et k ∈ {1, 3, 4, 5} en ´echelle semi-
logarithmique.

G utilise surtout les liens longue-distance tr`es courts (charg´es `a plus de 10%) qui
sont aussi les plus fr´equents. Cependant, les liens de grande longueur (sup´erieure
`a n/2) sont utilis´es de fac¸on non n´egligeable et le sont d’autant plus qu’on aug-
mente le degr´e sortant k ; il s’agit donc d’une distribution `a queue lourde.

3.2.2 Analyse de l’algorithme d’exploration

Pour analyser la charge induite par l’algorithme Eω sur un lien longue-distance
donn´e L, nous cherchons `a d´ecomposer l’´ev´enement « L appartient au chemin de
routage » en ´ev´enements disjoints correspondant aux diff´erentes ´etapes possibles
pr´ec´edant la visite de son origine, comme dans l’analyse de G. Cette analyse se
r´ev`ele plus difﬁcile pour l’algorithme Eω. En effet, un lien longue-distance sera
emprunt´e s’il est le meilleur de sa fenˆetre d’exploration F ; celle-ci peut d´ebuter
en chacune des ω + 1 positions `a gauche de son origine. La position de la racine
de la fenˆetre d’exploration correspond en outre `a l’ach`evement d’une exploration
pr´ec´edente ; il s’agit du contact longue-distance du dernier lien longue-distance
suivi ou du dernier noeud de la fenˆetre pr´ec´edente, si celle-ci ne contenait aucun
lien longue-distance valide pour le routage (fenˆetre en ´echec).

Par ailleurs, dans le cas de l’algorithme Eω, la probabilit´e de visite d’un noeud

 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 1 10 100lload(1,l)3*load(3,l)4*load(4,l)5*load(5,l)80

Chapitre 3 : Charge du r´eseau

n’apporte pas sufﬁsamment d’information pour le calcul de la charge. Nous calcu-
lons donc directement la probabilit´e qu’un lien longue-distance soit emprunt´e en
fonction de sa longueur, de sa distance `a la source et de la distance entre la source
et la cible.

3.2.2.1 Charge d’un lien longue-distance pour une source et une cible

donn´ees

Pour cette section, on se donne n, ω > 1 ainsi qu’une source s et une cible t
pour le routage de Eω dans ~K1,n et l’on note m = ~δ(s, t). Du fait de la difﬁcult´e
de l’analyse de la charge pour cet algorithme, nous nous restreignons au cas k = 1.

Nous commenc¸ons par calculer d’une part la probabilit´e qu’une fenˆetre d’ex-
ploration F soit en ´echec (lemme 3.9) et d’autre part celle qu’un lien longue-
distance soit le meilleur d’une fenˆetre donn´ee (lemme 3.10). En calculant ces deux
probabilit´es pour toutes les positions possibles d’une fenˆetre, nous pourrons cal-
culer la probabilit´e qu’un lien longue-distance de longueur et d’origine donn´ees
appartienne au chemin calcul´e par Eω entre s et t (proposition 3.11).

Lemme 3.9 Soit x le porteur courant du message, on note x = ~δ(s, x). Pour tout
0 6 x 6 m − ω − 1, la probabilit´e Echec(x, m) que la fenˆetre d’exploration F
enracin´ee en x soit en ´echec est :

(cid:19)

.

Echec(x, m) =

1 − Hm−ω−x

Hn

1 − Hm−y−x − Hω−y

Hn

(cid:19) ω−1Y

(cid:18)

y=0

Preuve. La fenˆetre F = [x, x + ω] est en ´echec si et seulement si tous les contacts
longue-distance des noeuds de F sont hors de l’intervalle [s + x + ω + 1, t]. Soit
encore : si pour tout noeud y de F , `a distance y 6 ω de x, son lien longue-distance
est de longueur sup´erieure stricte `a m − y − x ou inf´erieure stricte `a ω − y + 1.
D’apr`es le fait 3.5, la probabilit´e de cet ´ev´enement est ´egale `a :

(cid:18)

(cid:18)
(cid:18)

(cid:19)

1 − Hm−y−x − Hω−y
Hn
1 − Hm−ω−x

(cid:19)

si y = ω.

Hn

si y 6= ω,

Les liens longue-distance des noeuds de F ´etant tir´es ind´ependamment, la pro-
babilit´e de l’intersection de ces ´ev´enements est le produit de ces probabilit´es. (cid:3)

3.2 : Charge de deux algorithmes d´ecentralis´es

81

Lemme 3.10 Soit x ∈ [s, t] l’origine d’un lien longue-distance L de longueur
‘, on note x = ~δ(s, x). La probabilit´e conditionnelle M eilleur(i, x, ‘, m) que
L appartienne au chemin calcul´e par l’algorithme Eω de s `a t, sachant qu’une
fenˆetre d’exploration est enracin´ee en y = x − i avec 0 6 i 6 ω, vaut :

M eilleur(i, x, ‘, m) = 0

M eilleur(i, x, ‘, m) =

h

ωX
Y

α=0

si

‘ 6 ω − i ou ‘ > ω − x,

αY

(cid:18)
X
(cid:18)
1 − Hm−x+i−j − Hi−j+‘−1

α + 1

q=1

1

Hn

(‘ + i − jq)Hn

1

(cid:19)i

sinon.

(cid:19)

×

j1<···<jα∈{0,...,ω}\{i}

j∈{0,...,ω}\{i,j1,...,jα}

Preuve. L’´ev´enement consid´er´e ne d´epend que de l’ensemble des longueurs des
liens longue-distance des noeuds de la fenˆetre d’exploration [x − i, x − i + ω].
L appartient au chemin de routage s’il est le meilleur de la fenˆetre. Cela signi-
ﬁe que son contact longue-distance L(x) appartient `a [x − i + ω + 1, t] et est plus
proche de t que les autres contacts de la fenˆetre qui appartiennent `a [x−i+ω+1, t].
Si ‘ 6 ω−i ou ‘ > ω−x, L(x) n’appartient pas `a [x−i+ω +1, t] et la probabilit´e
est nulle.
Supposons maintenant que L(x) appartient `a [x − i + ω + 1, t]. On peut
d´ecomposer cet ´ev´enement en une union de ω + 1 ´ev´enements disjoints Eα,
0 6 α 6 ω, en fonction du nombre de liens ex-aequo avec L. Pour tout
0 6 α 6 ω, Eα est l’´ev´enement « α noeuds de [x − i, x − i + ω], distincts
de x, ont le mˆeme contact longue-distance L(x) que x, aucun des ω − α autres
noeuds de la fenˆetre n’a son contact longue-distance dans [L(x), t], et L est choisi
comme meilleur parmi les ex-aequo ». On remarquera que la probabilit´e que L
soit choisi uniform´ement lorsqu’il y a α autres liens ex-aequo est 1/(α + 1).
Chaque Eα se d´ecompose `a son tour en une somme d’´ev´enements disjoints
Ej1,...,jα, chacun correspondant `a la restriction de Eα `a un des placements possibles
0 6 j1 < . . . < jα 6 ω, jq 6= i pour tout 1 6 q 6 α, des α origines xjq des
liens ex-aequo dans la fenˆetre, o`u ~δ(s, xjq ) = x − i + jq. La ﬁgure 3.9 illustre
ces notations dans le cas o`u α = 2 ; les noeuds de la fenˆetre sont gris clair et les
ex-aequo sont gris fonc´e.

Comme il s’agit d’´ev´enements disjoints, on a :

ωX

X

α=0

j1<···<jα∈{0,...,ω}\{i}

1

α + 1

· PrEj1,...,jα.

M eilleur(i, x, ‘, m) =

L’´ev´enement Ej1,...,jα est l’intersection des ´ev´enements eq : « L(x − i + jq) =
j :« L(j) est

L(x) », pour tous les indices q tels que 1 6 q 6 α, et des ´ev´enements e0

82

Chapitre 3 : Charge du r´eseau

FIG. 3.9 : Illustration du lemme 3.10.

en dehors de l’intervalle [L(x), t] » pour tous les autres indices j ∈ {0, . . . , ω} \
{i, j0, . . . , jα}. Par d´eﬁnition de la distribution, on a, pour tout 1 6 q 6 α :

Pr eq =

1

(‘ + i − jq)Hn

,

et, `a l’aide du fait 3.5, on obtient, pour tout j ∈ {0, . . . , ω} \ {i, j0, . . . , jα} :

j = 1 − Hm−x+i−j − Hi−j+‘−1

.

Pr e0

Hn

Comme les liens sont tir´es de fac¸on ind´ependante, on peut faire le produit de ces
probabilit´es, ce qui conduit au r´esultat. (cid:3)

Proposition 3.11 Soit x l’origine d’un lien longue-distance L de longueur ‘ et
notons x = ~δ(s, x). Soit Racine(r, m) la probabilit´e que le noeud r, avec r =
~δ(s, r), soit la racine d’une fenˆetre d’exploration de Eω lors du routage de s vers
t.

La probabilit´e e(x, ‘, m) que L appartienne au chemin calcul´e par Eω de s `a

t est :

e(x, ‘, m) = 0 si x ∈ {m − ‘ + 1, . . . , n},
e(x, ‘, m) = M eilleur(x, x, ‘, m) si x ∈ {0, . . . , ω},

ωX

h

i

e(x, ‘, m) =

Racine(x − i, m) · M eilleur(i, x, ‘, m)

i=0

si x ∈ {ω + 1, . . . , m − 1},

xL(x)iωj1j2t3.2 : Charge de deux algorithmes d´ecentralis´es

83

o`u l’on a, pour tout 0 6 r 6 m − ω :

Racine(r, m) = Racine(r − ω, m) · Echec(r − ω, m)

r−1X

+

e(j, r − j, m)
(r − j)Hn

si r > ω,

= 0 si r ∈ {1, . . . , ω − 1},
= 1 si r = 0.

j=0

ωX

Preuve. Si x est strictement sup´erieur `a m − ‘, L(x) est au-del`a de t et L n’ap-
partient jamais au chemin de routage ; la probabilit´e est donc nulle.
Si 1 6 x 6 ω, x appartient `a la premi`ere fenˆetre d’exploration de Eω, enra-
cin´ee en s. Par d´eﬁnition de la fonction M eilleur du lemme 3.10, la probabilit´e
que L soit sur le chemin est donc M eilleur(x, x, m).
Supposons `a pr´esent x ∈ {ω + 1, . . . , m − ‘}. On note Ex,‘,m l’´ev´enement
associ´e `a la probabilit´e e(x, ‘, m) et Rr,m l’´ev´enement associ´e `a la probabilit´e
Racine(r, m). L appartient au chemin de routage si et seulement si x appartient `a
une fenˆetre d’exploration du routage et s’il est le meilleur lien longue-distance de
cette fenˆetre. On peut alors d´ecomposer e(x, ‘, m) en probabilit´es conditionnelles
selon la position de la racine de l’exploration `a laquelle x appartient :

e(x, ‘, m) =

Pr (Ex,‘,m |Rx−i,m)) · Racine(x − i, m).

i=0

D’apr`es la d´eﬁnition de la fonction M eilleur du lemme 3.10, on a :

Pr{Ex,‘,m |Rx−i,m} = M eilleur(i, x, ‘, m).

Il reste `a ´evaluer Racine(x− i, m). Le noeud y = x− i est la racine d’une fenˆetre
d’exploration de Eω si :

– soit c’est l’extr´emit´e d’un lien longue-distance du chemin de routage
– soit le noeud y − ω est la racine d’une fenˆetre d’exploration et cette explo-

(´ev´enement R1
ration est en ´echec (´ev´enement R2

x−i,m) ;

x−i,m).
Comme ce sont des ´ev´enements disjoints, on a :

Racine(x − i, m) = PrR1

x−i,m + PrR2

x−i,m.

x−i,m en l’union de x − i ´ev´enements disjoints correspon-
On peut d´ecomposer R1
dant aux x−i positions j possibles de l’origine du lien longue-distance du chemin
de routage dont y est le contact longue-distance, 0 6 j 6 x−i−1. Ils sont chacun
de probabilit´e e(j, x − i − j, m), pour 0 6 j 6 x − i − 1, puisque la longueur

84

Chapitre 3 : Charge du r´eseau

d’un tel lien est x − i − j. Par ailleurs, la probabilit´e que ce lien soit de longueur
x − i − j est 1/((x − i − j)Hn), on obtient :

PrR1

x−i,m =

e(j, x − i − j, m)
(x − i − j)Hn

.

x−i−1X

j=0

D’apr`es la d´eﬁnition de Echec donn´ee par le lemme 3.9, on a :

PrR2

x−i,m = Racine(x − i − ω, m) · Echec(x − i − ω, m),

puisque l’´ev´enement que x − i − ω soit la racine d’une fenˆetre d’exploration est
ind´ependant du tirage des liens longue distance situ´es sur [x − i − ω, t].

Enﬁn, on initialise la r´ecurrence sur Racine grˆace aux ω premi`eres valeurs qui

ne sont pas al´eatoires puisque :

– s

est

toujours

racine de

la
(Racine(0, m) = 1) ;
– aucun noeud de cette fenˆetre n’est susceptible d’ˆetre la racine d’une fenˆetre
suivante durant l’ex´ecution de Eω (Racine(r, m) = 0 pour tout r ∈
{1, . . . , ω}).

fenˆetre d’exploration

la premi`ere

(cid:3)

3.2.2.2 Charge d’un lien longue-distance de longueur ‘

L’expression de la probabilit´e calcul´ee dans la proposition 3.11 nous permet
d’en d´eduire facilement la charge induite par l’algorithme Eω d’un lien d’origine
et de longueur donn´ees.
Proposition 3.12 Pour tout n > 1, soit loadEω (‘) la charge induite par Eω dans
~K1,n d’un lien longue-distance de longueur ‘ > 1 et d’origine x. On a :

loadEω (‘) =

1
n2

e(x, ‘, m).

n−1X

m−‘X

m=‘

x=0

Preuve. On consid`ere le routage simultan´e entre tous les n2 couples (s, t) du
r´eseau. Soit un couple (s, t) et notons x = ~δ(s, x) et m = ~δ(s, t). Alors,
e(x, k, ‘, m) est l’esp´erance de la variable al´eatoire qui vaut 1 si le lien longue
distance de x appartient au chemin de routage de s vers t et 0 sinon. Par lin´earit´e
de l’esp´erance, il sufﬁt de sommer les valeurs e(x, k, ‘, m) sur tous les couples
(x, m) possibles pour obtenir l’esp´erance du nombre de chemins utilisant le
lien consid´er´e. En remarquant que les contributions des couples (s, t) tels que
x > m − ‘ ou m < ‘ sont nulles, on obtient le r´esultat. (cid:3)

3.2 : Charge de deux algorithmes d´ecentralis´es

85

FIG. 3.10 : loadG(‘) et loadEω (‘) pour n = 50 et ω ∈ {7, 9, 12}.

Observation des trac´es. La ﬁgure 3.10 pr´esente les trac´es de la charge d’un lien
longue-distance en fonction de sa longueur pour les algorithmes G et Eω. Nous
avons repr´esent´e des trac´es de loadEω (‘) pour des valeurs assez grandes de ω aﬁn
d’accentuer les diff´erences de charge en comparaison de l’algorithme glouton.
Pour des valeurs inf´erieures de ω, les courbes pour G et Eω sont plus proches,
mais la charge induite par Eω pr´esente le mˆeme comportement que celui d´ecrit
ici.

On observe une rupture de pente de la charge induite par Eω lorsque ‘ = ω. On
peut expliquer cette rupture en observant que si le lien consid´er´e est de longueur
inf´erieure `a ω, il ne peut appartenir `a aucun des chemins de routage dont son
origine est la source ; ce ph´enom`ene disparaˆıt `a partir de la valeur ω. La variation
de la charge induite par Eω, croissante puis d´ecroissante, peut s’expliquer par deux
effets oppos´es de l’accroissement de la longueur ‘ :

– le lien augmente sa probabilit´e d’ˆetre le meilleur d’une fenˆetre d’explora-

tion,

– mais le nombre de chemins susceptibles d’utiliser le lien diminue.

On observe ´egalement que plus la taille de la fenˆetre d’exploration augmente, plus
la charge se d´eplace vers les liens les plus longs, du fait du choix d’un meilleur
lien parmi un ´echantillon plus grand.

loadG(1,!)loadE7(!)loadE9(!)loadE12(!)!load(!)86

Chapitre 3 : Charge du r´eseau

On constate que la charge induite par l’algorithme `a exploration locale Eω
se r´epartit de fac¸on tr`es diff´erente `a celle de G. En effet, pour l’algorithme `a
exploration, la charge se r´epartit davantage sur toutes les longueurs de liens,
alors que l’algorithme glouton charge sensiblement plus les liens les plus courts.
Pr´ecis´ement, on observe que la plupart des longueurs de liens sont charg´es `a 4%
pour l’algorithme `a exploration, tandis que l’algorithme glouton charge les liens
de faible longueur `a plus de 10%. Cette meilleure r´epartition serait un avantage si
les longueurs de liens ´etaient r´eparties uniform´ement ; mais les liens longs sont
plus rares que les liens courts dans ~K1,n. Il y a donc un risque de surcharge des
liens les plus longs, dˆu au choix d’un meilleur lien parmi un ´echantillon.

On conclut de l’observation de ces courbes que l’observation exp´erimentale de
la charge sur un r´eseau r´eel peut donner des informations sur le routage qui y est
pratiqu´e sous l’hypoth`ese d’une certaine distribution des liens. Par exemple, dans
le cadre de la compr´ehension des r´eseaux sociaux, l’observation exp´erimentale de
la diff´erence de fr´equence d’utilisation des connexion entre individus proches et
entre individus ´eloign´es (selon un crit`ere qui peut ˆetre g´eographique ou profes-
sionnel par exemple) peut donner des indications sur le type d’algorithme utilis´e
pour le routage (d’information, ou de lettres par exemple). En particulier, si ces
deux types de connexion sont charg´es de fac¸on ´equivalente, l’hypoth`ese du rou-
tage glouton doit ˆetre ´ecart´ee si l’on suppose que la distribution des longueurs des
connexions est proche de la distribution harmonique. Cette ´etude n’a pas encore
´et´e men´ee `a notre connaissance, elle permettrait de r´epondre `a cette question.

Par ailleurs, dans la perspective de la construction de r´eseaux informatiques
d´ecentralis´es, comme les r´eseaux pair-`a-pair, ces observations posent la question
de la modiﬁcation de la distribution des liens. En effet, l’algorithme `a exploration
locale am´eliore les longueurs des chemins de routage, ce qui est un param`etre
crucial pour ces r´eseaux, mais il risque de surcharger les liens tr`es longs car ils
sont rares. Une question est donc de d´eterminer si l’on peut modiﬁer la distribu-
tion pour augmenter le nombre de liens tr`es longs (de longueur sup´erieure `a n/2)
tout en conservant la propri´et´e de petit monde navigable et le gain d’efﬁcacit´e de
l’algorithme `a exploration.

3.3 Autres param`etres de comparaison

Aﬁn de pr´eciser notre comparaison des deux algorithmes de routage G et Eω,
nous ´etudions, dans cette section, deux autres param`etres qui sont le taux d’utili-
sation de l’anneau sous-jacent et la longueur des chemins entre des couples (s, t)
proches (`a distance tr`es inf´erieure `a n).

Les liens longue-distance jouent un rˆole essentiel dans la r´eduction exponen-

3.3 : Autres param`etres de comparaison

87

tielle du diam`etre de l’anneau, c’est pourquoi il est int´eressant de quantiﬁer l’uti-
lisation de ces raccourcis dans les chemins de routage. Par ailleurs, cela permet
d’´etudier une ´eventuelle surcharge du r´eseau provoqu´ee par la sur-utilisation de
l’anneau sous-jacent si ces raccourcis sont tr`es peu utilis´es.

Il est connu que la longueur des chemins calcul´es par Eω est asymptotique-
ment plus courte que celle des chemins calcul´es par G lorsque la dimension est
strictement sup´erieure `a 1, pour une source et une cible `a distance n (puisque cet
algorithme est une version simpliﬁ´ee de [FGP04]). Nous comparons ici les per-
formances en dimension 1, sur toutes les distances possibles source-cible pour un
taille d’anneau ﬁx´ee, et pour la distance source-cible maximale en faisant varier
la taille de l’anneau.

3.3.1 Taux moyen de liens locaux utilis´es dans un routage

Nous avons vu dans la proposition 3.6 qu’il existe une distance critique source-
cible en dec¸`a de laquelle les liens longue-distance ne sont pas utilis´es par l’algo-
rithme glouton. Nous ´etudions ici pr´ecis´ement le taux de liens locaux utilis´es dans
les chemins de routage de G et Eω en fonction de la distance s´eparant la source
de la cible. Pour cela, nous calculons le ratio de l’esp´erance du nombre de liens
locaux utilis´es sur un chemin, sur l’esp´erance du nombre de liens du chemin.

D´eﬁnition 3.4
Soient k, n > 1 et A un algorithme de routage sur ~Kk,n. Pour tout m ∈ {1, . . . , n},
le taux de liens locaux de A pour m, not´e RA
local(k, m), est le ratio de l’esp´erance
du nombre de liens locaux sur le chemin de routage calcul´e par A entre une source
et une cible `a distance m, sur l’esp´erance du nombre de liens de ce chemin.

Pour toute cette section, on se donne n > 1 et deux noeuds s, t ∈ ~Kk,n qui sont la
source et la cible du routage, et l’on note m = ~δ(s, t).

Pour G,

l’esp´erance du nombre de liens d’un chemin de routage est
Θ(log2 n) [Kle00] ; c’est ´egalement la somme sur tous les noeuds de l’inter-
valle [s, t] de leur probabilit´e d’ˆetre visit´e. On rappelle qu’´etant donn´e un noeud
x ∈ [s, t], g(~δ(s, x), m) d´esigne la probabilit´e que x soit visit´e par G lors du
routage de s `a t.

88

Chapitre 3 : Charge du r´eseau

Proposition 3.13

RG
local(k, m) =

m−1X

x=0

g(x, m)

m−1X

(cid:18)

1 − Hm−x
Hn

(cid:19)k

m−1X

x=0

=

(cid:18)

g(x, m)

1 − Hm−x
Hn

Θ(log2 n)

(cid:19)k

.

g(y, m)

y=0

l’esp´erance du nombre de noeuds, soitPm−1

Preuve. Pour G, l’esp´erance du nombre de liens sur le chemin de routage est aussi
y=0 g(y, m), par lin´earit´e de l’esp´erance.
Soit x un noeud de [s, t], on note x = ~δ(s, x). La probabilit´e que son lien local
(sortant) appartienne au chemin est la probabilit´e que le noeud x soit visit´e par G
et que ses k contacts longue-distance n’appartiennent pas `a [x + 1, t]. En utilisant
le fait 3.5 et en remarquant l’ind´ependance des ´ev´enements, cette probabilit´e vaut,
pour tout 0 6 x 6 m − 1 :

g(x, m)(1 − Hm−x/Hn)k.

On conclut en remarquant que l’esp´erance du nombre de liens locaux utilis´es
par l’algorithme est la somme de ces probabilit´es pour x variant de 0 `a m − 1, par
lin´earit´e de l’esp´erance. (cid:3)

Pour d´eterminer le taux de liens locaux de l’algorithme Eω, nous devons tout
d’abord d´eterminer la probabilit´e qu’un lien local, d’origine donn´ee entre s et t,
appartienne au chemin.

On rappelle que, pour

tout noeud x, o`u l’on note x = ~δ(s, x),
Racine(x, m) est la probabilit´e que x soit la racine d’une fenˆetre d’exploration
et Echec(x, m) est la probabilit´e qu’une fenˆetre enracin´ee en x soit en ´echec.
Enﬁn, M eilleur(x, ‘, m) est la probabilit´e que le lien longue-distance de x ap-
partienne au chemin de routage, conditionn´ee par le fait que sa longueur soit ‘.

Proposition 3.14 Soient k = 1 et x ∈ [s, t], et notons x = ~δ(s, x). La probabilit´e
elocal(x, m) que le lien local sortant de x appartienne au chemin calcul´e par Eω
de s `a t est :

elocal(x, m) = Echec(0, m) +

M eilleur(j, j, ‘, m) si x 6 ω,

1

‘Hn

j=x+1

‘=ω−j+1

elocal(x, m) =

Racine(x − i, m)

Echec(x − i, m)

m−jX
(cid:16)

ωX

m−jX

ωX

x+ω−iX

i=0

+

j=x+1

‘=ω−i−j+x+1

M eilleur(i + j − x, j, ‘, m)

sinon.

1

‘Hn

(cid:17)

3.3 : Autres param`etres de comparaison

89

Preuve. Le lien local de x appartient au chemin de routage si et seulement s’il
appartient `a une fenˆetre d’exploration qui est en ´echec ou dont le meilleur lien est
au-del`a de x.
Supposons x 6 ω. Le noeud x appartient alors `a la premi`ere fenˆetre d’explora-
tion enracin´ee en s. La probabilit´e que cette fenˆetre soit en ´echec est Echec(0, m).
Si elle n’est pas en ´echec, on d´ecompose l’´ev´enement en ´ev´enements disjoints
correspondant aux positions possibles du meilleur lien tel que le lien local de
x soit sur le chemin. Les positions possibles du meilleur lien sont les noeuds de
[s+x+1, s+ω]. Pour chacun de ces noeuds s+j, o`u j ∈ {1+x, . . . , ω}, la proba-
bilit´e qu’il soit meilleur est la somme sur toutes les longueurs ‘ possibles qu’il soit
de longueur ‘ (probabilit´e 1/(‘Hn)) et meilleur (probabilit´e M eilleur(j, j, ‘, m)).
Pour chaque s + j, les longueurs ‘ possibles du lien longue-distance sont celles
qui permettent que L(s + j) appartienne `a l’intervalle [s + ω + 1, t], soit en-
core ‘ ∈ {ω − j + 1, . . . , m − j}. En sommant ces probabilit´es (ce sont des
´ev´enements disjoints), on obtient l’expression de elocal(x, m) pour x 6 ω.
Supposons maintenant x > ω. On d´ecompose l’´ev´enement en le conditionnant
selon les ω positions possibles x − i de la racine de la fenˆetre d’exploration `a
laquelle x appartient, pour i ∈ {0, . . . , ω}. Chaque position x−i a une probabilit´e
Racine(x − i, m) de d´ebuter une fenˆetre d’exploration. L’´ev´enement conditionn´e
par l’existence d’une racine d’exploration en x − i se d´ecompose alors de fac¸on
similaire au cas pr´ec´edent, par translation de vecteur −i. (cid:3)

L’expression de cette probabilit´e nous permet de calculer le taux de liens lo-

caux de Eω de fac¸on similaire `a l’algorithme glouton.

Proposition 3.15 Pour k = 1,

REω

local(m) =

m−1X

x=0

 

Pm−1

x=0 elocal(x, m)

m−xX

!.

elocal(x, m) +

e(x, ‘, m)

‘Hn

‘=1

Preuve. Pour tout noeud x ∈ [s, t], notons Xx la variable al´eatoire qui vaut 1 si
le chemin utilise le lien local sortant de x et 0 sinon. Notons x = ~δ(s, x). On a
Pr(Xx) = elocal(x, m). Par lin´earit´e de l’esp´erance on obtient que l’esp´erance du

nombre de liens locaux utilis´es estPm−1

x=0 elocal(x, m).

Le nombre de liens du chemin de routage de l’algorithme Eω est aussi le
nombre de noeuds qu’il visite. Pour l’obtenir, on calcule donc la probabilit´e que
le noeud x soit visit´e, pour tout x ∈ [s, t]. Notons x = ~δ(s, x). Le noeud x est
visit´e :

– si son lien local appartient au chemin (probabilit´e elocal(x, m)),

90

Chapitre 3 : Charge du r´eseau

FIG. 3.11 : RG

local(1, m) et REω

local(m) pour k = 1, ω ∈ {4, 6, 7} et n = 50.

– ou si son lien longue-distance est de longueur ‘ 6 x − m (probabilit´e
1/(‘Hn) pour chaque lien) et appartient au chemin (probabilit´e e(x, ‘, m)
pour chaque lien).
Dans le deuxi`eme cas, seules les longueurs de lien ‘ inf´erieures ou ´egales `a m− x
contribuent car les autres ont une probabilit´e nulle d’appartenir au chemin. On
peut faire la somme des probabilit´es de ces deux cas car ce sont des ´ev´enements
disjoints. Par lin´earit´e de l’esp´erance, on somme ces probabilit´es sur tous les
noeuds x pour obtenir l’esp´erance du nombre de liens du chemin de routage. (cid:3)

Observation des trac´es. La ﬁgure 3.11 (et la ﬁgure 3.12 pour le trac´e en ´echelle
semi-logarithmique) repr´esente les valeurs des taux de liens locaux pour un an-
neau de 50 noeuds et diff´erentes profondeurs d’exploration ω ∈ {4, 6, 7} en fonc-
tion de m.

Lorsque m est inf´erieur ou ´egal `a ω, l’algorithme Eω n’utilise aucun lien
longue-distance puisque la cible est contenue dans sa premi`ere fenˆetre d’explo-
ration ; c’est pourquoi on observe un taux constant ´egal `a 1 pour ces valeurs de
m. On observe que ce taux est par la suite d’autant plus ´elev´e que ω est grand.
En effet, alors que la position du meilleur lien varie peu lorsqu’on augmente ω de
1, la longueur de la chaˆıne de liens locaux `a suivre pour l’atteindre augmente en

mGE4E6E7Rlocal3.3 : Autres param`etres de comparaison

91

FIG. 3.12 : RG
´echelle semi-logarithmique.

local(1, m) et REω

local(m) pour k = 1, ω ∈ {4, 6, 7} et n = 50 en

moyenne de 1/2.

En comparant les taux des deux algorithmes, on observe une utilisation bien
plus importante de l’anneau sous-jacent par l’algorithme Eω sur les trac´es de la ﬁ-
gure 3.11. Sur le trac´e en ´echelle semi-logarithmique (ﬁgure 3.12), on observe
que RG
local(1, m) d´ecroˆıt de fac¸on quasi lin´eaire, sugg´erant une d´ependance en
log(1/m).

En combinant l’observation de la charge et celle du taux de liens locaux, on
peut ´emettre l’hypoth`ese que l’algorithme Eω utilise des liens longue-distance
tr`es longs qui lui permettent de raccourcir le chemin de routage, mais qu’ils sont
atteints en utilisant un grand nombre de liens locaux. Par ailleurs, l’algorithme
glouton utilise des raccourcis moins longs, mais les atteint par des liens longue-
distance de faible longueur plutˆot que par des liens locaux.

3.3.2 Comparaison des longueurs de chemin

Fraigniaud et al. [FGP04] montrent que l’exploration des liens locaux sur une
profondeur O(log1/d n) permet de r´eduire l’esp´erance de la longueur du chemin de
routage, entre une source et une cible `a distance n, de Θ(log2 n) `a O(log1+1/d n),

GE4E6E7mRlocal92

Chapitre 3 : Charge du r´eseau

dans un r´eseau de Kleinberg de dimension d > 1. Dans cette section, nous com-
parons les esp´erances des longueurs des chemins des algorithmes G et Eω sur
l’anneau (d = 1) en ´etudiant en particulier le cas de couples source-cible rap-
proch´es.
Soient LongueurEω (m) et LongueurG(m) les esp´erances respectives de la lon-
gueur de chemin calcul´e par Eω et G.
Proposition 3.16

m−1X

LongueurG(m) =

g(x, m) = Θ(log m log n)

et

x=0

LongueurEω (m) = m si m 6 ω,

m−1X

(cid:16)

x=0

=

elocal(x, m) +

m−xX

‘=1

(cid:17)

e(x, ‘, m)

‘Hn

sinon.

Preuve. L’esp´erance de la longueur du chemin de routage est ´egale `a l’esp´erance
de son nombre de liens emprunt´es. Cette esp´erance ayant ´et´e calcul´ee pour obtenir
le taux de liens locaux, on se reportera `a la preuve de la proposition 3.13 pour
l’algorithme G et `a celle de la proposition 3.15 pour l’algorithme Eω. (cid:3)
Observation des trac´es. La ﬁgure 3.13 repr´esente les esp´erances des longueurs
de chemin des deux algorithmes sur un anneau de taille ﬁx´ee (n = 100) pour
toutes les distances possibles s´eparant la source de la cible. De fac¸on naturelle,
on observe que ce sont les chemins entre deux noeuds ´eloign´es (m proche de
n) qui b´en´eﬁcient le plus de l’exploration locale de Eω. Pour des distances m
plus faibles, le gain en longueur obtenu grˆace `a la s´election de meilleurs liens
longue-distance ne compense pas le grand nombre de liens locaux suivis sur les
fenˆetres d’exploration (dont la largeur est ici assez grande). On remarquera de
fac¸on int´eressante que LongueurE5(m) n’est pas une fonction monotone de m
pour n ﬁx´e, et qu’il existe une distance source-cible critique, d´ependante de ω,
pour laquelle le chemin calcul´e est plus long qu’entre les noeuds les plus ´eloign´es
de l’anneau (m = n − 1).
La ﬁgure 3.14 compare les longueurs de chemin des deux algorithmes obte-
nues pour les distances source-cible maximales (m = n − 1) en fonction de la
taille de l’anneau n variant de 1 `a 200. On observe que, d`es que l’anneau d´epasse
55 noeuds, la longueur de chemin calcul´ee par Eω est toujours plus courte que
celle calcul´ee par G ; la croissance de la courbe LongueurE3(n − 1) est en outre
moins forte que celle de LongueurG(n − 1).

3.4 : Conclusion et perspectives

93

FIG. 3.13 : LongueurE5(m) et LongueurG(m) pour k = 1 et 1 6 m 6 n = 100.

Ainsi, l’algorithme `a exploration locale Eω est efﬁcace en terme de longueur
de chemin pour les couples source-cible tr`es ´eloign´es, tandis que les couples
source-cible s´epar´es d’une distance de l’ordre de ω sont peu rapproch´es par cette
m´ethode. Il est int´eressant de remarquer que les longueurs de chemin pour les
couples les plus ´eloign´es (m = n− 1) sont plus courtes que celles de l’algorithme
glouton `a partir d’un anneau de seulement 55 noeuds. Alors qu’on ne disposait que
d’une comparaison asymptotique des esp´erances des longueurs de chemin aupa-
ravant, il apparaˆıt que le gain d’efﬁcacit´e de Eω sur G est obtenu mˆeme `a partir
d’une taille de r´eseau tr`es petite.

3.4 Conclusion et perspectives

Dans ce chapitre, nous avons compar´e le fonctionnement de deux algorithmes
d´ecentralis´es sur le r´eseau de Kleinberg unidimensionnel et unidirectionnel qui
sont repr´esentatifs des deux types d’algorithmes d´ecentralis´es ´etudi´es jusqu’ici sur
ce mod`ele de petit monde. Il s’agit, `a notre connaissance, de la premi`ere analyse
de la charge du r´eseau de Kleinberg.

L’analyse de la charge induite et de la longueur des chemins montre que l’uti-
lisation d’une exploration locale des liens longue-distance construit des chemins

m94

Chapitre 3 : Charge du r´eseau

FIG. 3.14 : LongueurE3(n − 1) et LongueurG(n − 1) pour k = 1 et
n ∈ {1, . . . , 200}.

contenant une part importante de liens locaux ; elle montre aussi que ces chemins
contiennent des liens longue-distance assez longs par rapport `a la taille du r´eseau.
Entre une source et une cible tr`es ´eloign´ees, ces chemins sont plus courts que
ceux calcul´es par l’algorithme glouton mˆeme pour un r´eseau de tr`es petite taille
(environ 60 noeuds) ; mais ils surchargent les liens les plus longs, qui sont les plus
rares, et l’anneau sous-jacent. Toutefois, nous n’avons pas analys´e d’algorithme
o`u l’exploration se fait `a la fois sur les liens locaux et longue-distance, comme
celui que nous avons pr´esent´e dans le chapitre pr´ec´edent. Ce type d’exploration
att´enue a priori la charge de l’anneau sous-jacent. De mˆeme, il serait int´eressant
de reprendre l’analyse pour une taille de fenˆetre d’exploration non constante qui
s’adapte `a la distance courante `a la cible. En effet, plus la distance restant `a par-
courir est r´eduite, moins la marge d’optimisation est grande ; il est donc naturel
de penser qu’une taille de fenˆetre d’exploration d´ecroissante avec la distance `a la
cible produirait de meilleurs r´esultats. C’est ´egalement le cas de l’algorithme que
nous avons pr´esent´e dans le chapitre pr´ec´edent.

Dans la perspective de construire, `a partir de ce mod`ele, des r´eseaux informa-
tiques d´ecentralis´es o`u le routage est efﬁcace, ces observations posent la question
du choix de la distribution des liens longue-distance. Si l’on veut b´en´eﬁcier du
gain en longueur de chemin de routage apport´e par un algorithme `a exploration

 2 4 6 8 10 12 14 16 18 20 40 60 80 100 120 140 160 180 200longueurnE_5G3.4 : Conclusion et perspectives

95

locale, cela pose la question de l’existence d’une distribution qui cr´ee sufﬁsam-
ment de liens tr`es longs pour ´eviter leur surcharge, tout en conservant la propri´et´e
de petit monde navigable.

Enﬁn, les observations de la charge de routage d’un mod`ele de petit monde
peuvent apporter des indications pour la compr´ehension de la dynamique des
r´eseaux r´eels. Gladwell a par exemple ´emis l’hypoth`ese que l’effet petit monde
observ´e dans les r´eseaux sociaux serait dˆu `a l’existence d’un petit nombre d’indi-
vidus particuli`erement bien connect´es au reste du r´eseau et par qui tous les che-
mins passeraient [Gla98]. Si cette hypoth`ese est vraie, l’observation exp´erimentale
du nombre de messages qui transitent entre les individus d’un r´eseau doit
faire apparaˆıtre des connexions beaucoup plus charg´ees que la majorit´e des
autres connexions. Comme nous l’avons remarqu´e pr´ec´edemment, l’observation
exp´erimentale de la charge d’un r´eseau r´eel apporte ´egalement des indications
sur le type d’algorithme de routage utilis´e sur ce r´eseau, sous l’hypoth`ese d’une
distribution des liens proche de celle du r´eseau de Kleinberg. Notre ´etude de la
charge sur ce r´eseau nous permet d’afﬁrmer que si l’on observe une charge si-
milaire des liens courts et des liens les plus longs, l’hypoth`ese de l’utilisation de
l’algorithme glouton doit ˆetre ´ecart´ee ; en effet, celui-ci charge davantage les liens
courts, si l’on suppose que la distribution des liens du r´eseau est proche du mod`ele
de Kleinberg.

Deuxi`eme partie

Aspect structurel de
l’effet petit monde

Chapitre 4

Probl´ematique de la
petit-mondisation

Introduction

Depuis qu’il est possible de collecter des donn´ees statistiques sur les grands
r´eseaux r´eels, le graphe al´eatoire uniforme d’Erd¨os-R´enyi [ER59] s’est r´ev´el´e ˆetre
un mod`ele assez ´eloign´e de ces r´eseaux, puisque des propri´et´es statistiques qui
semblent pertinentes pour ces r´eseaux (la distribution des degr´es, le coefﬁcient de
clustering et la navigabilit´e) y sont tr`es diff´erentes. Ces observations sugg`erent la
pr´esence d’une structure sous-jacente dans ces r´eseaux, qui n’est pas simplement
al´eatoire uniforme et qui donne naissance `a des propri´et´es particuli`eres. Dans
cette partie, nous ´etudions l’aspect structurel de la propri´et´e de petit monde
navigable, en cherchant `a exhiber les caract´eristiques structurelles minimales
des graphes pr´esentant cette propri´et´e. Dans ce chapitre, nous ´etudions les
limites du mod`ele de Kleinberg qui nous ont amen´e `a la probl´ematique de la
petit-mondisation. Ces limites seront lev´ees dans le chapitre suivant, o`u nous
introduirons deux nouveaux mod`eles de graphes petits mondes qui le g´en´eralisent.

Il est intuitif de supposer qu’un r´eseau social ne se construit pas de fac¸on
al´eatoire uniforme. En effet, les relations sociales se construisent plus facile-
ment entre individus d’une communaut´e sociale similaire (mˆeme corps de m´etier,
mˆeme lieu d’habitation) qu’entre individus choisis au hasard. Ces constructions
sp´eciﬁques peuvent avoir une inﬂuence sur la facilit´e de naviguer `a travers le
r´eseau. On peut prendre l’exemple de la simulation de routage dans des r´eseaux
sociaux r´ecemment effectu´ee par Adamic et Adar [AA04], sur des r´eseaux recons-
truits sur la base de carnets d’adresses ´electroniques et de ﬁchiers m´emorisant
les ´echanges de messages. Les auteurs ont appliqu´e la strat´egie gloutonne sur ces

100

Chapitre 4 : Probl´ematique de la petit-mondisation

r´eseaux et ont observ´e que la propri´et´e de petit monde navigable ´etait v´eriﬁ´ee. Les
chemins les plus courts ont ´et´e observ´es sur le r´eseau reconstruit `a partir des e-
mails de l’entreprise HP Labs qui pr´esente une structure hi´erarchique, h´erit´ee de la
structure hi´erarchique professionnelle, mettant en valeur l’inﬂuence d’une struc-
ture sous-jacente dans les r´eseaux sociaux qui peut favoriser l’effet petit monde.
Barabasi et Albert ont montr´e que la construction dynamique d’un r´eseau se-
lon une r`egle d’attachement pr´ef´erentiel aux noeuds pr´esents les mieux connect´es
produisait un r´eseau dont la distribution des degr´es suivait une loi de puis-
sance [BA99]. De fac¸on analogue, la propri´et´e de petit monde navigable peut
provenir d’un processus d’ajout de raccourcis, bas´e sur une structure sous-
jacente pr´eexistante, comme l’ensemble des communaut´es professionnelles dans
un r´eseau social par exemple.

Le mod`ele de petit monde de Kleinberg [Kle00] a montr´e que l’augmentation
d’un tore r´egulier par des arcs al´eatoires, dont la distribution est ´etroitement li´ee
`a la m´etrique de ce tore, produisait un graphe petit monde navigable. Ce fait pose
une question essentielle pour la compr´ehension du ph´enom`ene petit monde : n’y
a-t-il que des m´etriques sp´eciﬁques (comme le tore r´egulier muni de la norme ‘1)
qui peuvent ˆetre transform´ees en petit monde par l’ajout de liens longue-distance ?
Dans les chapitres suivants, nous montrerons qu’il existe une grande classe de
graphes qui peuvent ˆetre transform´es en petits mondes par l’ajout de liens longue-
distance. On parle alors de processus de petit-mondisation.

4.1 Vers une g´en´eralisation du mod`ele de Kleinberg

4.1.1 Les g´en´eralisations pour les r´eseaux sociaux

Le r´eseau de Kleinberg est le premier mod`ele `a reproduire la propri´et´e de pe-
tit monde navigable et il pr´esente l’avantage d’ˆetre tr`es simple, ce qui en fait un
bon outil pour l’analyse de cette propri´et´e. Toutefois, sa structure sous-jacente
de tore r´egulier, qui repr´esente la connaissance globale partag´ee par tous les
noeuds, paraˆıt peu vraisemblable pour un r´eseau r´eel. Si l’on fait l’hypoth`ese
que la connaissance globale d’un r´eseau social est l’ensemble des distances
g´eographiques, on peut par exemple penser que celles-ci ne sont pas r´eparties
selon une grille r´eguli`ere. Des travaux r´ecents se sont attach´es `a produire de
nouveaux mod`eles de petit monde navigable, ´egalement construits `a partir d’une
structure sous-jacente que l’on augmente par des arcs al´eatoires, pour chercher un
mod`ele plus r´ealiste.

Le premier d’entre eux est la g´en´eralisation propos´ee par Kleinberg en
2002 [Kle02]. La structure sous-jacente est une structure de groupes, qui sont des
ensembles de sommets qui respectent des contraintes de croissance et de recouvre-

4.1 : Vers une g´en´eralisation du mod`ele de Kleinberg

101

ment. Chaque noeud u est l’origine de O(log n) arcs al´eatoires, chacun pointant
vers un autre noeud v avec une probabilit´e inversement proportionnelle `a la taille
du plus petit groupe qui contient u et v. Kleinberg montre que l’algorithme de
routage glouton (d´eﬁni page 21) calcule des chemins de longueur polylogarith-
mique en le nombre de sommets en esp´erance dans ce mod`ele. Comme ce mod`ele
ne contient aucune arˆete dans sa structure sous-jacente, il n´ecessite un degr´e sor-
tant au moins logarithmique en le nombre de sommets pour garantir sa connexit´e.
Le concept de groupe auquel fait r´ef´erence ce mod`ele provient de la litt´erature des
probl`emes de propagation de rumeurs dans les r´eseaux sociaux, pour lesquels il
est particuli`erement adapt´e. Ce mod`ele a ´et´e conc¸u dans l’objectif d’un mod`ele
plus r´ealiste des r´eseaux sociaux ; ce n’est en revanche pas un bon outil dans la
perspective de construction de r´eseaux informatiques du fait de son degr´e sortant
non constant. Ce degr´e sortant en fait ´egalement un mod`ele peu r´ealiste pour les
r´eseaux r´eels dont on observe une distribution des degr´es suivant une loi de puis-
sance, puisque leur degr´e moyen est constant.

Au mˆeme moment, Watts et al. [WDN02] ont propos´e un autre mod`ele de petit
monde bas´e sur une structure arborescente, qui est en fait incluse dans la notion de
groupe du mod`ele de [Kle02]. Il s’agit ´egalement d’un mod`ele d´edi´e aux r´eseaux
sociaux, l’arborescence mod´elisant la hi´erarchie pr´esente dans les connaissances
sociales. Par exemple, la communaut´e des inﬁrmi`eres et celle des m´edecins sont
incluses dans la communaut´e des personnels de sant´e : dans l’arborescence, ce
sont deux ﬁls du noeud qui repr´esente la communaut´e des personnels de sant´e.
Dans leur mod`ele, ils ajoutent z liens longue-distance par noeuds, o`u z est la
taille maximale d’une communaut´e-feuille de l’arborescence et ils choisissent la
longueur de chaque lien selon une distribution exponentielle. Cette longueur ‘
d´etermin´ee, ils choisissent uniform´ement un noeud parmi une communaut´e-feuille
dont ‘ est la distance hi´erarchique `a l’origine du lien. Ils montrent alors, par des
simulations exp´erimentales, que l’algorithme de routage glouton, avec la connais-
sance de la hi´erarchie, trouve des chemins de longueur n´egligeable devant la taille
du graphe.

4.1.2 Caract´eristiques et limites structurelles du mod`ele

Nous avons vu que le tore d-dimensionnel augment´e d’un nombre constant de
liens longue-distance par noeuds, distribu´es selon la distribution d-harmonique,
est un petit monde navigable. Kleinberg [Kle00] puis Barri`ere et al. [BFKK01]
ont montr´e que toute distribution s-harmonique des liens longue-distance telle
que s > 0 est diff´erent de la dimension du tore sous-jacent ´echoue `a produire
un graphe petit monde navigable. Ce r´esultat renforce l’impression que la naviga-
bilit´e du mod`ele de Kleinberg est tr`es sp´eciﬁque `a la topologie de tore r´egulier.
Lorsque s appartient `a ]d, 2d[, Martel et Nguyen [MN04, MN05] ont d´emontr´e que

102

Chapitre 4 : Probl´ematique de la petit-mondisation

le diam`etre du r´eseau ´etait pourtant toujours polylogarithmique, toutefois aucun
algorithme d´ecentralis´e ne peut trouver ces chemins courts.

Pour comprendre la sp´eciﬁcit´e de la distribution de liens d-harmonique sur
le tore r´egulier d-dimensionnel, il faut remarquer que l’ensemble des noeuds `a
distance ´egale `a r > 1 d’un noeud u donn´e (la sph`ere Su(r)) contient Θ(rd−1)
noeuds dans ce tore. Ainsi, si l’on ajoute un lien al´eatoire sortant au noeud u,
dont la destination est le noeud v avec probabilit´e 1/(|u − v|dZn,d), pour tout
r > 1, la probabilit´e que la destination soit `a distance r de u est :

X

1

= Θ

v∈Su(r)

rdZn,d

(cid:18) 1

rZn,d

(cid:19)

.

Nous avons vu dans les pr´eliminaires que le facteur de normalisation Zn,d est
Θ(log n) (voir p. 22). On obtient alors que la probabilit´e que la destination de u
soit `a distance comprise entre r et 2r de u est ind´ependante de r :

(cid:18) H2r − Hr

(cid:19)

log n

Θ

=

Θ(1)
log n

.

On obtient donc un graphe o`u, quelle que soit la dimension du tore sous-jacent
et pour tout r > 1, chaque contact longue-distance a une probabilit´e identique
d’appartenir `a chaque couronne de noeuds compris `a distance entre 2i· r et 2i+1 · r
de son origine, pour 0 6 i 6 log n − 1. Les liens sont donc bien r´epartis pour
effectuer une recherche efﬁcace de la cible par dichotomie. Au contraire, lorsque
l’exposant s est strictement sup´erieur `a d, les liens ont tendance `a se condenser
autour de leur origine et le graphe ne contient pas sufﬁsamment de liens longs.
Lorsque l’exposant s est strictement inf´erieur `a d, les liens sont trop ´eloign´es de
leur origine, ce qui ralentit les derni`eres ´etapes d’un routage et ne permet pas non
plus d’obtenir des routes polylogarithmiques.

La distribution des liens ´etant identique pour tous les noeuds, le raisonnement
pr´ec´edent repose sur l’homog´en´eit´e des tailles des sph`eres dans le tore r´egulier
n× . . .× n. Les sph`eres ont en effet des tailles qui ne d´ependent que de leur rayon
et non de leur centre, cela permet `a la distribution harmonique de bien r´epartir les
liens longue-distance de tous les noeuds. Cette homog´en´eit´e n’est plus pr´esente
si les cˆot´es du tore sont de longueurs tr`es diff´erentes. La ﬁgure 4.1 repr´esente par
exemple le cas du tore de dimension 2 ´etir´e le long d’un cˆot´e.

De fac¸on int´eressante, la propri´et´e suivante montre que cette grille allong´ee
ne peut pas ˆetre augment´ee en un petit monde navigable par aucune distribution
harmonique de liens longue-distance lorsque qu’un des cˆot´es est une puissance
constante de l’autre.
Soient s > 0 et G le tore nα×n, o`u α > 1, augment´e d’un arc al´eatoire sortant
par noeud u tel que la probabilit´e que sa destination soit v est proportionnelle `a
1/|u − v|s.

4.1 : Vers une g´en´eralisation du mod`ele de Kleinberg

103

FIG. 4.1 : Grille allong´ee (m (cid:29) n).

Proposition 4.1 Quel que soit s > 0, l’esp´erance de la longueur du chemin
de routage entre deux noeuds choisis al´eatoirement uniform´ement dans G est
sup´erieure `a un polynˆome en n, pour tout algorithme de routage d´ecentralis´e.
Preuve. La preuve de cette borne inf´erieure repose sur les mˆemes arguments que
la preuve des bornes inf´erieures de [Kle00] dans le cas o`u les cˆot´es du tores sont
de mˆeme longueur pour les exposants diff´erents de 2. Cependant, pour la grille
allong´ee, le cas s = 2 fait ´egalement partie des exposants qui concentrent les liens
autour des noeuds. Nous distinguons donc deux cas : s < 2 et s > 2.
• Supposons s < 2. Nous montrons que le facteur de normalisation de la
distribution des liens d’un sommet donn´e est sup´erieur `a un polynˆome. Pour tout
noeud u ∈ G, le facteur de normalisation Zu est :

X

v6=u

n/2X

k=1

Zu =

1

|u − v|s

>

> c0 · n2−s,

k
ks

Soient s et t la source et

o`u c0 est une constante strictement positive ind´ependante de n.
la cible du routage respectivement. Soit
γ = (2 − s)/3 < 1, nous montrons que tout algorithme d´ecentralis´e n’utilise que
des liens locaux, avec probabilit´e constante, pour atteindre la cible en partant
d’une distance sup´erieure `a nγ de la cible.
On note B(t, nγ) la boule de centre t et de rayon nγ. La probabilit´e qu’un
noeud u `a l’ext´erieur de B(t, nγ) ait un contact longue-distance dans B(t, nγ) est
inf´erieure `a :

|B(t, nγ)|
c0 · n2−s

6 c1

n2γ
n2−s ,

o`u c1 est une constante strictement positive ind´ependante de n. Par la borne de
l’union, on obtient que la probabilit´e qu’un noeud sur le chemin emprunt´e par
l’algorithme glouton `a partir d’une distance, en partant d’une distance sup´erieure
`a nγ, ait un contact longue-distance dans Bt(nγ), est inf´erieure `a :

c1

n3γ
n2−s

6 c1.

nm104

Chapitre 4 : Probl´ematique de la petit-mondisation

La probabilit´e que la distance |s − t| soit strictement sup´erieure `a nγ, lorsqu’on
choisit s et t al´eatoirement uniform´ement, est sup´erieure `a 1− n2γ/nα+1 > c2, o`u
c2 est une constante strictement positive ind´ependante de n.
La probabilit´e que la distance |s − t| soit sup´erieure `a nγ et que l’algorithme
ne visite pas de contact longue-distance dans B(t, nγ) durant nγ pas, est donc
sup´erieure `a c1 · c2 et l’esp´erance du nombre de pas de l’algorithme conditionn´ee
par cet ´ev´enement est sup´erieure `a nγ. L’esp´erance totale est donc minor´ee par
Ω(nγ).

• Supposons maintenant que s > 2. Nous allons montrer que le graphe ne
poss`ede pas sufﬁsamment de liens longue-distance sufﬁsamment longs, i.e. de
longueur polynomiale. On remarquera que le nombre de points `a distance r d’un
noeud u est inf´erieur `a C0 · n d`es que r > n, pour une constante C0 > 0
ind´ependante de n. Comme α > 1, il existe une constante q > 1 telle que
nα/q > n. Pour tout noeud u, on a donc

bu(nα/q) 6 n2 +

C0n = n2 + C0n(nα/q − n).

nα/qX

r=n

Soient s et t la source et la cible du routage respectivement, choisies al´eatoirement
et uniform´ement. La probabilit´e que la distance |s − t| soit sup´erieure `a nα/q est
donc sup´erieure `a :

1 − n2 + C0n(nα/q − n)

> C1,

nα+1

o`u C1 est une constante strictement positive et ind´ependante de n. On consid`ere
deux cas : s > α + 1 et 2 6 s 6 α + 1.

–Supposons s > α + 1. ´Etant donn´e un noeud u, la probabilit´e que son contact
longue-distance soit de longueur sup´erieure ou ´egale `a n est inf´erieure ou ´egale `a :

∞X

r=n

C0 · n
rs

6 C2
ns−2 ,

o`u C2 > 0 est une constante ind´ependante de n. La probabilit´e de visiter un noeud
dont le lien longue-distance est de longueur sup´erieure ou ´egale `a n durant moins
de nα−1/C2 pas est donc inf´erieure `a 1/ns−2−α+1 6 C3 pour une constante C3 > 0
ind´ependante de n, puisque s > α + 1. Ainsi, avec probabilit´e sup´erieure `a une
constante, l’algorithme se rapproche de t d’une distance inf´erieure `a nα−1/C2·n =
nα/C2 durant nα−1/C2 pas. Comme |s− t| > 2nα/C2 avec probabilit´e constante,
l’esp´erance totale du nombre de pas est donc minor´ee par Ω(nα−1).
–Supposons 2 6 s 6 α + 1. Posons γ = (α + 1)/s. La probabilit´e que le
contact longue-distance d’un noeud donn´e soit de longueur sup´erieure ou ´egale `a

4.1 : Vers une g´en´eralisation du mod`ele de Kleinberg

105

nγ est inf´erieure ou ´egale `a :

∞X

r=nγ

C0 · n
rs

6

C2

nγ(s−1)−1 .

Posons β = γ(s − 1) − 1. La probabilit´e de visiter un noeud dont le lien longue-
distance est de longueur sup´erieure ou ´egale `a nγ durant moins de nβ/2C2 pas est
donc inf´erieure `a 1/(2C2). Ainsi, avec probabilit´e sup´erieure `a une constante, l’al-
gorithme se rapproche de t d’une distance inf´erieure `a nγ · nβ/2C2 = nα/(2C2)
durant nβ/2C2 pas. Comme |s − t| > nα/C2 avec probabilit´e constante,
l’esp´erance totale du nombre de pas est donc minor´ee par Ω(nβ). (cid:3)

Le d´es´equilibre des longueurs des cˆot´es de la grille allong´ee la fait apparaˆıtre
comme une grille 2-dimensionnelle lorsque qu’on observe un ensemble de noeuds
sur un rayon inf´erieur `a n, alors qu’elle se rapproche davantage d’un anneau lors-
qu’on observe un ensemble de noeuds `a distance Ω(nα) les uns des autres. On
peut dire qu’elle a deux dimensions apparentes diff´erentes (1 et 2) selon la gra-
nularit´e `a laquelle on l’observe. C’est ce saut de dimension qui met en d´efaut les
distributions s-harmoniques.

L’exemple de la grille allong´ee sugg`ere que le param`etre de la croissance des
sph`eres et des boules dans le graphe est plus pertinent que la distance sous-jacente
pour construire une distribution de liens longue-distance qui rend le graphe petit
monde navigable. Dans le chapitre suivant, nous d´eﬁnirons un processus d’aug-
mentation de graphe en graphe petit monde navigable par l’ajout d’un nombre
constant de liens longue-distance al´eatoires par noeud, en exprimant la distribu-
tion des liens comme une fonction de la taille des boules dans la m´etrique du
graphe que l’on augmente.

4.1.3 Extension aux grilles inﬁnies

Dans cette section, nous montrons que le mod`ele original de Kleinberg peut
s’´etendre aux grilles inﬁnies en modiﬁant l´eg`erement la distribution des liens
longue-distance pour s’assurer que le facteur de normalisation reste born´e.
D´eﬁnition 4.1 (R´eseau de Kleinberg inﬁni)
Etant donn´es k, d > 1 et 0 < ε < 1, le r´eseau de Kleinberg inﬁni, not´e Kd,ε
k,∞,
est la grille r´eguli`ere inﬁnie Zd, augment´ee de k liens longue-distance al´eatoires
sortants par noeud, tel que pour tout noeud u, la probabilit´e que son j-`eme contact
longue-distance soit le noeud v 6= u est proportionnelle `a :

1

|u − v|d log1+ε(1 + |u − v|)

.

106

Chapitre 4 : Probl´ematique de la petit-mondisation

Proposition 4.2 L’algorithme de routage glouton G calcule, entre tout couple de
noeuds (s, t) de Kd,ε

k,∞, un chemin dont l’esp´erance de la longueur est :

(cid:19)

.

· log2+ε |s − t|

k

(cid:18) 1

ε

O

X

v6=u

Remarque : seule la d´ependance signiﬁcative en ε est exprim´ee dans l’ordre de
grandeur, les d´ependances pr´ecises en d et ε sont donn´ees dans la preuve.
Preuve. Notons Z∞

d le facteur de normalisation de la loi. Pour tout noeud u, on a :

Z∞
d =

1

.
|u − v|d log1+ε(1 + |u − v|)

Dans Zd, pour tout r > 1, le nombre de points `a distance r de u est :

|Bu(r)| =

2d

(d − 1)!

rd−1 + ξ(r),

o`u ξ(r) est un polynˆome positif de degr´e d − 2. On obtient :

 

6X

r>2

Z∞

d

2d

(d − 1)!

1

r log1+ε r

+

ξ(r)

rd log1+ε r

!

.

Comme ξ(r)/(rd log1+ε r) = o(1/r2) et 1/(r log1+ε r) sont des termes g´en´eraux
de s´eries convergente, Z∞

d < ∞. De plus :
2d

Z∞

d

6

(d − 1)!

1
ε

.

Nous pouvons `a pr´esent suivre les lignes de l’analyse de l’algorithme glouton
sur le r´eseau de Kleinberg ﬁni pour l’analyser sur le r´eseau de Kleinberg inﬁni.
Soient s et t la source et la cible du routage, respectivement. On divise l’ex´ecution
de l’algorithme en log |s − t| phases. Pour tout i tel que 1 6 i 6 log |s − t|, la
phase i dure tant que la distance courante `a la cible appartient `a (2i−1, 2i].
Supposons que l’algorithme est en phase i. Soit x le porteur courant du mes-
sage. Soit E l’´ev´enement :« L(x) appartient `a Bt(2i−1) ». Comme la distribution
des liens longue-distance est d´ecroissante avec la distance, PrE est minor´ee par la
probabilit´e que le contact longue-distance L(y) d’un noeud y ∈ St(2i) donn´e, ap-
partienne `a Bt(2i−1). Le lemme 2.11, d´emontr´e au chapitre 2, afﬁrme que, dans un
r´eseau de Kleinberg ﬁni de dimension d, la probabilit´e qu’un noeud y, `a distance
D d’un noeud t, ait son j-`eme contact longue-distance dans Bt(D/2), est mini-
male lorsque y est un coin de la sph`ere. Nous pouvons appliquer ce lemme ici avec

4.1 : Vers une g´en´eralisation du mod`ele de Kleinberg

107

D = 2i en nous restreignant au r´eseau ﬁni induit par les noeuds de Bt(2i). Suppo-
sons que i > 2. Il reste `a ´evaluer la probabilit´e que L(y) appartienne `a Bt(2i−1)
sachant que y est un coin de la sph`ere St(2i), pour obtenir une minoration de PrE.
Comme nous nous sommes restreints `a un r´eseau de Kleinberg ﬁni, nous pouvons
´egalement utiliser le lemme 2.12 d´emontr´e au chapitre 2. Il afﬁrme que le nombre
de noeuds de Bt(2i−1) `a distance r d’un coin de Bt(2i−1) est sup´erieur ou ´egal
`a rd−1/(d − 1)!. Par cons´equent, le nombre de noeuds de Bt(2i−1), `a distance
r + 2i−1 du coin y de Bt(2i), est sup´erieur ou ´egal `a rd−1/(d − 1)!. En sommant
sur ces noeuds, on obtient que la probabilit´e que L(y) appartienne `a Bt(2i−1) est :

X
2iX

r=1

1
Z∞

d

> 1
Z∞

d

u∈Bt(2i−1)

1

|u − y|d log1+ε(|u − y| + 1)

rd−1/(d − 1)!

.
(r + 2i−1)d log1+ε(r + 2i−1)

Comme il s’agit d’une minoration, on peut choisir de ne consid´erer, dans la
somme, que les indices r sup´erieurs `a 2i−1. On obtient alors r + 2i−1 6 2r et
l’on remarquera que log1+ε(2r) 6 (2 log r)1+ε. Nous obtenons le minorant sui-
vant :

2iX

1

2d+1+ε(d − 1)!Z∞

1

.

r log1+ε r

r=2i−1

d

Z 2i+1
(cid:18)

2i−1

Par ailleurs, on a :

2iX

1

r log1+ε r

r=2i−1

>

=

=

dr

r log1+ε r

1
ε
1
ε

1
iε

1

1

(cid:18)
(cid:19)
logε 2i−1 −
(1 − 1/i)ε − 1

logε(2i + 1)
> 1

1

iε+1 .

(cid:19)

(cid:18) 1
(i − 1)ε − 1

iε

(cid:19)

=

1
ε

Ainsi l’esp´erance du nombre de pas ex´ecut´es par l’algorithme avant de trouver un
contact `a distance inf´erieure `a 2i−1 de t, depuis x, est inf´erieure ou ´egal `a :

2d+ε+1(d − 1)!Z∞

d · iε+1
k

,

puisqu’il y a k liens longue-distance ind´ependants par noeud. On en d´eduit la
majoration suivante de l’esp´erance de la longueur du chemin de routage de s `a t :

2 + 2d+ε+1(d − 1)!Z∞

d · 1
k

iε+1 = O

log |s−t|X

i=2

(cid:18) 1

ε

(cid:19)

.

· log2+ |s − t|

k

108

(cid:3)

Chapitre 4 : Probl´ematique de la petit-mondisation

4.2 M´etriques de graphes et petits mondes

Dans cette section, nous pr´esentons le cadre formel des graphes sur lesquels
nous allons construire des processus de petit-mondisation dans les chapitres sui-
vantes.

Dans toute la suite, on ne consid´erera que des graphes inﬁnis de degr´e maxi-
mum ∆, une constante ﬁx´ee, ou des graphes ﬁnis de degr´e moyen ∆0, une
constante ﬁx´ee. Notre processus de petit-mondisation se base sur l’ajout d’arcs
al´eatoires `a une structure sous-jacente connue. Cela motive les d´eﬁnitions sui-
vantes.

La d´eﬁnition suivante rappelle que l’on peut toujours associer la m´etrique des
plus courts chemins `a un graphe. Par abus de langage, on parlera simplement de
m´etrique pour d´esigner un espace m´etrique.
D´eﬁnition 4.2 (M´etrique d’un graphe)
´Etant donn´e un graphe H = (V, E), on appelle m´etrique du graphe H l’ensemble
V muni de la distance distance δH, o`u pour tout (u, v) ∈ V × V , δH(u, v) est la
distance de u `a v dans H.
D´eﬁnition 4.3 (Graphe augment´e al´eatoirement)
On appelle graphe augment´e al´eatoirement un graphe G = (V, E, E0), tel que
l’ensemble d’arcs E0 a ´et´e choisi al´eatoirement selon une distribution qui ne
d´epend que de δH, la distance dans H, o`u H = (V, E) est un graphe connexe
appel´e graphe de base.
(V, δH) est appel´ee m´etrique sous-jacente de G.

On remarquera en particulier que le mod`ele de Kleinberg Kd

n est un graphe
augment´e al´eatoirement, son graphe de base ´etant le tore d-dimensionnel et
l’ensemble E0 ´etant l’ensemble des liens longue-distance. Le graphe de base
d’un graphe al´eatoire augment´e repr´esente, dans notre mod`ele, la connaissance
globale poss´ed´ee par tous les noeuds. Un algorithme de routage d´ecentralis´e
a donc la connaissance globale du graphe de base, mais n’a la connaissance
d’un arc al´eatoire qu’en visitant son origine (voir p.19 la d´eﬁnition du routage
d´ecentralis´e).
Dans la suite, nous pr´eciserons le graphe concern´e dans les notations des
boules et sph`eres en cas d’ambigu¨ıt´e. On notera BH,u(r) et SH,u(r) respective-
ment, la boule et la sph`ere de rayon r et de centre u dans le graphe H = (V, E),
et bH,u(r) et sH,u(r) leur cardinal.

Consid´erons un graphe al´eatoirement augment´e G = (V, E, E0) de graphe de
base H = (V, E). Dans un graphe augment´e de degr´e born´e, la distance d’un

4.2 : M´etriques de graphes et petits mondes

109

noeud v dans BH,u(r) `a u est au moins Ω(log bH,u(r)) dans le graphe augment´e
G. Cela motive la d´eﬁnition suivante qui ´etend la d´eﬁnition de petit monde aux
graphes inﬁnis al´eatoirement augment´es.

D´eﬁnition 4.4 (Petit-monde navigable)
Un graphe inﬁni al´eatoirement augment´e G, ayant H pour graphe de base, est un
petit monde navigable s’il existe un algorithme d´ecentralis´e utilisant la m´etrique
sous-jacente δH qui, ´etant donn´e deux noeuds u et v, calcule un chemin de u `a v
dans G en visitant un nombre de noeuds polylogarithmique en bH,v(δH(u, v)), en
esp´erance.

On peut adapter la d´eﬁnition aux familles inﬁnies de graphes ﬁnis.

D´eﬁnition 4.5 (Famille petit monde navigable)
Une famille de graphes ﬁnis al´eatoirement augment´es (Gi)i∈I, o`u l’on note Hi
le graphe de base de Gi, est une famille petit monde navigable s’il existe un po-
lynˆome uniforme p et un algorithme d´ecentralis´e utilisant la m´etrique sous-jacente
δHi sur Gi qui, pour chaque i ∈ I et toute paire de noeuds u et v dans Gi, cal-
cule un chemin de u `a v, en visitant un nombre de noeuds dont l’esp´erance est
inf´erieure `a p(log bHi,v(δHi(u, v))).

On remarquera que certains graphes sont intrins`equement des petits mondes
navigables et ne n´ecessitent pas d’augmentation. Par exemple,
tout graphe
H = (V, E) dont bv(r) est minor´e uniform´ement par une fonction b(r) exponen-
tielle en r pour tout v est un petit monde navigable. En effet, l’algorithme glouton
qui utilise la m´etrique (V, δH) de ce graphe, calcule un chemin de longueur
r = δH(u, v) entre deux noeuds `a distance r et r = polylog(b(r)) dans ce cas.
L’exemple le plus simple de cette situation est un arbre k-aire inﬁni (avec k > 3),
o`u les boules de rayon r sont de taille Θ((k − 1)r). Au contraire, les graphes
dont les boules croissent polynomialement (i.e. tels que b(r) = O(rc) pour tout r,
pour une constante c) ne sont pas intrins`equement des petits mondes navigables
puisque la longueur du chemin optimal calcul´e par l’algorithme glouton entre
deux noeuds `a distance r est r (cid:29) polylog(b(r)) = polylog(r).

4.2.1 Graphes petit-mondisables

Nous introduisons ici les n´eologismes petit-mondisation, petit-mondiser et
petit-mondisable, dont la sonorit´e n’est pas heureuse, mais qui simpliﬁent la lec-
ture. Une petit-mondisation est un processus qui augmente une famille de graphe
en petits mondes navigables via l’ajout de liens al´eatoires en chaque noeud, sui-
vant une certaine distribution (cf. d´eﬁnition 4.6). Dans la plupart des graphes

110

Chapitre 4 : Probl´ematique de la petit-mondisation

r´eels, on observe un nombre d’arˆetes lin´eaire en le nombre de sommets, c’est par
exemple le cas pour le graphe d’Internet. Une construction bas´ee sur l’ajout d’un
nombre non constant d’arcs en moyenne par noeud n’est donc pas r´ealiste en terme
de mod´elisation des graphes r´eels. Les petit-mondisations que nous pr´esentons
dans le chapitre suivant ajoutent exactement un lien sortant par noeud. Par ailleurs,
l’ajout d’un nombre constant k > 1 de liens sortants change peu les r´esultats,
comme les preuves le feront clairement apparaˆıtre.

La destination L(u) du lien longue-distance sortant de u est choisie
al´eatoirement selon une distribution qui donne un poids ´egal `a tous les noeuds
´equidistants de u dans le graphe de base. Notons δ la m´etrique sous-jacente, pour
chaque noeud u, il existe ainsi une fonction fu telle que chaque noeud v 6= u a une
probabilit´e proportionnelle `a fu(δ(u, v)) d’ˆetre L(u). Le facteur de normalisation
Zu est donn´e par :

X

X

X

v6=u

Zu =

fu(δ(u, v)) =

r>0

r>0

su(r) · fu(r) =

(bu(r) − bu(r − 1)) fu(r).

D´eﬁnition 4.6 (Graphe inﬁni petit-mondisable)
Soit H un graphe inﬁni. Le graphe augment´e de H selon la famille de distributions
(fu)u∈H est le graphe H augment´e en ajoutant un lien longue-distance al´eatoire
sortant `a chaque noeud u de H selon fu, i.e. la destination du lien est v avec une
probabilit´e proportionnelle `a fu(δ(u, v)).

On dit qu’un graphe inﬁni H est petit-mondisable selon la famille de distri-
butions (fu)u∈H si le graphe augment´e de H selon la famille (fu)u∈H est un petit
monde navigable.

On peut ´etendre la d´eﬁnition aux familles inﬁnies de graphes ﬁnis.

D´eﬁnition 4.7 (Famille inﬁnie de graphes ﬁnis petit-mondisable)
Soit (Hi)i∈I une famille inﬁnie de graphes ﬁnis. La famille augment´ee de (Hi)i∈I
selon la famille de distributions (fi,u)u∈Hi, i∈I est la famille (Gi)i∈I o`u Gi est
obtenu en ajoutant un lien longue-distance al´eatoire sortant `a chaque noeud u de
Hi selon fi,u(r), i.e. la destination est v avec une probabilit´e proportionnelle `a
fi,u(δHi(u, v)).

On dit qu’une famille inﬁnie de graphes ﬁnis (Hi)i∈I est petit-mondisable
selon la famille de distributions (fi,u)u∈Hi, i∈I si la famille augment´ee de (Hi)i∈I
selon la famille (fi,u)u∈Hi, i∈I est une famille petit monde navigable.
Par abus de langage, nous dirons que l’on petit-mondise un graphe lorsqu’on
l’augmente al´eatoirement pour obtenir un petit monde navigable (i.e. lorsqu’on
lui applique une petit-mondisation).

4.2 : M´etriques de graphes et petits mondes

111

FIG. 4.2 : Illustration de trois types de graphes et de l’ordre de grandeur de la
taille d’une boule de rayon r pour chacun.

Quels sont les graphes petit-mondisables ? Nous savons que les grilles carr´ees
d-dimensionnelles n × ··· × n sont petit-mondisables. La croissance r´eguli`eres
de leurs boules, en Θ(rd), permet `a la distribution d-harmonique de bien r´epartir
des raccourcis sur toutes les ´echelles de distance. Nous savons ´egalement que les
arbres k-aires complets sont des petits mondes navigables, sans n´ecessiter d’aug-
mentation, grˆace `a une croissance de boule exponentielle Θ ((k − 1)r). Mais l’on
peut ´egalement construire des graphes moins r´eguliers, avec des tailles de boules
tr`es diff´erentes. La ﬁgure 4.2 illustre par exemple un graphe dont la croissance
de boules est interm´ediaire entre celle des grilles r´eguli`eres et celles des arbres
r´eguliers. Est-il possible de petit-mondiser tous les graphes ? Pour les m´etriques
de graphes g´en´erales, nous ne disposons pas d’information sur la densit´e d’un en-
semble de noeuds `a une distance donn´ee, ce qui rend difﬁcile la d´eﬁnition d’une
distribution al´eatoire de raccourcis bien r´epartis. Dans le chapitre suivant, nous
nous abordons ce probl`eme et nous montrons qu’il existe deux grandes classes
de graphes qui peuvent ˆetre petit-mondis´ees : les graphes `a croissance mod´er´ee
et les graphes admettant un plongement de faible distorsion dans (Rd, ‘1), o`u la
dimension d est born´ee.

elog2rrd3·2ri−1ii+1e√i/iChapitre 5

Processus de petit-mondisation

Introduction

Dans ce chapitre, nous proposons deux nouveaux mod`eles de petits mondes
navigables qui g´en´eralisent le mod`ele original de Kleinberg. Le premier mod`ele,
d´ecrit dans la section 5.2, est bas´e sur l’augmentation d’une classe de graphe dont
la m´etrique des distance respecte certaines contraintes de croissance. On aug-
mente les graphes par un lien longue-distance par noeud selon une distribution
d´ependant de la taille des boules de la m´etrique. Le second mod`ele, d´ecrit dans
la section 5.6, utilise une m´ethode diff´erente pour le calcul de la distribution, en
utilisant un plongement de faible distorsion de la m´etrique sous-jacente dans un
espace euclidien de faible dimension. La petit-mondisation est alors garantie pour
la classe des graphes dont la m´etrique sous-jacente admet un tel plongement.

5.1 Graphes `a croissance mod´er´ee

Dans cette section, nous d´eﬁnissons une grande classe de graphes inﬁnis (et
de familles inﬁnies de graphes ﬁnis) pour laquelle nous obtenons des mod`eles
d’augmentation qui r´esultent en des petits mondes navigables, i.e. des petit-
mondisations.
D´eﬁnition 5.1 (Graphe `a croissance β-mod´er´ee)
´Etant donn´e β > 0, un graphe H, ﬁni ou inﬁni, de degr´e born´e ∆, est un graphe `a
croissance β-mod´er´ee s’il existe une constante c0 > 0, telle que, pour tout noeud
u de H et tout r > 0, on a :

bu(2r) 6 c0(log r)β bu(r).

On peut ´etendre naturellement cette d´eﬁnition aux familles inﬁnies de graphes

ﬁnis.

114

Chapitre 5 : Processus de petit-mondisation

D´eﬁnition 5.2 (Famille inﬁnie de graphes ﬁnis `a croissance β-mod´er´ee)
´Etant donn´e β > 0, une famille inﬁnie de graphes ﬁnis (Hi)i∈I, de degr´e moyen
uniform´ement born´e ∆, est une famille `a croissance β-mod´er´ee s’il existe une
constante uniforme c0 > 0, telle que pour tout i, tout noeud u de Hi et tout r > 0,
on a :

bHi,u(2r) 6 c0(log r)β bHi,u(r).

Cette classe de graphe contient

la classe des graphes

`a croissance
born´ee1
toute
boule est inf´erieure `a c fois la taille de la boule de mˆeme centre et de rayon
moiti´e, pour une constante c > 0 uniforme).

les graphes `a croissance 0-mod´er´ee (i.e.

[KR02], qui sont

Dimension intrins`eque. Il existe plusieurs d´enominations de la classe des
graphes `a croissance born´ee dans la litt´erature : on parle ´egalement de graphes
`a croissance restreinte2 [KR02], ou encore de graphes de dimension de grille
born´ee3 [GKL03]. Ces d´enominations font r´ef´erence `a la faible « dimension » as-
soci´ee `a cette classe. Pr´ecis´ement, Krauthgamer et Lee [KL03] ont r´ecemment
d´emontr´e que la croissance des boules caract´erise la dimension intrins`eque d’un
graphe, au sens que le taux de croissance ρ, tel que toute boule de rayon r contient
O(rρ) noeuds, est ´equivalent `a la dimension d minimale pour laquelle le graphe est
un sous-graphe de Zd∞. Pour bien comprendre `a quoi correspond notre d´eﬁnition
de graphe `a croissance β-mod´er´ee, on peut traduire sa contrainte en une contrainte
sur la dimension intrins`eque du graphe. On d´eﬁnit donc la dimension intrins`eque
au noeud u par la fonction du telle que, pour tout r > 0, bu(r) = rdu(r), i.e.
du(r) = logr bu(r). Pour un graphe `a croissance β-mod´er´ee, on a, pour tout r > 0,

bu(r) 6 c0 logβ(r/2)bu(r/4) 6 . . . 6 clog r

0

logβ log r(r/2)bu(1).

Soit encore :

On en d´eduit :

bu(r) 6 rc0+β log log(r/2).

du(r) 6 c0 + β log log(r/2).

La dimension intrins`eque d’un graphe `a croissance β-mod´er´ee ne peut donc
pas augmenter de fac¸on trop brutale. Nous obtenons ´egalement une borne
O(rO(β log log r)) sur la taille de toute boule de rayon r.

1Bounded growth graphs en anglais.
2Restricted growth graphs en anglais.
3Bounded grid dimension en anglais.

5.2 : Petit-mondisation des graphes `a croissance mod´er´ee

115

5.2 Petit-mondisation des graphes

mod´er´ee

`a croissance

le th´eor`eme suivant, qui est le r´esultat principal de ce chapitre, donne un pro-
cessus pour petit-mondiser les graphes `a croissance mod´er´ee. Nous distinguons
trois cas : les graphes inﬁnis, les familles de graphes inﬁnis et les graphes ﬁnis.

Th´eor`eme 5.1 (Petit-mondisation des graphes `a croissance β-mod´er´ee)

(i) Pour tout 0 < ε < 1, tout graphe inﬁni H `a croissance β-mod´er´ee, β > 0,
est petit-mondisable selon la famille de distributions (fu)u∈H d´eﬁnie par :

fu(r) =

1

bu(r) log1+β+ε(r + 1)

pour tout r > 0.

L’algorithme glouton calcule, pour tout couple de noeuds (s, t) `a dis-
tance m, un chemin de s `a t dans le graphe augment´e, de longueur

ε · (log m)2+4β+ε(cid:1) en esp´erance, o`u c0
O(cid:0)c0

ε = 24β/(ε(2 + 4β)).

(ii) Pour tout 0 < ε < 1, toute famille inﬁnie de graphes ﬁnis (Hi)i∈I `a
croissance β-mod´er´ee, β > 0, est petit-mondisable selon la famille de dis-
tributions (fi,u)u∈Hi, i∈I d´eﬁnie par :

fi,u(r) =

1

bHi,u(r) log1+β+ε(r + 1)

pour tout r > 0.

L’algorithme glouton calcule, pour tout couple de noeuds (s, t) `a dis-
tance m, un chemin de s `a t dans la famille augment´ee, de longueur

ε · (log m)2+4β+ε(cid:1) en esp´erance, o`u c0
O(cid:0)c0

ε = 24β/(ε(2 + 4β)).

(iii) Tout graphe ﬁni H, de n noeuds, `a croissance β-mod´er´ee, β > 0, aug-

ment´e selon la famille de distributions (fu)u∈H d´eﬁnie par :

fu(r) =

1

bH,u(r)

pour tout r > 0,

(cid:16)

(23β/β2) (log n)β+1 (log m)3β+1(cid:17)

est un graphe o`u l’algorithme glouton calcule, entre toute paire de
noeuds `a distance m, un chemin dans le graphe augment´e de longueur
O

en esp´erance.

D’autres r´esultats montrant la possibilit´e de petit-mondiser d’autres classes de
graphes ont ´et´e d´emontr´es simultan´ement [Sli05, Fra05], on trouvera une discus-
sion comparative de ces r´esultats dans la section 5.7.

116

Chapitre 5 : Processus de petit-mondisation

La partie (iii) du th´eor`eme n’est pas une petit-mondisation au sens de la
d´eﬁnition 4.4 puisque la longueur d’un chemin de s `a t ne d´epend pas unique-
ment de la taille de la boule bs(δ(s, t)) mais aussi de la taille n du graphe. Tou-
tefois, ces graphes ﬁnis sont petit-mondisables au sens de la d´eﬁnition via le cas
(ii), nous ajoutons donc cette augmentation par une autre distribution dans le seul
but de donner une alternative selon que le choix le plus efﬁcace est d’exprimer
la longueur en fonction de n (lorsque la contante c0
ε est grande) ou seulement en
fonction de bs(δ(s, t)) (lorsque que la plupart des chemins `a calculer sont entre
des paires proches).

Pour prouver le th´eor`eme 5.1, nous montrons tout d’abord que le facteur de
normalisation de la distribution est born´e, puis nous analysons l’algorithme de
routage glouton sur les graphes augment´es.

On remarquera que, pour prouver que la famille (Hi)i∈I est petit-mondisable,
il sufﬁt d’obtenir des bornes uniformes, i.e. ind´ependantes de i, sur l’esp´erance
de la longueur du chemin calcul´ee par l’algorithme glouton, valables pour tout
graphe ﬁni Hi. Par cons´equent, les preuves sont analogues pour les cas (i) et
(ii) des graphes ﬁnis et des familles inﬁnies de graphes ﬁnis respectivement. Il
sufﬁt donc de d´emontrer le cas (i) avec des bornes sur la longueur des chemins
ind´ependantes du graphe pour d´emontrer le cas (ii).

Preuve du th´eor`eme 5.1 (i). Soit H un graphe inﬁni, de degr´e born´e, `a croissance
β-mod´er´ee, de m´etrique δH. Soient s et t la source et la cible du routage respecti-
vement. On consid`ere l’algorithme de routage glouton G dans le graphe augment´e
al´eatoirement par fu, pour chaque noeud u.

L’argument principal de l’analyse de Kleinberg, dont cette preuve est inspir´ee,
est que parmi un nombre polylogarithmique de noeuds `a distance comprise entre r
et r/2 de t, pour r > 2, il en existe un, avec probabilit´e constante, dont le contact
longue-distance est `a distance inf´erieure `a r/2 de la cible. De ce r´esultat, on tire
que l’esp´erance de la longueur de chemin est polylogarithmique. Nous utilisons
ici un argument similaire, en le modiﬁant de fac¸on `a ce que le majorant puisse ˆetre
exprim´e uniquement en fonction de la m´etrique originale δH (et non de la taille
totale du graphe).

P

Nous devons tout d’abord v´eriﬁer que les facteurs de normalisation Zu =
v∈V fu(δH(u, v)) sont born´es, pour que la distribution soit bien d´eﬁnie. Comme

5.2 : Petit-mondisation des graphes `a croissance mod´er´ee

117

il y a su(r) noeuds `a distance r de u dans H, on peut ´ecrire :

Zu =

su(r) · fu(r) =

su(r)

r>1

bu(r) log1+β+ε(r + 1)

X

r>1

= 1 +

6 1 +

2i+1X

r=2i+1

X
X

i>0

i>0

X

1

X

i>1

bu(r) − bu(r − 1)
bu(r) log1+β+ε(r + 1)

2i+1X

(bu(r) − bu(r − 1))

bu(2i + 1) log1+β+ε(2i + 2)

6 1 + (1 − 1
bu(2)

) +

r=2i+1

bu(2i+1) − bu(2i)
bu(2i + 1) · i1+β+ε .

Or, comme H est `a croissance β-mod´er´ee, on a :

bu(2i+1) − bu(2i) 6 (c0 logβ(2i) − 1)bu(2i) 6 c0iβbu(2i + 1).

On obtient :

Zu 6 1 +

(cid:18)

(cid:19)

X

i>1

+

c0
i1+ε

6 2 +

c0
ε

=def Zε.

1 − 1
bu(2)

Nous analysons `a pr´esent l’esp´erance de la longueur du chemin calcul´e
par l’algorithme glouton. Soit un entier r > 2 et un noeud u tel que
r/2 < δH(u, t) 6 r et notons L(u) son contact longue-distance. Nous donnons
une minoration de Pr{δH(L(u), t) 6 r/2}, la probabilit´e que L(u) appartienne
`a Bt(r/2). Comme fu est une fonction d´ecroissante et Bt(r/2) ⊆ Bu(3r/2),
chaque noeud de Bt(r/2) a une probabilit´e d’ˆetre L(u) sup´erieure `a fu(3r/2)/Zu.
Comme par ailleurs, Bu(3r/2) ⊆ Bt(5r/2), nous pouvons minorer fu(3r/2) en
fonction de bt(5r/2) (cf. ﬁgure 5.2) :

fu(3r/2) >

1

bt(5r/2) log1+b+ε(1 + 3r/2)

.

Cette minoration, combin´ee `a la croissance β-mod´er´ee, nous permet d’obtenir

une minoration de la probabilit´e consid´er´ee qui ne d´epend que de t et r :

Pr{δH(L(u), t) 6 r/2} >

1

Zε log1+β+(1 + 3r/2)

>(cid:0)c3
0Zε log1+β+ε(1 + 3r/2) log3β(5r/4)(cid:1)−1
>(cid:0)21+4β+εc4

0Zε log1+4β+ε(r)(cid:1)−1

bt(r/2)
bt(5r/2)

118

Chapitre 5 : Processus de petit-mondisation

FIG. 5.1 : Illustration de l’inclusion des boules pour la preuve du th´eor`eme 5.1.

Nous revenons `a pr´esent `a la question initiale de la longueur du chemin glou-
ton de s `a t. Comme pour l’analyse du r´eseau de Kleinberg original, on divise
l’ex´ecution de G en log |s − t| phases successives de division par deux de la dis-
tance `a la cible. La phase i dure tant que la distance du noeud courant `a t, dans
δH, appartient `a (2i−1, 2i]. La discussion pr´ec´edente prouve que lorsque l’algo-
rithme est en phase i, la probabilit´e de quitter cette phase pour une phase j < i est
sup´erieure `a Ω(i−γ2−γε) en chaque noeud, o`u γ = 1 + 4β + ε. Ainsi, pour tout
i ∈ {1, . . . , log |s − t|}, l’algorithme glouton visite au plus O(ε−1iγ2γ) noeuds
en esp´erance durant la phase i. Par lin´earit´e de l’esp´erance, l’esp´erance de la lon-
gueur du chemin calcul´e par l’algorithme glouton de s `a t est

(cid:18) 24β

O

ε(2 + 4β)

(cid:19)

(log δH(s, t))2+4β+ε

.

Finalement, l’esp´erance de la longueur du chemin de s `a t est polylogarithmique
en m = δH(s, t) et a fortiori en bt(δH(s, t)). Le graphe augment´e al´eatoirement
est donc bien un petit monde navigable. (cid:3)

Preuve du th´eor`eme 5.1 (iii). La preuve est essentiellement identique `a celle
des graphes inﬁnis, `a l’exception que l’absence du facteur logarithmique dans la
distribution fait intervenir la taille du graphe dans la longueur du chemin.

utrr/23r/25r/25.2 : Petit-mondisation des graphes `a croissance mod´er´ee

119

Le facteur de normalisation de la distribution au noeud u est :

Zu =

nX

r=1

= 1 +

nX

r=1

su(r)
bu(r)

su(r) · fu(r) =

log n−1X

2i+1X

i=0

r=2i+1

bu(r) − bu(r − 1)

bu(r)

.

En utilisant le mˆeme argument de croissance mod´er´ee que dans la preuve du cas
(i), on obtient :

(cid:18)

(cid:19)

log n−1X

i=1

Zu 6 1 +

1 − 1
bu(2)

+

c0 iβ 6 2 +

c0

β + 1

logβ+1 n =def Zn.

Pour la lisibilit´e, on remarquera qu’il existe n0 > 0 tel que pour tout n sup´erieur
`a n0, Zn 6 (2c0/(β + 1)) logβ+1 n.

On analyse `a pr´esent la longueur du chemin calcul´e par l’algorithme glouton
entre une source s et une cible t, en consid´erant un entier r > 1 et un noeud u tel
que r/2 < δH(u, t) 6 r. Par un argument identique `a celui utilis´e dans la preuve
pour le cas inﬁni, on a, pour tout n > n0 :

Pr{δH(L(u), t) 6 r/2} > 1
Z

bH,t(r/2)
bH,t(5r/2)

>

β + 1

1

2c0 logβ+1 n

0 log3β(5r/4)
c3

>

β + 1
0 logβ+1 n

23β+1c4

1

log3β(r)

.

En menant une analyse par phases de division par deux de la distance `a la cible,
identique au cas inﬁni, on obtient une esp´erance de longueur de chemin inf´erieure
`a :

log δH (s,t)X

i=0

23β+1c4

0 logβ+1 n
β + 1

(cid:18) 23β

i3β 6 23β+1c4

0 logβ+1 n
(β + 1)(3β + 1)

(log δH(s, t))3β+1

(cid:19)

β2 (log n)β+1 (log δH(s, t))3β+1

.

= O

(cid:3)

Remarques. On remarquera que, pour le tore r´egulier, qui correspond au r´eseau
de Kleinberg inﬁni, on a β = 0, puisque les boules sont de croissance polynomiale
et la dimension intrins`eque est constante. L’esp´erance de la longueur de chemin de
l’algorithme glouton dans un graphe petit-mondis´e par le th´eor`eme 5.1 reste donc

120

identique `a celle obtenue dans le r´eseau de Kleinberg, i.e. O(cid:0)(1/ε) log2+ε m(cid:1) entre

Chapitre 5 : Processus de petit-mondisation

deux noeuds distants de m dans le cas g´en´eral (cas (i) et (ii)) et O(log n log m)
dans le tore de cˆot´e n lorsqu’on ne fait pas intervenir ε (cas (iii)).

On notera que le facteur logarithmique log1+β+ε(δ(u, v)) de la distribution
n’est pas contraignant en soi et est introduit pour la g´en´eralisation aux graphes
inﬁnis et aux familles inﬁnies de graphes ﬁnis, ainsi que pour obtenir une longueur
de chemin qui ne d´epend que de la distance entre les noeuds source et cible.

Ce th´eor`eme montre que la propri´et´e de petit monde navigable n’est pas propre
aux tores r´eguliers augment´es et donne un processus permettant d’obtenir une
large classe de graphes petit-mondisables. En particulier, il traite le cas du tore
allong´e et de tous les graphes ayant des tailles de boules b(r) croissant comme
rα log log r, α > 0, ou plus lentement. La classe des graphes `a croissance mod´er´ee,
incluse dans celle des graphes `a croissance β-mod´er´ee, est par ailleurs consid´er´ee
comme un bon mod`ele de la structure des grands r´eseaux informatiques, comme le
r´eseau Internet ou les r´eseaux pair-`a-pair, qui sont peu denses [KR02]. Cette classe
a ´et´e particuli`erement ´etudi´ee r´ecemment dans le cadre de la localisation dis-
tribu´ee d’objets (i.e. la construction de tables de hachage distribu´ees des r´eseaux
pair-`a-pair). On pourra se r´ef´erer `a [HKK04, PRR99].

Dans le cadre des r´eseaux de routage, la classe des graphes de Cayley a
´egalement ´et´e particuli`erement ´etudi´ee (voir par exemple [Zho04]). Rappelons
qu’un graphe de Cayley est un graphe d´eﬁni par un groupe G, ayant un nombre
ﬁni de g´en´erateurs g1, . . . , gk. Les sommets sont les ´el´ements de G et il existe arˆete
entre x et y si et seulement s’il existe un g´en´erateur gi ∈ G tel que x = giy, ou
y = gix. Notre th´eor`eme nous permet d’afﬁrmer que tous les graphes de Cayley
connus sont petit-mondisables. En effet,

– soit leur expansion est polynomiale et ils sont couverts par le th´eor`eme 5.1

avec β = 0,

– soit

leur diam`etre est polylogarithmique (expansion exponentielle ou
presque exponentielle, c’est-`a-dire Ω(2Θ(rd)) pour d > 0) et ils sont in-
trins`equement petits mondes.

l’existence de groupes de taille de boule interm´ediaire (super-
En effet,
polynomiale ou sous-exponentielle) est encore ind´etermin´ee. plus pr´ecis´ement, la
question de l’existence d’un groupe de taille de boule b(r) super-polynomiale mais
√
inf´erieure `a e
r est toujours ouverte. On pourra par exemple se reporter `a [Gri90]
et [Bar02] pour un ´etat de l’art de ce sujet central en g´eom´etrie alg´ebrique.

Si nous savons `a pr´esent petit-mondiser une grande classe de graphes, le
th´eor`eme 5.1 ne caract´erise toutefois pas tous les graphes petit-mondisables
et la question de l’existence de graphes qui ne sont pas petit-mondisables est
actuellement ouverte. La discussion pr´ec´edente indique par ailleurs que la
recherche de graphes qui ne seraient pas petit-mondisables doit se faire parmi
d’autres classes de graphes que les graphes de Cayley.

5.2 : Petit-mondisation des graphes `a croissance mod´er´ee

121

Concernant l’´emergence de l’effet petit monde dans les r´eseaux sociaux, la
distribution inversement proportionnelle `a la taille des boules semble reﬂ´eter
la r´epartition des contacts sociaux non g´eographiques. En effet, Liben-Nowell
et al. [LNJK+05] ont ´etudi´e exp´erimentalement un r´eseau social et ont s´epar´e
les connaissances en deux types : connaissances « g´eographiques » et « non
g´eographiques ». Ils montrent que les connaissances « non g´eorgraphiques » sont
r´eparties selon la distribution inverse des tailles de boules, c’est-`a-dire que
l’individu X a d’autant plus de chances de connaˆıtre l’individu Y si le nombre
d’individus plus proches de X que Y est faible.

Produit cart´esien de graphes petit-mondisables. Un fait remarquable de la pro-
pri´et´e de petit monde du mod`ele de Kleinberg est sa relative ind´ependance en la
dimension. En effet, l’esp´erance de la longueur des chemins calcul´es par l’algo-
rithme glouton est la mˆeme lorsque la m´etrique sous-jacente est un anneau que
lorsque c’est un tore de grande dimension. La grille de grande dimension ´etant un
produit cart´esien d’anneaux, on peut penser que la propri´et´e pr´esente dans l’an-
neau est conserv´ee par l’application du produit cart´esien.

D´eﬁnition 5.3 (Produit cart´esien)
Le produit cart´esien H = F × G de deux graphes non orient´es F et G est le
graphe (VH, EH) o`u VH = VF × VG et EH = {{(f, g), (f, g0)}|{g, g0} ∈ EG, f ∈
VF} ∪ {{(f, g), (f0, g)}| g ∈ VG,{f, f0} ∈ EF}.
Le th´eor`eme 5.1 conﬁrme cette clˆoture par produit cart´esien de la petit-
mondisation pour la nouvelle classe des graphes `a croissance β-mod´er´ee. En effet,
le produit cart´esien H de deux graphes G1 et G2 `a croissance β1- et β2-mod´er´ee
respectivement est un graphe `a croissance 3(β1 + β2)-mod´er´ee puisque :
bG1,u1(r/2)bG2,u2(r/2) 6 bH,(uG1 ,uG2 )(r) 6 bG2,u2(r)bG1,u2(r),

pour tout couple de noeuds (u1, u2) ∈ G1 × G2.

Cette remarque, combin´ee au th´eor`eme 5.1, nous permet de donner une
m´ethode alternative simple, pour obtenir la g´en´eralisation du graphe de Klein-
berg de dimension 1 aux tores de dimension sup´erieure, que l’on peut voir comme
des produits cart´esiens de tores de dimension 1. Par exemple, en cons´equence, tout
tore Cn1 × Cn2 × . . . × Cnl peut ˆetre augment´e al´eatoirement en un petit monde
navigable, pour tout ε > 0, dans lequel l’algorithme glouton calcule des chemins
dont l’esp´erance de la longueur est O((1/ε) log2+ε(maxi ni)). Enﬁn, cette conser-
vation de la petit-mondisation par le produit cart´esien renforce l’impression que
la propri´et´e petit monde d’un r´eseau peut reposer sur plusieurs sous-structures
diff´erentes.

122

Chapitre 5 : Processus de petit-mondisation

FIG. 5.2 : Exemple de la tapette `a mouches inﬁnie, petit-mondisable, mais qui
n’est pas `a croissance mod´er´ee.

5.3 Une caract´erisation non exhaustive des graphes

petit-mondisables

<0 × {0})S(Z+>0 × Z) ; deux noeuds

Dans la section pr´ec´edente, nous avons ´etendu le mod`ele de Kleinberg
[Kle00], en d´emontrant qu’une grande classe de graphes est petit-mondisable.
Toutefois, le th´eor`eme 5.1 laisse ouverte la question de d´eterminer si l’on peut
petit-mondiser tous les graphes. La condition de croissance mod´er´ee est encore
trop restrictive puisque nous pouvons exhiber des exemples de graphes qui ne
la satisfont pas et sont pourtant petit-mondisables. Dans l’exemple illustr´e sur
la ﬁgure 5.2, le graphe est compos´e de deux parties distinctes de dimension in-
trins`eque diff´erentes. Il s’agit d’une chaˆıne semi-inﬁnie connect´ee `a une grille
semi-inﬁnie de dimension 2. Nous appelons ce graphe tapette `a mouche inﬁnie.
Le graphe a pour ensemble de sommets (Z−
sont adjacents si leur distance de Manhattan est ´egale `a 1. Il n’existe alors pas
de constante β telle que ce graphe soit `a croissance β-mod´er´ee, car pour tout
noeud u sur la chaˆıne, `a distance m de la grille, on a : bu(m) = 2m, mais
bu(2m) = Θ(m2) + 3m. Pourtant, on peut petit-mondiser ce graphe en l’aug-
mentant par la distribution 1/(r2 log1+ε(r + 1)) sur la partie bidimensionnelle et
par la distribution 1/(r log1+ε(r + 1)) sur la partie unidimensionnelle, pour un
ε > 0 quelconque. D’apr`es notre extension du mod`ele de Kleinberg aux graphes
inﬁnis, nous savons en effet qu’en augmentant le graphe de cette fac¸on, l’algo-
rithme glouton trouve des chemins de longueur polylogarithmique en esp´erance
entre tous couples de noeuds dans chaque sous-graphe et par cons´equent entre
tous couples de noeuds du graphe. Cependant, nous verrons dans la section 5.6
un deuxi`eme processus de petit-mondisation permettant de traiter l’exemple de la
tapette `a mouche inﬁnie.

(0,0)−∞+∞+∞−∞5.4 : D’autres distributions sont-elles possibles ?

123

5.4 D’autres distributions sont-elles possibles ?

Apr`es avoir d´etermin´e une grande classe de graphe pouvant ˆetre augment´ee
en petit monde navigable, nous renforc¸ons ce r´esultat en pr´esentant, dans cette
section, une borne inf´erieure polynomiale sur l’esp´erance de la longueur du che-
min calcul´e par un algorithme d´ecentralis´e arbitraire lorsque l’on modiﬁe l’expo-
sant sur la taille de boule de la distribution. Ce r´esultat g´en´eralise celui de Klein-
berg [Kle00] et Barri`ere et al. [BFKK01] qui d´emontrent que l’augmentation par
un nombre constant de liens longue-distance par noeud, dans le tore r´egulier d-
dimensionnel, selon une distribution s-harmonique, pour s diff´erent de d, rend le
graphe augment´e non-navigable pour tout algorithme d´ecentralis´e.
Th´eor`eme 5.2

(i) Soit α > 1. Pour tout ε > 0, β > 0 et tout graphe inﬁni H `a croissance β-
mod´er´ee, β > 0, augment´e selon la famille de distributions (fu)u∈H d´eﬁnie
par :

(cid:0)bu(r)(cid:1)α log1+β+ε(r + 1)

1

fu(r) =

,

il existe une constante c > 0 telle que l’esp´erance de la longueur du chemin
calcul´e par tout algorithme d´ecentralis´e entre tout couple de noeuds distants
de m, est sup´erieure `a c · m1−1/α.
(ii) Soit α < 1. Pour tout k > 1 et tout tout graphe ﬁni H `a croissance β-
mod´er´ee, β > 0, de n noeuds, augment´e par selon la famille de distributions
(fu)u∈H d´eﬁnie par :

(cid:0)bu(r)(cid:1)α ,

1

fu(r) =

il existe une constante c0 > 0 telle que l’esp´erance de la longueur du chemin
calcul´e par tout algorithme d´ecentralis´e entre tout couple de noeuds, est
sup´erieure `a c0 · n1/(log log n)2.

Dans le cas α < 1, nous ne d´emontrons la borne inf´erieure que pour les graphes
ﬁnis, car la distribution n’est pas d´eﬁnie pour les graphes inﬁnis, comme la
preuve le fera apparaˆıtre (mˆeme si l’on ajoutait un facteur logarithmique au
d´enominateur). Dans le cas α > 1, on remarquera que le terme logarithmique
de la distribution n’est pas signiﬁcatif, puisque son rˆole est simplement d’obtenir
un facteur de normalisation constant pour que la distribution soit bien d´eﬁnie sur
les graphes inﬁnis. Le r´esultat d´emontr´e pour les graphes inﬁnis s’´etend de fac¸on
imm´ediate aux familles inﬁnies de graphes ﬁnis `a croissance mod´er´ee, comme
nous l’avons remarqu´e dans les sections pr´ec´edentes.
Preuve du th´eor`eme 5.2 (i). Soit H un graphe inﬁni `a croissance β-mod´er´ee. On
peut tout d’abord v´eriﬁer que cette distribution est toujours bien d´eﬁnie en remar-

124

Chapitre 5 : Processus de petit-mondisation

quant que la constante de normalisation Zu, pour chaque noeud u, est strictement
inf´erieure `a celle de la distribution 1/(bu(r) log1+β+ε(r + 1)) dont on a v´eriﬁ´e la
convergence dans la preuve du th´eor`eme 5.1 et pour laquelle il existe une majora-
tion constante. Cette majoration est par ailleurs ind´ependante de u, on note Zε la
constante uniforme telle que pour tout noeud u, Zu < Zε.
On consid`ere `a pr´esent un algorithme de routage d´ecentralis´e A quelconque,
selon la d´eﬁnition 1.10 donn´ee dans le pr´eambule. Nous allons montrer qu’avec
cette distribution, les liens longue-distance sont trop courts pour permettre au rou-
tage d´ecentralis´e d’ˆetre efﬁcace.

Pour tout noeud u et tout ‘ > 1, la probabilit´e que le j-`eme lien longue-

distance de u soit de longueur sup´erieure `a ‘ est :

Pr{δH(u, L(u)) > ‘} =

=

1
Z ε

1
Zε

6 1
Zε

r>‘

su(r)

X
(cid:0)bu(r)(cid:1)α log1+b+ε(r + 1)
X
X

2i+1X
(cid:0)bu(r)(cid:1)α log1+β+ε(r + 1)
P2i+1
(cid:0)bu(2i + 1)(cid:1)α log1+β+ε(2i + 1)
r=2i+1 (bu(r) − bu(r − 1))

bu(r) − bu(r − 1)

i>log(‘−1)

r=2i+1

i>log(‘−1)

.

Par la croissance β-mod´er´ee de H, on a :

(bu(r) − bu(r − 1)) = bu(2i+1) − bu(2i) 6 2βc0iβbu(2i).

2i+1X

r=2i+1

On obtient :

Pr{δH(u, L(u)) > ‘} 6 2βc0
Zε

i>log(‘−1)
On a par ailleurs bu(2i) > 2i par connexit´e, ainsi :

X

X

1

(cid:0)bu(2i)(cid:1)α−1i1+ε
Z ∞

.

Pr{δH(u, L(u)) > ‘} 6 2βc0
Zε

1

(2α−1)i

6 2βc0
Zε

dt

(2α−1)t

log(‘−1)−1

i>log(‘−1)
2βc0

Zε(α − 1) ln 2

6

1

(‘ − 1)α−1

Soit m la distance s´eparant la source et la cible du routage. La probabilit´e de visiter
un noeud dont le lien longue-distance est de longueur sup´erieure `a (m + 1)1/α
parmi les qm(α−1)/α premiers noeuds visit´es, q < 1 est donc inf´erieure `a :

2βc0

Zε(α − 1) ln 2

qm(α−1)/α
(m1/α)α−1

6

q2βc0

Zε(α − 1) ln 2

.

5.4 : D’autres distributions sont-elles possibles ?

125

Il existe q0 tel que pour q 6 q0, on a (q2βc0)/(Z(α − 1) ln 2) < 1, on suppose `a
pr´esent q < q0.
Soit E l’´ev´enement : « parmi les qm(α−1)/α premiers noeuds visit´es, on ne
visite aucun noeud dont le lien longue-distance est de longueur sup´erieure `a (m +
1)1/α ». Soit X la variable al´eatoire pour la longueur du chemin calcul´e par A. Si
l’´ev´enement E se produit, l’algorithme se rapproche de la cible d’une distance au
plus (1/4)(m + 1)1/α · m(α−1)/α < 21/αqm, durant les qm(α−1)/α premiers pas.
Il existe q1 tel que pour q 6 q1 on ait (q21/α) < 1, dans ce cas, l’algorithme
n’atteint donc pas encore la cible. On suppose `a pr´esent q 6 min(q0, q1). On a
donc : E[X |E] > (1/q)m(α−1)/α. On obtient ﬁnalement :

(cid:18)

(cid:19)

E[X] > E[X |E] · PrE > qm(α−1)/α ·

(cid:3)

1 −

q2βc0

Z(α − 1) ln 2

= Ω(m(α−1)/α).

Preuve du th´eor`eme 5.2 (ii). Soit H un graphe ﬁni, de n noeuds, `a croissance
β-mod´er´ee. Soient s et t la source et la cible pour le routage respectivement. La
probabilit´e que s n’appartienne pas `a Bt(n1/(log log n)2) est :

1 − bt(n1/(log log n)2)

n

> 1 − n2β/ log log n

n

,

pour n sup´erieur `a une constante n0 > 0, puisque la croissance β-mod´er´ee de H
impose que :

(cid:18)

n1/(log log n)2(cid:19)

bt

c0 + β log log(n1/(log log n)2)

(log log n)2

6 n

6 n2β/ log log n.

Comme 2β/ log log n = o(1), il existe une constante n1 > n0 telle que, pour
n > n1, 1 − n2β/ log log n−1 > 1
4. La source a donc une probabilit´e constante d’ˆetre
hors de la boule de rayon n1/(log log n)2 centr´ee sur la cible pour n > n1. Nous allons
montrer que tout algorithme d´ecentralis´e met un temps n1/(log log n)2 en esp´erance
pour atteindre cette boule.

Pour tout noeud u, le facteur de normalisation de la distribution est :

Zu =

X
> nX

v6=u

r=1

nX

1

su(r)

(bu(δ(u, v))α =

(cid:0)(bu(r))1−α − (bu(r − 1))1−α(cid:1) > (bu(n))1−α − 1

(bu(r))α

r=1

126

Chapitre 5 : Processus de petit-mondisation

Comme fu est inf´erieure `a 1 pour tout noeud u, la probabilit´e qu’un noeud u ait
son contact longue-distance dans la boule Bt(n1/(log log n)2) est inf´erieure `a :

bt(n1/(log log n)2)

Zu

6 bt(n1/(log log n)2)
(bu(n))1−α − 1

6 n2β/ log log n
n1−α − 1

.

On consid`ere un algorithme d´ecentralis´e A quelconque et l’´ev´enement E : « A vi-
site un noeud dont le contact longue-distance appartient `a Bt(n1/(log log n)2) durant
les n1/(log log n)2 premiers pas ». Comme les liens sont tir´es ind´ependamment, on
a, par la borne de l’union :

PrE 6 kn1/(log log n)2 n2β/ log log n
n1−α − 1

.

Or, il existe une constante n2 > 0 telle que, pour n sup´erieur `a n2, on ait
1 − α − (2β/ log log n) − 1/(log log n)2 > 0. Pour n sup´erieur `a max(n1, n2),
la probabilit´e que la source n’appartienne pas `a Bt(n1/(log log n)2) et que E ne se
produise pas est donc sup´erieure `a une constante C > 0, ind´ependante de n.
Soit E0 cet ´ev´enement. L’esp´erance de la longueur du chemin conditionn´ee par
E0 est sup´erieure `a n1/(log log n)2, car pour ˆetre inf´erieure, l’algorithme doit trouver
un contact longue-distance dans Bt(n1/(log log n)2) ce qui ne se produit pas avant
n1/(log log n)2 pas par hypoth`ese. Soit X la variable al´eatoire pour la longueur de
chemin calcul´ee par A, on a donc :

E[X] > E[X |E0] PrE0 > Cn1/(log log n)2.

(cid:3)

5.5 Un mod`ele qui peut engendrer (presque) toutes

les distributions de degr´es

Une des principales critique faites au mod`ele de Kleinberg est qu’il ne
mod´elise par la distribution des degr´es suivant une loi de puissance qui est ob-
serv´ee sur de nombreux graphes r´eels, comme le graphe d’Internet [FFF99]. Pour-
tant, sur ce mod`ele comme sur celui que nous venons de pr´esenter, il sufﬁt de
faire une modiﬁcation mineure pour obtenir cette distribution des degr´es et plus
g´en´eralement, toute distribution de degr´es qui assure un degr´e sup´erieur ou ´egal
`a 1 avec probabilit´e constante. C’est en fait le cas pour tout processus de petit-
mondisation construit en ajoutant 1 lien par noeud.

Le th´eor`eme suivant pr´esente l’ensemble des distributions de degr´es possibles
pour la petit-mondisation et montre ainsi que la propri´et´e de petit monde navigable
ne semble pas corr´el´ee `a une distribution des degr´es sp´eciﬁque.

5.6 : Une autre approche : la petit-mondisation par plongement

127

constante c > 0 telle queP

Th´eor`eme 5.3
Soit H un graphe petit-mondisable selon la famille de distribution (fu)u∈H (en
ajoutant un lien par noeud) et π une distribution sur N telle qu’il existe une
k>1 π(k) > c. Le graphe H augment´e en ajoutant
`a chaque noeud u, k liens ind´ependants distribu´es selon fu avec probabilit´e π(k)
est un petit monde navigable.
Preuve. La probabilit´e qu’un noeud u donn´e ait au moins un lien longue-distance
sortant est sup´erieure `a c par hypoth`ese, par cons´equent, il sufﬁt de multiplier
par c les probabilit´es qui portent sur un lien longue-distance dans la preuve de la
petit-mondisation du th´eor`eme 5.1 pour obtenir le r´esultat. (cid:3)

sation distribution : Zα =P

En particulier, soit π une distribution des degr´es suivant une loi de puissance
de param`etre α, i.e. π(k) = 1/(Zαkα) pour k ∈ N?, o`u Z est le facteur de normali-
k>1(1/kα). Pour α > 1, on a Zα < ∞, la probabilit´e
que le degr´e sortant d’un noeud donn´e soit sup´erieur ou ´egal `a 1 est alors sup´erieur
`a une constante. L’exposant de la loi de puissance observ´e dans le graphe d’Inter-
net est compris entre 2 et 3 [FFF99], le mod`ele que nous avons pr´esent´e dans la
section 5.2 peut donc produire une telle distribution de degr´es tout en produisant
un petit monde navigable.

5.6 Une autre approche : la petit-mondisation par

plongement

Dans cette section, nous pr´esentons une nouvelle approche pour la petit-
mondisation de graphe via le plongement du graphe initial dans Rd. L’´etude du
mod`ele de Kleinberg inﬁni (section 4.1.3, p. 105) a montr´e que Zd ´etait petit-
mondisable. Nous montrons que si l’on sait plonger un graphe dans Rd, pour une
faible dimension d et avec une distorsion restreinte des distances, nous pouvons
le petit-mondiser via l’utilisation de la distribution d-harmonique dans le plonge-
ment.
D´eﬁnition 5.4 (Plongement)
´Etant donn´es deux espaces m´etriques (E, δ) et (E0, δ0), on appelle plongement de
E dans E0 toute fonction σ telle qu’il existe deux constantes 0 < α < 1 et β > 1
telles que pour tout couple (u, v) ∈ E2,

α · δ(u, v) 6 δ0(σ(u), σ(v)) 6 β · δ(u, v).

α et β sont appel´es respectivement contraction et expansion de σ, et γ =def β/α
est la distorsion de σ.

128

Chapitre 5 : Processus de petit-mondisation

Rappelons que tout graphe d´eﬁnit de fac¸on naturelle un espace m´etrique, dont
les ´el´ements sont les sommets du graphe et dont la distance entre deux points
correspond `a la longueur du plus court chemin les reliant dans le graphe.

Nous d´eﬁnissons `a pr´esent notre nouveau processus d’augmentation d’un

graphe en un petit monde (algorithme 4).

Algorithme 4 Algorithme de petit-mondisation par plongement

Entr´ee : Un graphe G = (V, E), un plongement σ de G dans (Rd, ‘1) et une
constante ε > 0.
´Etape 1 :
pour chaque u ∈ V faire

tirer un point-destination τu dans Rd, avec une densit´e de probabilit´e
proportionnelle `a

(2 + |σ(u) − τ|)d log2+ε(2 + |σ(u) − τ|)

1

,

sur tout τ ∈ Rd.

ﬁn pour
´Etape 2 :
pour chaque u ∈ V faire

L(u) ← σ−1(τ ), o`u τ est le point de σ(G) le plus proche de τu dans
Rd.
ﬁn pour

Dans l’algorithme 4, on suppose qu’il existe un plongement particulier σ du
graphe G dans Rd. L’´etape 1 associe un point-destination `a chaque point de Rd
choisi selon la distribution qui petit-mondise le mod`ele de Kleinberg Kd∞. Pour
chaque noeud u du graphe, il existe alors un point-destination dans Rd (celui
de son repr´esentant σ(u) dans le plongement). Si ce point destination est l’image
d’un noeud v par σ, le contact longue-distance L(u) de u est simplement v. Sinon,
L(u) est le noeud w de σ(G) qui est le plus proche du point-destination de σ(u)
dans Rd. On obtient ainsi un ensemble de liens dans le graphe de base, qui ont ´et´e
distribu´es en fonction des distances dans le plongement.

Pour que ces liens augmentent le graphe de base en un petit monde navigable,
il est n´ecessaire que les distances entre les noeuds plong´es dans Rd ne soient pas
trop diff´erentes des distances dans le graphe de base, aﬁn de conserver les pro-
pri´et´es de petit monde du graphe Rd augment´e. Le th´eor`eme suivant afﬁrme que
l’algorithme 4 augmente le graphe de base en un petit monde lorsque le plon-
gement a une distorsion γ limit´ee et que la dimension d n’est pas trop grande,

5.6 : Une autre approche : la petit-mondisation par plongement

129

pr´ecis´ement γd doit ˆetre polylogarithmique.
Th´eor`eme 5.4 (Petit-mondisation par plongement)
Pour toute constante ε > 0 et tout graphe G, de n noeuds, tel qu’il existe un
plongement σ de G dans (Rd, ‘1), de distorsion γ, l’algorithme de routage glouton
calcule, entre tout couple de noeuds du graphe al´eatoirement augment´e obtenu en
appliquant l’algorithme 4 `a (G, σ, ε), un chemin de longueur :

(cid:18) 23d

ε

O

γd+1+ε log2+ε n

,

(cid:19)

en esp´erance.
Preuve. On consid`ere s et t deux noeuds de G, qui sont la source et la cible du
routage respectivement. On d´ecompose l’ex´ecution du routage glouton en phases :
la phase i dure tant que la distance du noeud courant `a t appartient `a (2i−1, 2i], pour
i variant de 1 `a log δ(s, t), o`u δ est la distance dans G. On note respectivement α
et β la contraction et l’expansion de σ. Quitte `a renormaliser le plongement, on
peut supposer qu’il est non-contractant, i.e. que la contraction vaut 1.
Supposons que le noeud courant x est `a distance x = δ(x, t) de t. Soit X =
|σ(x) − σ(t)|. Comme σ est de distorsion γ, on a : δ(x, t) 6 |σ(x) − σ(t)| 6
γ · δ(x, t), i.e. x 6 X 6 γ · x.
Soit E l’´ev´enement : « τx est `a distance inf´erieure `a X/(4γ) de σ(t) ». Si E se
produit, alors |σ(L(x)) − σ(t)| 6 X/(2γ) puisque :
|σ(L(x)) − σ(t)| 6 |σ(L(x)) − τx| + |τx + σ(t)| 6 2|τx + σ(t)| 6 X/(2γ),
puisque σ(L(x)) est plus proche de τx que σ(t) (au sens large). On obtient :

δ(L(x) − t) 6 |σ(L(x)) − σ(t)| 6 X/(2γ) 6 x/2.

Nous ´evaluons `a pr´esent la probabilit´e de E. Dans Rd, le facteur de normalisa-
tion de la distribution est le mˆeme en tout point, au point 0 de coordonn´ees nulles,
il vaut :

Z∞
Rd =

τ∈Rd, τ6=0

(|τ| + 2)d log1+ε(|τ| + 2)

.

dτ

Pour ´evaluer cette int´egrale nous utilisons le volume sRd(r) d’une hypersph`ere de
rayon r dans Rd. On remarquera que s(r − 1) 6 sRd(r) 6 s(r + 1), o`u s(r) est
le volume d’une hypersph`ere de rayon r dans Zd. Nous avons ´evalu´e ce volume

dans le pr´eambule, page 23, on en d´eduit : c0(cid:0)2d/(d − 1)!(cid:1) rd−1 6 sRd(r) 6
c(cid:0)2d/(d − 1)!(cid:1) rd−1, o`u c > 1 et c0 < 1 sont des constantes. On obtient :

Z

Z

Rd 6 c
Z∞

2d

(d − 1)!

(r + 2) log1+ε(r + 2)

r>0

dr

6 c
ln 2

2d

(d − 1)!

1
ε

.

130

Chapitre 5 : Processus de petit-mondisation

Nous utilisons `a pr´esent les minorants obtenus pour une grille d-dimensionnelle
dans le chapitre 2 : nous pouvons g´en´eraliser les arguments des preuves `a Rd en
faisant tendre le maillage vers l’inﬁni et nous adaptons les valeurs des minorants
`a l’aide du volume d’une hypersph`ere donn´e plus haut. D’apr`es le lemme 2.11,
la probabilit´e de E est minimale lorsque σ(x) est plac´e sur un coin de la sph`ere
Sσ(t)(X). Lorsque σ(x) est un coin de la sph`ere, en utilisant les mˆeme arguments
que pour le lemme 2.12, il y au moins s(i/2)/2 > c0(2d/(d − 1)!)id−1 noeuds
dans Bσ(t)(λX) `a distance inf´erieure ou ´egale `a i + (1− λ)X de σ(x) pour i allant
de 1 `a λX, pour tout 0 < λ < 1. Comme nous cherchons une minoration, on
peut sommer les probabilit´es pour i allant de λX/2 `a λX seulement et dans ce cas
Z λX
i + (1 − λ)X + 2 6 (2/λ)i. On obtient :
PrE > c0 2d/(d − 1)!
(cid:19)d+1+εZ λX
(cid:18) λ
(cid:19)d+1+ε(cid:18)
(cid:18) λ
(cid:19)d+1+ε
(cid:18) λ

(i + (1 − λ)X + 2)d log1+ε(i + (1 − λ)X + 2)

Z∞
Rd
> c0 ln 2 ε

1

(log(λX) − 1)ε −

> c0 ln 2

(log(λX))ε

r log1+ε r

λX/2

id−1di

2

2

(cid:19)

λX/2

dr

1

> c0 ln 2

ε

2

log1+ε(λX)

En prenant λ = 1/(4γ), on obtient :

PrE > c0 ln 2

ε

1

23d+1+ε γd+1+ε

log1+ε(X/γ)

.

Finalement : PrE > f (ε, d, γ)/ log1+ε(x), o`u f (ε, d, γ) d´ecrit la constante cal-
cul´ee ci-dessus.

L’esp´erance du nombre de noeuds visit´es par l’algorithme glouton dans G, en
phase i est donc inf´erieure `a i1+ε/f (ε, d, γ) et la longueur totale du chemin est
inf´erieure `a :

Z δ(s,t)

O

(cid:3)

1

f (ε, d, γ)

i=1

i1+ε 6 1

c0 ln 2

23d+1+ε
ε(2 + ε)

γd+1+ε log2+ε(δ(s, t)),

On obtient ﬁnalement une esp´erance de longueur de chemin :

(cid:18) 23d

ε

(cid:19)

γd+1+ε log2+ n

.

5.6 : Une autre approche : la petit-mondisation par plongement

131

Comme un graphe al´eatoirement augment´e dans lequel l’algorithme glouton
calcule des chemins de longueur polylogarithmique en esp´erance est un petit
monde navigable, on obtient le corollaire suivant.

Corollaire 5.5 Tout graphe G de n noeuds pour lequel il existe un plongement
dans (Rd, ‘1) de distorsion γ tel que γd = polylog(n) est petit-mondisable par
l’algorithme 4.

La preuve est imm´ediate.

L’exemple de la tapette `a mouche inﬁnie, qui n’´etait pas couvert par la
premi`ere caract´erisation de graphes petit-mondisables, est couvert par ce corol-
laire puisque ce graphe est naturellement plong´e dans Z2, isom´etriquement (i.e.
avec distorsion 1). De fac¸on plus g´en´erale, les graphes admettant par exemple un
plongement de distorsion constante dans RO(log log n), ou un plongement de dis-
torsion polylog(n) dans RO(1) sont petit-mondisables. Toutefois, cette nouvelle
caract´erisation n’est pas exhaustive et ne r´epond pas `a la question de l’existence
de graphes qui ne seraient pas petit-mondisables.

Ce probl`eme est reli´e aux probl`emes g´en´eraux de plongements de m´etriques
ﬁnies dans un espace euclidien de faible dimension qui ont rec¸u une attention
particuli`ere r´ecemment. La majorit´e des travaux de ce domaine portent sur des
plongements de m´etriques g´en´erales. En 1985, Bourgain [Bou85] a d´emontr´e un
th´eor`eme important qui donne la construction explicite d’un plongement de dis-
torsion O(log n) de toute m´etrique de n points dans (RO(log n), ‘1). Ce r´esultat
a permis de cr´eer de nouveaux algorithmes d’approximation, car la r´esolution
d’un probl`eme est souvent plus simple dans un espace euclidien de dimension
ﬁnie et le facteur d’approximation reste faible. Les travaux sur les plongements
de m´etriques ont donc trouv´e de nombreuses applications algorithmiques et com-
binatoires. Pour le corollaire 5.5, il serait int´eressant d’avoir une caract´erisation
des m´etriques de graphe sp´eciﬁques qui satisfont les hypoth`eses de l’existence
du plongement. On peut voir cette question comme un probl`eme de type Ram-
sey pour les m´etriques (cf. [BLMN03]). Toutefois, les r´esultats qui portent sur le
compromis entre la dimension et la distorsion d’un plongement dans ‘1 se sont
essentiellement concentr´es sur les m´etriques g´en´erales, et une dimension logarith-
mique ´etait g´en´eralement sufﬁsamment petite pour les probl`emes algorithmiques
qui ont motiv´es ces r´esultats. Ces r´esultats ne nous permettent donc pas de ca-
ract´eriser les graphes correspondant `a l’hypoth`ese du corollaire 5.5. C’est seule-
ment tr`es r´ecemment que les plongements dans les espaces euclidiens de dimen-
sion constante ont connu un v´eritable essor, du fait du d´eveloppement des grands
r´eseaux d´ecentralis´es. En effet, une probl´ematique de ces r´eseaux est de pouvoir
´evaluer les distances entre les noeuds sans avoir `a parcourir le graphe, pour avoir
une complexit´e r´ealiste en regard du tr`es grand nombre de noeuds. En plongeant

132

Chapitre 5 : Processus de petit-mondisation

le graphe dans un espace ‘p de dimension constante avec une distorsion limit´ee,
la distance entre deux noeuds peut ˆetre simplement ´evalu´ee en calculant la norme
‘p entre les deux coordonn´ees des noeuds dans le plongement. Un r´esultat r´ecent
de Abraham et al. [ABC+05] propose en particulier un plongement qui permet
de plonger toute m´etrique dans ‘p avec une distorsion et une dimension constante
lorsqu’on autorise une fraction constante des arˆetes `a ˆetre arbitrairement distor-
dues. Ce r´esultat est tr`es prometteur pour une extension de notre m´ethode de
petit-mondisation par plongement de tout graphe.

5.7 Discussion

Dans ce chapitre, nous avons montr´e, par deux m´ethodes de petit-mondisation
diff´erentes, qu’il existe une grande classe de graphes qui peuvent ˆetre transform´es
en petits mondes navigables via l’ajout d’un nombre constant de liens al´eatoires.
Le premier processus (section 5.2) montre que ces liens peuvent ˆetre distribu´es en
fonction de la croissance des boules du graphe et le second (section 5.6) donne
une caract´erisation li´ee `a l’existence d’un plongement de faible distorsion dans un
espace euclidien de faible dimension.

D’autres r´esultats concernant la compr´ehension des propri´et´es structurelles de
la navigabilit´e sont parus simultan´ement et d´emontrent ´egalement la possibilit´e
d’augmenter des graphes sp´eciﬁques en petits mondes navigables. Slivinks [Sli05]
a ainsi d´emontr´e ind´ependamment que toutes les m´etriques de dimension dou-
blante born´ee, qui contiennent les m´etriques de croissance born´ee, ´etaient petit-
mondisables via l’ajout d’un nombre polylogarithmique de liens par noeud. La
dimension doublante d’un graphe est l’exposant α tel que toute boule de rayon
r peut ˆetre couverte par 2α boules de rayon r/2. Il s’agit d’une probl´ematique
l´eg`erement diff´erente dans le sens o`u l’on suppose la donn´ee d’une m´etrique de
d´epart et non d’un graphe de d´epart, il n’y a donc aucune arˆete entre les noeuds
avant la petit-mondisation. On doit alors tenir compte de deux param`etres : le
nombre de noeuds n et le diam`etre de la m´etrique ∆ qui est le ratio de la plus
grande distance sur la plus petite distance. L’auteur utilise le fait qu’il existe une
mesure doublante4 pour toute m´etrique de dimension doublante born´ee, cela si-
gniﬁe grossi`erement qu’il existe une assignation de poids aux noeuds qui donne
`a la m´etrique l’apparence d’une m´etrique de croissance born´ee (on pourra se re-
porter au chapitre 13 de [Hei01]). Le processus de petit-mondisation ajoute alors
O(2α log n log ∆) liens al´eatoires par noeud (soit O(2α log2 n) en partant d’un
graphe `a croissance born´ee) et produit un graphe dans lequel un algorithme de
routage d´ecentralis´e calcule des chemins de longueur O(2α log n) en esp´erance.

4une mesure doublante pour un espace m´etrique est une mesure µ telle qu’il existe une
constante c > 0 telle que, pour tout noeud u et tout rayon r > 0, on a µ(bu(2r)) 6 c · µ(bu(r)).

5.7 : Discussion

133

Ce r´esultat ´elargit donc la classe des graphes petit-mondisables. Slivkins ne donne
pas d’impl´ementation de cette petit-mondisation, mais on remarquera qu’elle re-
quiert le calcul d’une mesure de dimension doublante pour la m´etrique (le meilleur
algorithme est actuellement en O(n log n) [HM05]), puis le parcours de toutes les
boules du graphe (selon une impl´ementation na¨ıve).

D’autre part, Fraigniaud [Fra05] a d´emontr´e que tout graphe ﬁni de largeur ar-
borescente born´ee ou de cordalit´e born´ee, pouvait ˆetre augment´e en petit monde
via l’ajout d’un lien par noeud. La largeur arborescente d’un graphe G repr´esente
grossi`erement l’entier minimal k tel que le graphe peut ˆetre d´ecompos´e en un
arbre dont les noeuds sont des sous-graphes de G de diam`etre au plus k. La
cordalit´e est la taille maximum d’un cycle sans corde dans G. Le processus
de petit-mondisation propos´e commence par faire une d´ecomposition arbores-
cente du graphe sur laquelle est calcul´ee la distribution des liens-longue-distance.
Cette petit-mondisation permet d’obtenir une esp´erance de longueur de chemin
O(log2 n) pour l’algorithme glouton.

Toutes les petit-mondisations propos´ees distribuent les liens longue-distance
selon une loi monotone en la distance sous-jacente. Flammini et al. [FMNP05]
ont r´ecemment montr´e une borne inf´erieure Ω(log2 n) pour l’esp´erance de la lon-
gueur de chemin de l’algorithme glouton pour toutes les distributions monotones.
Si les nouveaux mod`eles de petit monde permettent de mieux comprendre les
propri´et´es structurelles des petits mondes et ´eventuellement d’en tirer parti pour
construire des r´eseaux informatiques o`u le routage est efﬁcace, on ne peut donc
pas esp´erer construire de mod`ele o`u l’algorithme glouton serait plus efﬁcace que
dans le mod`ele de Kleinberg original en ajoutant des liens selon une distribution
monotone.

Les processus de petit-mondisation que nous avons pr´esent´es dans ce cha-
pitre et ceux de [Fra05, Sli05] ne donnent pas de caract´erisation exhaustive et la
question de l’existence de graphes non petit-mondisables reste ouverte. Le pro-
cessus de petit-mondisation par plongement nous laisse n´eanmoins suspecter que
tout graphe peut ˆetre petit-mondis´e. En effet, un r´esultat r´ecent de Abraham et
al. [ABC+05] montre qu’il est possible de plonger, avec une distorsion constante,
toute m´etrique dans Rd, o`u la dimension d est une constante, si l’on autorise une
fraction constante des arˆetes `a avoir une distorsion arbitraire. Ce r´esultat, combin´e
`a notre ´etude d’un processus de petit-mondisation par plongement, nous laisse
suspecter que tout graphe pourrait ˆetre augment´e en un petit monde navigable.
N´eanmoins, pour d´epasser l’erreur induite par les plongements laissant une frac-
tion des distances arbitrairement distordues, un degr´e sortant polylogarithmique
semble n´ecessaire aﬁn de garantir une couverture de toutes les ´echelles de dis-
tances du graphe par les liens al´eatoires ajout´es.

Sous l’hypoth`ese de la validit´e de cette conjecture, la caract´eristique essen-
tielle de l’existence de la navigabilit´e dans un graphe serait donc davantage due

134

Chapitre 5 : Processus de petit-mondisation

`a la relation existante entre la distribution des raccourcis et la m´etrique des dis-
tances sous-jacente, qu’`a une propri´et´e sp´eciﬁque de cette m´etrique, ce qui expli-
querait l’omnipr´esence de cette propri´et´e. Par ailleurs, nous devrions alors recher-
cher l’origine de l’´emergence de l’effet petit monde dans un processus naturel de
construction des raccourcis. Dans cette perspective, le chapitre suivant pr´esente
une impl´ementation distribu´ee de petit-mondisation, o`u chaque noeud choisit son
contact longue-distance sans connaˆıtre le reste du graphe.

Chapitre 6

Petit-mondisation distribu´ee

Introduction

Dans ce chapitre, nous nous int´eressons `a l’´emergence de l’effet petit monde

dans un r´eseau via un processus naturel d’ajout de raccourcis.

Si les petit-mondisations propos´ees dans le chapitre 5 et celles de Frai-
gniaud [Fra05] et Slivkins [Sli05] permettent bien d’augmenter un r´eseau en un
petit monde navigable, elles requi`erent n´eanmoins la connaissance de la quasi-
totalit´e du r´eseau pour le calcul des liens longue-distance. [Fra05] n´ecessite no-
tamment de calculer une d´ecomposition arborescente du r´eseau, [Sli05] n´ecessite
de calculer une mesure doublanteainsi que la taille de toutes les boules de
la m´etrique, enﬁn le processus de petit-mondisation des graphes `a croissance
mod´er´ee que nous avons pr´esent´e dans le chapitre 5 n´ecessite ´egalement le calcul
de toutes les tailles de boules. Ces processus requi`erent donc un pr´ecalcul cen-
tralis´e sur le r´eseau qui n’est pas envisageable dans le cadre d’un grand r´eseau
informatique d´ecentralis´e, ou d’un r´eseau social. Dans ce chapitre, nous propo-
sons un sch´ema enti`erement distribu´e pour augmenter les graphes `a croissance
born´ee en petits mondes navigables par l’ajout d’un unique lien par noeud. Nous
utilisons pour cela une m´ethode d’´echantillonnage multi-niveaux qui nous per-
met d’´eviter les calculs centralis´es des distributions des liens longue-distance
al´eatoires. En d´ecrivant un sch´ema distribu´e pour la petit-mondisation, nous don-
nons un exemple de processus o`u, via un ensemble d’op´erations locales, l’effet
petit monde ´emerge dans un r´eseau. Pour d´ecrire le fonctionnement de l’algo-
rithme de routage glouton, nous supposons que les noeuds du r´eseau sous-jacent
(avant augmentation) peuvent ´evaluer leur distance les uns par rapport aux autres,
on suppose donc qu’il existe un oracle de comparaison des distances. Formelle-
ment, nous nous int´eressons au probl`eme suivant :

136

Chapitre 6 : Petit-mondisation distribu´ee

Probl`eme 6.1
´Etant donn´e un r´eseau, d´ecrire un algorithme distribu´e efﬁcace qui ajoute un lien
par noeud tel que l’algorithme glouton, en utilisant un oracle r´epondant `a la ques-
tion ”δ(u, w) > δ(v, w) ?” en temps constant, calcule des chemins de longueur
polylogarithmique en esp´erance entre toute paire de noeuds du graphe augment´e.

6.1 Application
d´ecentralis´es

aux

r´eseaux

informatiques

La petit-mondisation distribu´ee permet de r´eduire le diam`etre apparent1 d’un
r´eseau r´eel, en effectuant un pr´ecalcul qui ajoute un ensemble de liens (lorsqu’il
s’agit d’un r´eseau virtuel). Les r´eseaux pair-`a-pair utilisent par exemple un r´eseau
virtuel de tables de hachage distribu´ees. Ce r´eseau permet de naviguer d’un pair `a
un autre, en utilisant les liens virtuels des tables de hachage. Dans ce contexte,
l’ajout d’un nouveau lien par noeud de fac¸on distribu´ee revient `a ajouter une
entr´ee par table de hachage. La petit-mondisation devient donc particuli`erement
int´eressante lorsqu’elle n’ajoute qu’un lien par noeud.

Les architectures de r´eseau pair-`a-pair les plus r´ecentes [RD01, FG03,
MNR02, SMK+01] construisent directement un r´eseau garantissant un routage
efﬁcace. Toutefois, il peut ˆetre difﬁcile de maintenir dynamiquement une topolo-
gie pr´ecise. Dans un cadre plus g´en´eral, le r´eseau peut ˆetre construit `a partir d’une
topologie arbitraire, c’est le cas par exemple des r´eseaux pair-`a-pair non struc-
tur´es [CSWH00]. Dans ce contexte, on peut imaginer que les pairs diffusent un
message pour d´emarrer un processus de petit-mondisation lorsque le routage est
trop lent.

L’hypoth`ese de l’existence d’un oracle de comparaison des distances pour
l’algorithme glouton est r´ealiste pour de nombreuses classes de graphes. Les
grilles de coordonn´ees discr`etes, les hypercubes, les graphes de Delaunay et
de Yao (appel´es aussi Θ-graphes) offrent un tel oracle par le biais de leur
propre ´etiquetage de noeuds. Le routage glouton a ´et´e tr`es ´etudi´e sur ces to-
pologies [BM04]. Par ailleurs, un tel oracle peut ´egalement ˆetre construit par
un pr´ecalcul sur le r´eseau. Par exemple, des techniques sophistiqu´ees et peu
coˆuteuses, bas´ees sur les spanneurs [TZ05], ou l’´etiquetage de distance [GPPR01],
permettent de calculer rapidement les distances exactes et approch´ees entre deux
noeuds. Une autre approche consiste `a construire des tables de routage com-
pactes (voir [GP03, TZ05, AGM+04] pour des r´esultats sur les graphes arbi-
traires). Pour les graphes `a croissance born´ee [AM05], ou de dimension doublante

1Rappelons que le diam`etre apparent d’un r´eseau est l’esp´erance de la longueur du plus long

des plus courts chemins qui peuvent ˆetre calcul´es par un algorithme d´ecentralis´e.

6.2 : Mod`ele ´etudi´e

137

born´ee [Sli05], il est possible de construire des tables de routage de taille polylo-
garithmique en chaque noeud de fac¸on `a ce que les longueurs des chemins soient
optimales `a un facteur 1 + .

6.2 Mod`ele ´etudi´e

Dans la suite, nous allons consid´erer des r´eseaux non pond´er´es `a crois-
sance born´ee, c’est-`a-dire que pour tout noeud u et tout rayon r > 0, le ratio
bu(2r)/bu(r) est born´e par une constante uniforme c, appel´ee taux d’expansion.
Nos r´esultats s’´etendent par ailleurs aux r´eseaux dont le taux d’expansion est
born´e par un polylogarithme du nombre de noeuds, les performances sont tou-
tefois d´egrad´ees par ce facteur.

Notre sch´ema distribu´e s’applique aux r´eseaux synchrones, c’est-`a-dire qu’il
existe une horloge globale, connue de tous les noeuds, et qu’`a chaque pulsa-
tion de l’horloge, chaque noeud est autoris´e `a effectuer une action. On appelle
ronde la p´eriode de temps entre deux pulsations de l’horloge. On suppose que les
noeuds communiquent par transmission de messages. Si ∆ est le degr´e maximal
du r´eseau, dans le mod`ele ∆-port, un noeud peut envoyer, durant chaque ronde,
un nombre constant de messages `a ses voisins. On suppose que les noeuds ont des
identiﬁants uniques et que chaque noeud connaˆıt les identiﬁants de ses voisins.
L’existence d’un oracle r´epondant aux sp´eciﬁcations du probl`eme 6.1 est conte-
nue dans l’hypoth`ese que les tables de routage des noeuds permettent de r´epondre
aux requˆetes de comparaison de distance. Enﬁn, on suppose que chaque noeud
a la connaissance de la taille n du r´eseau2, et les identiﬁants de ses voisins. La
quantit´e de m´emoire par noeud est donc au moins Ω(∆ log n) bits.

Les principaux crit`eres d’´evaluation de l’efﬁcacit´e des algorithmes distribu´es
sont la complexit´e en temps (nombre de rondes), la complexit´e en communication
(en nombre de messages) et la quantit´e de m´emoire requise par noeud. Nous ne
prenons pas en compte la complexit´e en temps des calculs locaux entre chaque
ronde (ils sont en O(∆) et donc domin´es par les complexit´es en temps des com-
munication entre les noeuds).

6.3 Petit-mondisation par ´echantillonnage multi-

niveaux

Dans cette section, nous d´ecrivons notre processus de petit-mondisation dis-
tribu´ee par ´echantillonnage multi-niveaux. Les d´etails de l’impl´ementation dis-
2Dans le cas o`u cette hypoth`ese est trop restrictive, des m´ethodes de pr´ecalcul peuvent ˆetre

utilis´ees pour en obtenir une approximation, voir par exemple [HM03].

138

Chapitre 6 : Petit-mondisation distribu´ee

tribu´ees seront d´evelopp´es dans la section 6.4.

Les nouveaux processus de petit-mondisation tentent de r´epartir des raccourcis
`a toutes les ´echelles de distances, pour de grandes classes de graphe. La distribu-
tion des raccourcis est donc intimement li´ee `a la m´etrique sous-jacente et n´ecessite
de connaˆıtre la quasi-totalit´e du graphe. En effet, les petit-mondisations du cha-
pitre pr´ec´edent ainsi que de [Sli05] requi`erent non seulement la connaissance des
tailles de boules de chaque noeud (pour calculer la distribution des longueurs des
liens) mais aussi les identiﬁants des noeuds de ces boules (pour pouvoir r´ecup´erer
l’identiﬁant du contact longue-distance tir´e). Le principe de notre sch´ema dis-
tribu´e est d’´eviter ce calcul des tailles de boules par tous les noeuds, de fac¸on `a
ce que chaque noeud n’explore que O(log n) noeuds en moyenne. Pour cela, nous
construisons un ´echantillon multi-niveaux du r´eseau, les diff´erents niveaux cou-
vrant les diff´erentes ´echelles de distance. Les noeuds de l’´echantillon, appel´es lea-
ders, seront alors charg´es du tirage des liens longue-distance des autres noeuds
dont ils sont responsables.

6.3.1 Le processus de petit-mondisation distribu´e
Description de la petit-mondisation distribu´ee (Algorithme 5, p. 139). L’id´ee
principale est que chaque noeud u ne calcule pas lui-mˆeme son lien longue-
distance, il choisit seulement une ´echelle de longueur al´eatoire ‘ = 2i, en choisis-
sant i uniform´ement dans {dlog(2c log n)e, . . . ,dlog De} et demande `a un noeud
leader v, `a distance inf´erieure `a ‘ de u, de tirer son contact longue-distance de
u uniform´ement dans sa boule Bv(3‘). Un tel noeud v est appel´e le leader de
niveau i pour u. Seuls les leaders de niveau i auront `a explorer leur boule de
rayon 3 · 2i ; tous les autres noeuds se r´ef´ereront `a eux pour calculer leur contact
longue-distance.

Pour permettre un tel proc´ed´e, chaque noeud doit avoir un leader de niveau i `a
distance inf´erieure `a 2i, pour tous les niveaux i. Cela garantit que le tirage effectu´e
par le leader est une bonne approximation du tirage qu’aurait effectu´e le noeud
dans sa propre boule de rayon 3 · 2i. Cela impose donc une densit´e sufﬁsante des
leaders de niveau i par rapport aux autres noeuds. D’autre part, pour ´eviter de
surcharger le r´eseau, nous devons garantir que l’ensemble des leaders n’est pas
trop dense. En effet, chaque leader v de niveau i va explorer bv(3 · 2i) noeuds,
nous souhaitons donc garantir que la taille totale de l’exploration induite par ces
noeuds n’exc`ede pas O(n log n) au total.

La s´election des leaders de niveau i est effectu´ee par

l’algorithme
d’´echantillonnage al´eatoire LEADER (Algorithme 6, p. 140). Nous d´ecrivons
`a pr´esent son fonctionnement et nous montrons qu’il effectue bien un
´echantillonnage avec la probabilit´e d´esir´ee, c’est-`a-dire que chaque noeud u est
ins´er´e dans l’ensemble des leaders de niveau i avec probabilit´e (2c log n)/bu(2i),

6.3 : Petit-mondisation par ´echantillonnage multi-niveaux

139

Algorithme 5 PETIT-MONDISATION DISTRIBU ´EE
Dans notre sch´ema, les leaders de niveau i sont en charge du tirage des contacts
longue-distance `a distance O(2i).
1. Soit k0 = dlog(2c log n)e.

Pour tout i ∈ {k0, . . . ,dlog De}, chaque noeud u est s´electionn´e pour ˆetre
leader de niveau i avec probabilit´e (2c log n)/bu(2i), ind´ependamment ;
cette ´etape est effectu´ee en ex´ecutant, pour tout i ∈ {k0, . . . ,dlog De}, l’al-
gorithme LEADER(u, i) (Algorithme 6) en parall`ele sur tous les noeuds
u ∈ V .

2. Puis, chaque leader de niveau i informe tous les noeuds, `a distance
inf´erieure ou ´egale `a 2i, qu’il est leur leader de niveau i (les cas d’´egalit´es
sont rompus arbitrairement).

3. S’il existe un noeud u qui n’a pas rec¸u de leader de niveau i, pour un ni-
veau i, retourner au pas 1 (on dit alors que la phase d’´echantillonnage a
´echou´e.).

4. Chaque leader de niveau i explore sa boule de rayon 3 · 2i.
5. Chaque noeud u du r´eseau choisit alors uniform´ement

i dans
{k0, . . . ,dlog De} et fait une requˆete de contact longue-distance `a son lea-
der v de niveau i ; v choisit alors uniform´ement le contact longue-distance
de u uniform´ement dans sa boule Bv(3 · 2i).

ind´ependamment.

S´election des leaders de niveau i (Algorithme 6). L’algorithme LEADER(u, i)
d´ecide si un noeud u est un leader de niveau i. Une fois ex´ecut´e sur tous les
noeuds, il assure qu’avec forte probabilit´e, tout noeud est `a distance inf´erieure
`a 2i d’un leader de niveau i (Lemme 6.2). On note Si l’ensemble al´eatoire des
leaders de niveau i.

Le lemme suivant montre que l’algorithme LEADER offre bien la probabilit´e

de s´election d´esir´ee pour l’´etape 1 de l’algorithme 5.
Lemme 6.1 Pour tout i ∈ {k0, . . . ,dlog De} et pour tout noeud u ∈ V ,
Pr{u ∈ Si} = (2c log n)/bu(2i) et les tirages sont ind´ependants.
Preuve. Tout d’abord, l’ind´ependance des tirages est assur´ee par le fait que chaque
noeud u ex´ecute sa proc´edure LEADER(u, i)ind´ependamment des autres noeuds
du r´eseau.
Soit i ∈ {k0, . . . ,dlog De} et u ∈ V . Le noeud u est ins´er´e dans Si si et
seulement s’il a r´eussi tous les tirages al´eatoires jusqu’`a k = i. u survit au pre-

140

Chapitre 6 : Petit-mondisation distribu´ee

Algorithme 6 LEADER(u, i)

L’algorithme LEADER(u, i) proc`ede par des phases d’inondation successives
de rayons croissants.
k0 := dlog(2c log n)e.
k := k0 + 1.
Explorer la boule Bu(2k0).
u meurt avec probabilit´e 1 − 2c log n/bu(2k0).
tant que u est vivant et k 6 i faire

Explorer Bu(2k).
u meurt avec probabilit´e 1 − bu(2k−1)/bu(2k).
k := k + 1.

ﬁn tant que
si u est vivant alors

ﬁn si

u est un leader de niveau i.

mier tirage avec probabilit´e 2c log n/bu(2k0). Il survit au suivant avec probabilit´e
bu(2k0)/bu(2k0+1), etc. Le noeud u est vivant `a la ﬁn de l’ex´ecution s’il a r´eussi
tous les tirages ind´ependants jusqu’`a la valeur k = i, soit avec une probabilit´e :

2c log n
bu(2k0)

× bu(2k0)
bu(2k0+1)

× ··· × bu(2i−1)

bu(2i)

=

2c log n
bu(2i)

.

(cid:3)

Le lemme suivant montre que la phase d’´echantillonnage r´eussit avec forte

probabilit´e.

Lemme 6.2 La probabilit´e que la phase d’´echantillonnage de l’algorithme 5
´echoue est inf´erieure `a log n/n.
Preuve. Soit un noeud u et soit i ∈ {dlog(2c log n)e, . . . ,dlog De}. La probabilit´e
qu’un noeud v appartienne `a Si est 2c log n/bv(2i). Par inclusion, tout noeud de
v dans Bu(2i) satisfait : bv(2i) 6 bu(2i+1). Par hypoth`ese de croissance mod´er´ee,
on a bu(2i+1) 6 c bu(2i). La probabilit´e qu’aucun noeud de Si ne soit dans Bu(2i)
est donc inf´erieure `a :

(cid:18)

(cid:19)bu(2i) 6 1

n2 .

1 − 2c log n
c bu(2i)

Par la borne de l’union, la probabilit´e que cela arrive pour au moins un niveau i est
donc inf´erieure `a log D/n2 (puisqu’il y a moins de log D niveaux). Finalement,

6.3 : Petit-mondisation par ´echantillonnage multi-niveaux

141

par la borne de l’union une nouvelle fois, la probabilit´e que cet ´echec se produise
pour au moins un noeud est inf´erieure `a log D/n 6 log n/n. (cid:3)

Deviner le taux d’expansion c. On remarquera que la connaissance de la valeur
exacte du taux d’expansion c n’est en r´ealit´e pas requise pour ex´ecuter les algo-
rithmes LEADER et PETIT-MONDISATION DISTRIBU ´EE. En effet, on peut initia-
liser l’ex´ecution en choisissant c = 1 et, si la phase d’´echantillonnage ´echoue,
on r´e-ex´ecute l’algorithme avec c := 2c jusqu’`a ce que l’algorithme r´eussisse.
D’apr`es le lemme 6.2, avec forte probabilit´e, seulement dlog ce ex´ecutions sont
n´ecessaires avant d’obtenir un succ`es. Par cons´equent, nous supposons `a pr´esent
c connu.

6.3.2 Analyse de l’algorithme de routage glouton dans le

graphe augment´e

Nous analysons l’algorithme de routage glouton dans un r´eseau de crois-
sance born´ee augment´e par l’algorithme PETIT-MONDISATION DISTRIBU ´EE, sous
l’hypoth`ese que la phase d’´echantillonnage a r´eussi. Nous savons d’apr`es le
lemme 6.2 que cela se produit avec forte probabilit´e. En d´emontrant que l’algo-
rithme glouton calcule des chemins de longueur polylogarithmique en esp´erance,
nous montrons que le graphe augment´e est bien un petit monde navigable. Nous
commenc¸ons par minorer, dans le lemme suivant, la probabilit´e qu’un noeud v
soit le contact longue-distance, L(u), d’un noeud donn´e u, en fonction de leur
distance mutuelle δ(u, v) dans le graphe d’origine.
Lemme 6.3 Pour tout v 6= u dans V tels que δ(u, v) > 2c log n,

Pr{L(u) = v} >

1

1

c2 log D

bu(δ(u, v))

.

Preuve. Puisque d(u, v) > 2c log n, soit i ∈ {k0, . . . ,dlog De} tel que 2i 6
d(u, v) < 2i+1. Notons leader(u, i) le leader de niveau i de u. On remarquera que
δ(v, leader(u, i)) < 3·2i par l’in´egalit´e triangulaire. La probabilit´e que L(u) = v
est ainsi sup´erieure `a la probabilit´e que u ait choisi le niveau i et que v ait ensuite
´et´e choisi uniform´ement parmi les noeuds de Bleader(u,i)(3 · 2i). Le niveau i est
choisi avec probabilit´e au moins 1/ log D. Par d´eﬁnition du leader de niveau i, on
a δ(u, leader(u, i)) 6 2i, on obtient :

bleader(u,i)(3 · 2i) 6 bu(4 · 2i) 6 bu(4δ(u, v)).

Or, par la croissance mod´er´ee, bu(4δ(u, v)) 6 c2bu(δ(u, v)), le r´esultat en
d´ecoule. (cid:3)

142

Chapitre 6 : Petit-mondisation distribu´ee

Th´eor`eme 6.4 (Petit-mondisation distribu´ee)
Dans tout r´eseau de croissance born´ee, augment´e par l’algorithme PETIT-
MONDISATION DISTRIBU ´EE, l’algorithme de routage glouton calcule un chemin
de longueur O (log D log m + log n) en esp´erance, entre toute paire de noeuds `a
distance mutuelle m dans le r´eseau de d´epart.

Preuve. Soient s et t la source et la cible du routage, `a distance mutuelle m. On
divise l’ex´ecution de l’algorithme glouton en dlog me phases : l’algorithme est
en phase j, 1 6 j 6 dlog me, tant que la distance courante `a la destination t
appartient `a (2j−1, 2j].
Supposons que l’algorithme est en phase j et que u est le porteur courant du
message. Supposons j > k0 + 2, tout noeud v de Bt(2j−2) est `a distance au moins
2j−2 > 2c log n de u. D’apr`es le lemme 6.3, tout noeud v dans Bt(2j−2) est le
contact longue-distance de u avec probabilit´e au moins 1/(c2 log D·bu(δ(u, v))) ;
de plus δ(u, v) 6 5 · 2j−2. Ainsi, le contact longue-distance de u appartient `a
Bt(2j−2) avec probabilit´e sup´erieure `a :

1

c2 log D

bt(2j−2)
bu(5 · 2j−2)

,

Par inclusion, bu(5·2j−2) 6 bt(10·2j−2) et par croissance mod´er´ee, bt(10·2j−2) 6
c4bt(2j−2). La probabilit´e de sortir de la phase j est donc sup´erieure `a 1/(c6 log D)
`a chaque pas de cette phase. L’esp´erance du nombre de pas dans chaque phase
j > k0 + 2 est donc O(log D). D`es que j < k0 + 2, on borne simplement
l’esp´erance du nombre de pas restant par 2k0+1 = O(log n). Finalement, en
sommant sur les dlog me phases, on obtient une longueur de chemin totale de
O(log D log m + log n) en esp´erance. (cid:3)

6.4

Impl´ementations
mances

d´ecentralis´ees

et

perfor-

Les seules ´etapes de l’algorithme PETIT-MONDISATION DISTRIBU ´EE qui
n´ecessitent une impl´ementation distribu´ee non triviale sont l’´etape d’exploration
de LEADER et la g´en´eration al´eatoire des contacts longue-distance. Pour l’´etape
d’exploration du leader, nous d´eﬁnissons comment enregistrer les explorations
successives sur des rayons croissants `a l’aide d’arbres de plus courts chemins. La
g´en´eration des contacts longue-distance consiste `a router chaque requˆete au lea-
der appropri´e, `a choisir un noeud al´eatoire dans la boule du leader et `a renvoyer
le contact au noeud demandeur.

6.4 : Impl´ementations d´ecentralis´ees et performances

143

6.4.1 L’´etape d’exploration de LEADER

Cette proc´edure explore des boules de plus en plus grandes autour de chaque
noeud. Chaque appel de LEADER(u, i) lance les explorations successives des
boules Bu(2k0), . . . ,Bu(2i), de rayon croissant. Si u survit `a tous les tests pro-
babilistes, il explore la boule Bu(3· 2i) qui sera utilis´ee, par la suite, pour le tirage
des contacts longue-distance.

Les boules sont explor´ees selon un parcours en profondeur. Pour simpliﬁer
la transmission des messages `a l’int´erieur de chaque boule explor´ee, on construit
un arbre des plus courts chemins Tu,i au cours de l’exploration. On maintient
la structure d’arbre en stockant, en chaque noeud, sa m`ere et ses ﬁlles (les cas
d’´egalit´e sont rompus arbitrairement). Si u meurt au ki`eme test probabiliste, Tu,i
couvre la boule Bu(2k). Si u survit `a tous les tests probabilistes, il informe tous
les noeuds de Bu(2i), en utilisant la structure d’arbre Tu,i, qu’il est leur leader
de niveau i. Tu,i couvre alors la boule Bu(3 · 2i) et u demande `a chacune de
ses ﬁlles de calculer et d’enregistrer r´ecursivement les tailles de leurs sous-arbres
dans Tu,i. Ces tailles de sous-arbre seront utilis´ees par la suite pour tirer un noeud
uniform´ement dans la boule Bu(3 · 2i) sur demande.

Le lemme suivant pr´ecise l’analyse de notre ´echantillon en montrant que
l’ensemble des leaders n’est pas trop dense. Cela sera utile pour l’analyse des
impl´ementations.

Lemme 6.5 Avec forte probabilit´e, tout noeud u appartient `a O(log n log D)
arbres T ∈ {Tv,i}v∈V,i6dlog De.
Preuve. Soit u ∈ V et k > k0. Pour tout noeud v et j > k, la probabilit´e que v
explore au moins jusqu’au rayon 2k, durant la phase de s´election des leaders de
niveau i, est 2c log n/bv(2k). Soit Xv,j la variable al´eatoire ´egale `a 1 si v explore
un rayon au moins 2k durant la s´election des leaders de niveau i et 0 sinon. On a :
E[Xv,j] = 2c log n/bv(2k), si j > k et E[Xv,j] = 0 sinon.
`a tous les arbres enracin´es en un sommet v
de Bu(2k) qui ont explor´e jusqu’au rayon 2k. Pour tous les noeuds v de
Bu(2k), on a bv(2k) 6 bu(2k+1) 6 c bu(2k) par la croissance mod´er´ee. De plus,
bv(2k) > bv(2k+1)/c par la croissance mod´er´ee. Ainsi, pour tous les noeuds v de
Bu(2k),

Le noeud u appartient

Soit X = P

,
j Xv,j] ∈ [2 log n, 2c2 log n log D] par
lin´earit´e de l’esp´erance. Puisque les variables Xv,j sont ind´ependantes, on peut
utiliser une borne de Chernoff (voir par exemple [HMRe98]) pour majorer la pro-

v∈Bu(2k)

.

(cid:20)2 log n
j Xv,j, on a E[P
P

E[Xv,j] ∈

bu(2k)

(cid:21)

2c2 log n
bu(2k)

144

Chapitre 6 : Petit-mondisation distribu´ee

babilit´e que leur somme soit sup´erieure `a 4E[X] :

(cid:20)1

e

(cid:21)E[X] 6 1

Pr{X > 4E[X]} 6

(e/4)4

6 1
n2 .

e2 log n

Ainsi, avec probabilit´e sup´erieure `a 1−1/n2, il y a moins de O(log n log D) arbres
T enracin´es en Bu(2k) qui traversent u. On remarquera que l’on peut conduire le
mˆeme argument `a toutes les ´echelles k 6 log D. Par la borne de l’union, la proba-
bilit´e qu’il existe k tel qu’il y ait plus de log n arbres de profondeur sup´erieur ou
´egale `a 2k, enracin´es en Bu(2k), est inf´erieure `a log D/n2. Ainsi, avec probabilit´e
sup´erieure `a 1 − log D/n2, il y a moins de O(log n log D) arbres qui traversent u.
En appliquant une nouvelle fois la borne de l’union, on obtient que cette propri´et´e
est vraie pour tous les noeuds u ∈ V avec probabilit´e sup´erieure `a 1 − log D/n.
(cid:3)

Proposition 6.6 La
de
MONDISATION DISTRIBU ´EE (algorithme 5) requiert :

d’´echantillonnage

phase

l’algorithme

PETIT-

– O(D) rondes,
– l’´echange de O(n∆ log n(log D)2) messages au total en esp´erance, et de
O(∆ log n log D) messages par ronde et par noeud avec forte probabilit´e,
– une m´emoire de taille O(∆ log n log D) dans chaque noeud avec forte pro-

babilit´e.

Preuve. Le nombre de rondes n´ecessaires pour ex´ecuter LEADER(u, i) est au plus
6·2i +1 dans le cas o`u les tirages al´eatoires ont r´eussi jusqu’au rayon 3·2i, puisque
les messages doivent descendre dans les feuilles selon ce rayon, puis ˆetre renvoy´es
`a la racine. Un noeud u donn´e ex´ecute LEADER(u, i) pour i de k0 `a dlog De, ce qui
n´ecessite donc au plus O(D) rondes. Comme les ex´ecutions se font en parall`ele,
le nombre total de rondes est O(D).

Pendant l’ex´ecution de LEADER(u, i), chaque noeud interne de l’arbre d’ex-
ploration envoie au plus ∆ messages, au plus 3 fois. Avec probabilit´e inf´erieure `a
1/bu(2k), l’arbre d’exploration se termine au rayon 2k et contient bu(2k) noeuds,
ce qui induit O(∆bu(2k)) messages. L’esp´erance du nombre de message envoy´es
par u pour le niveau i est donc O(i∆) et donc O(∆(log D)2) au total pour u,
pour tous les niveaux. Par lin´earit´e de l’esp´erance, l’esp´erance du nombre total
de messages est O(n∆(log D)2). Par ailleurs, durant une ronde, chaque noeud v
envoie au plus ∆ messages par arbre T dans {Tu,i}u∈V,i6dlog De qui le traverse.
D’apr`es le lemme 6.5, chaque noeud est travers´e par au plus O(log n log D) tels
arbres avec forte probabilit´e, le nombre de messages par ronde et par noeud est
donc O(∆ log n log D) avec forte probabilit´e.

Enﬁn, un noeud u doit m´emoriser sufﬁsamment d’information pour permettre
l’ex´ecution d’un parcours en profondeur pour chaque arbre qui le traverse durant

6.4 : Impl´ementations d´ecentralis´ees et performances

145

l’ex´ecution de LEADER(v, i) sur tous les noeuds v et tous les niveaux i. Cela
n´ecessite une m´emoire de taille O(∆) pour chaque arbre. D’apr`es le lemme 6.5,
tout noeud est travers´e par au plus O(log n log D) arbres avec forte probabilit´e, le
r´esultat en d´ecoule. (cid:3)

6.4.2 L’´etape des requˆetes de contact longue-distance

Durant cette ´etape, chaque noeud u choisit i ∈ {k0, . . . ,dlog De} de fac¸on
al´eatoire uniforme et fait une requˆete de contact longue-distance `a son leader de
niveau i. Nous proposons deux impl´ementations pour cette ´etape, en fonction de
la taille m´emoire disponible en chaque noeud.

Sch´ema (a) : minimisation du nombre de messages. Dans cette premi`ere
impl´ementation, nous cherchons `a minimiser le nombre total de messages qui
transitent dans le r´eseau, en supposant que les noeuds disposent d’une m´emoire
importante, de taille O(n). Les requˆetes envoy´ees `a chaque leader u de niveau i
sont rout´ees de fac¸on synchrone depuis les feuilles de Tu,i vers u, le long de Tu,i.
Chaque noeud interne de l’arbre agr`ege les requˆetes qu’il rec¸oit de ses ﬁlles en un
unique message, puis le retransmet `a sa m`ere accompagn´e de sa propre requˆete
(´eventuelle). Soit x le nombre de requˆetes pour u dans tout le r´eseau, en tant que
leader de niveau i. Une fois que u a rec¸u toutes ses requˆetes (apr`es 2i rondes),
u choisi x entiers q1, . . . , qx al´eatoires dans {1, . . . , bu(3 · 2i)} de fac¸on uniforme
et lance les recherches en ordre pr´eﬁxe dans Tu,i des q1-`eme, . . . , qx-`eme noeuds
v1, . . . , vx (en utilisant les tailles des sous-arbres enregistr´ees en chaque noeud).
Les contacts longue-distance v1, . . . , vx sont alors renvoy´es au leader u (en uti-
lisant le mˆeme sch´ema d’agr´egation de messages qu’avant), puis renvoy´es `a leur
destination : le noeud qui en a fait la requˆete (en utilisant l’oracle, ou simplement
le num´ero de la destination dans l’ordre pr´eﬁxe de Tu,i, comme avant).

Proposition 6.7 Le sch´ema (a) requiert :

– O(D) rondes,
– O(log n log D) messages par noeud et par ronde avec forte probabilit´e, et

un nombre total de messages O(n log n log D) en esp´erance,

– une m´emoire de taille O(n) en chaque noeud.

Preuve. Dans ce sch´ema, les leaders de niveau log D peuvent avoir jusqu’`a n
requˆetes `a enregistrer, dans le pire cas o`u tous les noeuds ont choisi ce niveau.
Cela n´ecessite donc une taille m´emoire disponible lin´eaire.

Le nombre de rondes n´ecessaires `a l’ex´ecution de l’´etape des requˆetes de
contacts longue-distance est au plus quatre fois le nombre de rondes n´ecessaires
pour ex´ecuter le plus grand parcours en profondeur, c’est-`a-dire O(D).

146

Chapitre 6 : Petit-mondisation distribu´ee

Concernant le nombre de messages, chaque arbre Tu,i enracin´e en un leader
u de niveau i g´en`ere au plus 4bu(2i) messages. Pour ´evaluer le nombre total de
messages g´en´er´es, on peut consid´erer que chaque leader u de niveau i induit au
plus 4bu(2i) messages et que les autres noeuds n’en induisent pas. L’esp´erance du
nombre total de messages g´en´er´es durant l’ex´ecution est donc inf´erieur `a :

X

log DX

4bu(2i) Pr{u ∈ Si} = O(n log n log D).

u∈V

i=k0+2

Par ailleurs, chaque noeud v envoie O(1) messages par ronde pour chaque arbre
dans {Tv,i}v∈V,i6dlog De auquel il appartient. D’apr`es le lemme 6.5, v appartient `a
au plus O(log n log D) tels arbres avec forte probabilit´e. Le nombre de messages
par noeud et par ronde est donc O(log n log D) avec forte probabilit´e. (cid:3)

Sch´ema (b) : taille m´emoire polylogarithmique. Dans le sch´ema pr´ec´edent, les
leaders de haut niveau sont les goulots d’´etranglement du r´eseau et n´ecessitent une
taille m´emoire disponible qui peut n’ˆetre pas r´ealiste pour de nombreuses appli-
cations. Nous allons `a pr´esent d´ecrire un sch´ema qui ne requiert qu’une m´emoire
polylogarithmique en n. On remarquera tout d’abord qu’on ne peut pas parvenir
`a une m´emoire polylogarithmique en chaque noeud si le nombre de rondes est
o(n). En effet, si l’on suppose que le sch´ema s’ex´ecute en R rondes, mˆeme si
les requˆetes aux leaders sont soigneusement ordonnanc´ees, il existe au moins une
ronde durant laquelle un leader du niveau maximal rec¸oit n/R requˆetes provenant
de n/R noeuds. Pour parvenir `a une m´emoire de taille O(loga n) en chaque noeud,
pour une constante a > 0, R doit donc ˆetre de l’ordre de Ω(n/ loga n). Nous
pr´esentons ici une nouvelle impl´ementation de l’´etape des requˆetes de contacts
longue-distance qui permet d’effectuer la petit-mondisation en O(n) rondes avec
une m´emoire polylogarithmique pour tous les noeuds, avec forte probabilit´e.

Nous montrons qu’il est possible d’ordonnancer les requˆetes de contacts
longue-distance `a l’int´erieur d’un arbre enracin´e en un leader de fac¸on `a ce que
le leader ne rec¸oive qu’une nouvelle requˆete par ronde. Pour cela, chaque leader
u de niveau i cr´ee un jeton OKu,i qui traverse la boule Bu(2i) le long de l’arbre
Tu,i, c’est-`a-dire qu’`a chaque ronde, le jeton passe au noeud suivant dans l’ordre
pr´eﬁxe. `A chaque fois qu’un noeud v rec¸oit le jeton, il envoie requˆete (´eventuelle)
de contact longue-distance pour u `a sa m`ere dans Tu,i. Par ailleurs, tout noeud
qui rec¸oit une requˆete de contact longue-distance pour u la retransmet `a sa m`ere
dans Tu,i. Cet ordonnancement est illustr´e sur la ﬁgure 6.4.2. `A chaque fois que u
rec¸oit une requˆete de contact longue-distance, il choisit un entier al´eatoire q dans
{1, . . . , bu(3 · 2i)} de fac¸on uniforme, puis lance une recherche pr´eﬁxe du noeud
vq correspondant au nombre q dans Bu(3 · 2i), le long de Tu,i. Le noeud vq en-
registre tous les identiﬁants des noeuds demandeurs, c’est-`a-dire, les noeuds qui

6.4 : Impl´ementations d´ecentralis´ees et performances

147

FIG. 6.1 : Illustration de l’ordonnancement des requˆetes vers un leader.

l’ont demand´e comme contact longue-distance. Lorsque le jeton OKu,i est revenu
`a u, u cr´ee un nouveau jeton GOu,i qui traverse Bu(3 · 2i) dans l’ordre pr´eﬁxe
le long de Tu,i. `A chaque fois qu’un noeud v rec¸oit ce nouveau jeton, il renvoie
son identiﬁant `a tous ses noeuds demandeurs, un par un `a chaque ronde, jusqu’`a
ce qu’il n’y en ait plus. Il passe ensuite le jeton au prochain noeud dans l’ordre
pr´eﬁxe.
Cet algorithme garantit que, dans Tu,i, le nombre de messages envoy´es simul-
tan´ement par un noeud est major´e par une constante. D’apr`es le lemme 6.5, aucun
noeud n’appartient `a plus de O(log n log D) tels arbres, avec forte probabilit´e. La
m´emoire disponible permet aux noeuds de stocker ces O(log n log D) messages.
Le lemme suivant garantit que le nombre d’identiﬁants de noeuds demandeurs
enregistr´es dans un noeud est au plus O(log n) et tient donc dans la m´emoire
de taille polylogarithmique que nous nous sommes ﬁx´ee. Il s’agit en fait d’un
r´esultat classique de probabilit´es sur les tirages dans les urnes, puisque le choix
de k contacts longue-distance par k noeuds demandeurs est ´equivalent `a k tirages
al´eatoires uniformes ind´ependants dans un mˆeme ensemble.

Lemme 6.8 Tout noeud v a au plus 8c2 log n noeuds demandeurs, avec forte pro-
babilit´e.

Preuve. Consid´erons un noeud v. Soit Xdem(v) la variable al´eatoire du nombre
de noeuds demandeurs de v dans tout le r´eseau. Le nombre total de demandeurs

LeaderREQREQREQREQJetonRequête148

Chapitre 6 : Petit-mondisation distribu´ee

est la somme des demandeurs de v sur chaque arbre Tu,i tel que δ(u, v) 6 3 ·
2i et u est un leader de niveau i. Nous allons manipuler une variable al´eatoire
dem(v) qui domine stochastiquement Xdem(v). On se place dans un cadre virtuel
X ?
o`u, pour chaque noeud u et chaque niveau i, tous les noeuds w de Bu(2i) tirent
deux nombres al´eatoirement uniform´ement : l’un entre k0 + 2 et dlog De et l’autre
entre 1 et bu(3·2i). Pour un noeud u et un niveau i, on note, pour tout w ∈ Bu(2i),
1u,i,w la variable al´eatoire indicatrice qui vaut 1 si u est un leader de niveau i et w
a tir´e le couple de nombres (i, vu,i), o`u vu,i est le num´ero de v dans l’ordre pr´eﬁxe
dans Bu(3 · 2i) (par exemple). Alors, la variable al´eatoire X ?

dem(v) d´eﬁnie par :

dlog DeX

X

X

1u,i,w,

X ?

dem(v) =

i=k0+2

u∈Bv(3·2i)

w∈Bu(2i)

domine stochastiquement Xdem(v). En effet, dans le cadre r´eel, un noeud ne tire
un contact que pour un seul leader, alors que dans ce cadre virtuel, en faisant tirer
une paire de nombres par tous les noeuds associ´es `a un leader, on augmente leur
probabilit´e de tirer le num´ero vu,i, qui correspond au tirage uniforme du noeud v.
On remarquera que :

Pr{1u,i,w = 1} =

2c log n
bu(2i)

1

dlog De − k0 − 1

1

bu(3 · 2i)

.

Par ailleurs, pour tout u ∈ Bv(3 · 2i), bv(6 · 2i)/c 6 bu(3 · 2i) 6 bv(6 · 2i), par
inclusion et croissance mod´er´ee. Par cons´equent, par lin´earit´e de l’esp´erance,

2c log n

bv(3 · 2i)
bv(6 · 2i)

6 E[X ?

dem(v)] 6 2c2 log n

bv(3 · 2i)
bv(6 · 2i)

,

dem(v)] ∈ [2 log n, 2c2 log n], en utilisant la croissance mod´er´ee.
c’est-`a-dire : E[X ?
Comme les variables indicatrices sont born´ees et ind´ependantes, nous pouvons
utiliser une borne de Chernoff :

Pr{X ?

dem(v) > 4E[X ?

dem(v)]} 6 [

1
e

(e/4)4]

E[X ?

dem(v)] 6 1

e2 log n

6 1
n2 .

Ainsi le noeud v doit enregistrer moins de 8c2 log n noeuds demandeurs avec
une probabilit´e sup´erieure `a 1− 1/n2, puisque X ?
dem(v) domine stochastiquement
Xdem(v). Par la borne de l’union sur tous les noeuds v, chaque noeud doit enre-
gistrer au plus 8c2 log n demandeurs avec forte probabilit´e (sup´erieure `a 1− 1/n).
(cid:3)

Le lemme suivant borne le nombre de messages retransmis par un noeud lors

d’une ronde.

6.4 : Impl´ementations d´ecentralis´ees et performances

149

Lemme 6.9 Soit u un leader de niveau i. Pour toute ronde du sch´ema (b), chaque
noeud v ∈ Tu,i envoie ou rec¸oit au plus 3 messages dans Tu,i.
Preuve. La transmission des messages est organis´ee par les jetons OKu,i et GOu,i
qui sont situ´es sur un noeud, au plus, par ronde. La r´eception du jeton OKu,i
indique que le noeud courant est autoris´e `a envoyer ou recevoir sa requˆete vers u
lors des prochaines rondes.
Soient v et w deux noeuds de Tu,i et supposons que w rec¸oit le jeton OKu,i
avant v. Si w est un ancˆetre de v dans Tu,i, w sera autoris´e `a envoyer sa requˆete
avant v et les deux requˆetes ne peuvent donc pas se trouver dans le mˆeme noeud.
Lorsque le jeton OKu,i quitte un noeud z, le jeton OKu,i visite le sous-arbre de Tu,i
enracin´e en z. Les requˆetes retransmises par z ne peuvent donc pas se superposer
aux requˆetes suivantes.

Tant que le jeton OKu,i n’est pas revenu `a u, l’´etape de requˆete de contact
longue-distance d’un noeud w peut ˆetre d´ecompos´ee en deux ´etapes : (1) le rou-
tage vers le leader u et (2) le routage de u vers un noeud al´eatoire vx. Comme u
rec¸oit au plus une requˆete par ronde et comme le routage peut se faire suivant les
plus courts chemins, chaque noeud de Tu,i rec¸oit au plus une requˆete de sa m`ere
par ronde. Finalement, chaque noeud de Tu,i rec¸oit ou envoie au plus 3 messages
par ronde. On peut conduire la mˆeme analyse pour le retour du contact longue-
distance vers son demandeur, organis´e par le jeton GOu,i. (cid:3)

Proposition 6.10 Le sch´ema (b) requiert :

– au plus 4n rondes,
– O(log n log D) messages par noeud et par ronde avec forte probabilit´e, et

un nombre total de messages O(nD log n) en esp´erance,

– une m´emoire de taille O(∆ log n log D) en chaque noeud avec forte proba-

bilit´e.

Preuve. Le nombre de rondes n´ecessaires pour ex´ecuter le sch´ema (b) est la
dur´ee de l’ordonnancement des requˆetes, organis´e par les jetons. Cet ordonnan-
cement est bas´e sur un parcours en profondeur. Pour chaque arbre Tu,i, la tra-
vers´ee du jeton est ex´ecut´ee en bu(2i) rondes. La premi`ere phase de l’´etape des
requˆetes de contacts longue-distance est donc ex´ecut´ee en bu(2i) + 2i 6 2bu(2i)
rondes. Pour la seconde phase (remont´ee des contacts), nous devons ajouter un
d´elai suppl´ementaire dˆu au nombre de noeuds de Tu,i qui ont choisi u comme
leader pour leur requˆete. Cette phase est ex´ecut´ee en au plus 2bu(3 · 2i) rondes.
L’ordonnancement est donc achev´e en 2bu(2i) + 2bu(3· 2i) 6 4n rondes pour tout
leader u de tout niveau i.
D’apr`es le lemme 6.9, chaque noeud v envoie ou rec¸oit au plus 3 par
ronde pour chaque arbre {Tu,i}u∈V,ı6dlog De auquel il appartient. Or, d’apr`es le

150

Chapitre 6 : Petit-mondisation distribu´ee

lemme 6.5, v appartient `a au plus O(log n log D) tels arbres avec forte pro-
babilit´e. On en d´eduit que le nombre de messages par noeud et par ronde est
O(log n log D).
Nous nous int´eressons `a pr´esent au nombre de messages engendr´es dans un
arbre Tu,i. Comme chaque jeton fait un parcours en profondeur, il y a au plus
2bu(3·2i) messages d´edi´es aux jetons. Le nombre de requˆetes provenant de Tu(2i)
qui sont envoy´ees au leader u est au plus bu(2i). Chaque requˆete engendre au plus
4 · 3 · 2i messages. Pour compter le nombre total de messages, on peut consid´erer
que chaque leader de niveau i induit au plus O(2ibu(2i)) messages et que les
autre noeuds n’en induisent pas. Soit v ∈ V . La probabilit´e que v soit un leader
de niveau i est 2c log n/bv(2i), l’esp´erance du nombre de messages induits par v
est donc :

dlog DeX

O(2i log n)) = O(D log n).

i=k0+2

Par lin´earit´e de l’esp´erance, l’esp´erance du nombre total de messages engendr´es
par le sch´ema (b) est donc O(nD log n).

Concernant la m´emoire, d’apr`es le lemme 6.5, chaque noeud requiert une
taille m´emoire O(∆ log n log D) avec forte probabilit´e pour stocker ses m`eres
et ses ﬁlles pour tous les arbres qui le traversent. d’apr`es le lemme 6.8, la
m´emoire n´ecessaire pour stocker les identiﬁants des noeuds demandeurs est au
plus 8c2 log n avec forte probabilit´e, le r´esultat en d´ecoule. (cid:3)

6.4.3 Performances

Nous pouvons `a pr´esent donner les performances globales de l’algorithme
PETIT-MONDISATION DISTRIBU ´EE en fonction de l’impl´ementation choisie pour
l’´etape des requˆetes de contacts longue-distance. Il sufﬁt pour cela de combiner
les r´esultats des propri´et´es 6.6, 6.7 et 6.10.

Th´eor`eme 6.11
Tout r´eseau synchrone de n noeuds, `a croissance born´ee, de diam`etre D et de
degr´e maximum ∆ peut ˆetre petit-mondis´e de fac¸on distribu´ee, via l’ajout d’un
lien par noeud,

– en O(n) rondes, avec une taille m´emoire O(∆ log n log D) en chaque noeud
avec forte probabilit´e, O(∆ log n log D) messages par noeud et par ronde
avec forte probabilit´e, et un nombre total de messages O(nD log n) en
esp´erance ;

– ou en O(D) rondes, avec une taille m´emoire O(n), O(∆ log n log D) mes-
sages par noeud et par ronde avec forte probabilit´e, et un nombre total de
messages O(n log n log D) en esp´erance.

6.5 : Conclusion et perspectives

151

6.5 Conclusion et perspectives

Dans ce chapitre, nous avons pr´esent´e le premier sch´ema distribu´e, `a notre
connaissance, pour petit-mondiser une grande classe de graphes. Ce sch´ema est
un premier pas vers la compr´ehension de l’´emergence de l’effet petit monde via un
processus d’ajout de raccourcis, propre `a chaque noeud. On peut toutefois penser
que la requˆete `a un leader pour choisir une nouvelle connaissance n’est pas r´ealiste
dans le cadre des r´eseaux sociaux. Une perspective int´eressante serait de parvenir
`a r´epartir des contacts longue-distance sur toutes les ´echelles de distance sans
utiliser de leader de haut niveau.

Notre sch´ema d´ecentralis´e s’applique en premier lieu dans le cadre d’un grand
r´eseau informatique d´ecentralis´e. Il serait int´eressant d’´etendre notre sch´ema `a un
r´eseau dynamique, o`u l’on autorise l’ajout et le retrait de noeuds dans le temps,
comme c’est le cas pour les r´eseaux pair-`a-pair. On peut penser que tant que la
propri´et´e de croissance mod´er´ee est respect´ee par l’ajout et le retrait de noeuds,
les mises `a jour peuvent se faire localement. Lorsqu’un noeud disparaˆıt, les liens
longue-distance dont il ´etait l’extr´emit´e pourraient ˆetre re-dirig´es vers un voisin,
qui reprendrait ´egalement son statut de leader ´eventuel. Lorsqu’un nouveau noeud
est ins´er´e, il pourrait tirer son contact longue-distance `a l’aide des leaders exis-
tants. Lorsque le nombre de noeuds ins´er´es et retir´es devient trop important, une
nouvelle s´election des leaders serait sans doute n´ecessaire.

Enﬁn, par la r´epartition des contacts longue-distance sur toutes les ´echelles de
distance, le r´eseau petit-mondis´e doit pr´esenter une bonne tol´erance aux pannes
qu’il serait int´eressant d’analyser.

Conclusion g´en´erale

Au terme de ce manuscrit, nous avons pu isoler plusieurs composantes de l’ef-
fet petit monde. Ce sujet de recherche a ´et´e l’objet de nombreux travaux pendant
la dur´ee de cette th`ese et nos r´esultats ont particip´e `a la meilleure compr´ehension
que nous avons, aujourd’hui, de ce ph´enom`ene.

Notre ´etude de l’aspect dynamique de l’effet petit monde nous a conduit
`a construire un nouvel algorithme de routage d´ecentralis´e, qui respecte les ca-
ract´eristiques de la navigabilit´e dans les petits mondes, tout en calculant, dans le
mod`ele de Kleinberg, des chemins de longueur asymptotiquement plus courte que
les autres algorithmes existants, `a notre connaissance. Ce r´esultat a permis de don-
ner une nouvelle majoration O(log n(log log n)2) du diam`etre apparent du mod`ele,
c’est-`a-dire de l’esp´erance de la longueur du plus long des plus courts chemins cal-
culables par un algorithme d´ecentralis´e, la majoration pr´ec´edente ´etant O(log2 n).
Nous savons aujourd’hui que le diam`etre du mod`ele est Θ(log n) [MN04], mais la
question du diam`etre apparent reste ouverte. Ce r´esultat a ´egalement contribu´e `a
la r´eﬂexion sur le type d’algorithmes de routage utilis´es dans les r´eseaux r´eels
o`u l’on observe l’effet petit monde, comme les r´eseaux sociaux. Notre algo-
rithme explore en effet les liens d’un voisinage sur une faible profondeur, ce
qui semble une mod´elisation des comportements humains plus raisonnable qu’un
simple algorithme glouton, dans le cadre d’une transmission de message analogue
`a l’exp´erience de Milgram. Enﬁn, dans le cadre du routage dans les nouveaux
grands r´eseaux informatiques d´ecentralis´es, comme les r´eseaux pair-`a-pair, notre
algorithme peut trouver une application pratique puisque qu’il calcule des che-
mins bien plus courts, ce qui est tr`es utile lorsque la taille des ﬁchiers `a transf´erer
est importante.

Nous avons ensuite ´etendu notre ´etude de l’aspect dynamique de l’effet petit
monde en comparant la charge induite par les deux types d’algorithmes les plus
´etudi´es r´ecemment sur ce mod`ele sur le r´eseau de Kleinberg : l’algorithme glou-
ton et un algorithme explorant un voisinage local. Cette ´etude a mis en valeur une
charge nettement diff´erenci´ee sur les liens les plus longs du r´eseau. Du point de
vue du routage dans les r´eseaux informatique, cette ´etude a montr´e qu’une explo-
ration d’un voisinage de liens locaux risque de provoquer une surcharge du r´eseau

154

Conclusion g´en´erale

au niveau des liens les plus longs et du graphe sous-jacent. Il serait int´eressant
d’´etudier la charge induite par notre algorithme de routage, plus difﬁcile `a analy-
ser, qui n’explore pas seulement les liens locaux et att´enuerait a priori cet effet.
Cette ´etude montre ´egalement qu’il est possible de discriminer les deux types d’al-
gorithmes ´etudi´es via l’observation de la charge sur les liens du r´eseau. Dans la
perspective de d´eterminer le type d’algorithme utilis´e en pratique dans les r´eseaux
d’interactions r´eels, cette m´ethode pourrait apporter de nouvelles informations via
l’observation de donn´ees statistiques sur un ensemble de connexions.

L’´etude des caract´eristiques structurelles du seul mod`ele de petit monde na-
vigable existant au d´ebut de cette th`ese, celui de Kleinberg, nous a permis de
g´en´eraliser son principe en un processus d’augmentation al´eatoire d’une grande
classe de graphes en petits mondes. Nous avons pr´esent´e deux m´ethodes d’aug-
mentation : la premi`ere distribue les liens en fonction de la taille des boules du
graphe, la seconde les distribue en fonction d’un plongement existant du graphe
sur un espace euclidien de faible dimension. Combin´e `a d’autres processus d’aug-
mentation pour d’autres classes de graphes qui ont ´et´e d´ecouverts simultan´ement,
cela am`ene `a penser que la propri´et´e de navigabilit´e tient moins `a une structure tr`es
sp´eciﬁque, qu’`a l’existence d’un ensemble de raccourcis bien r´epartis par rapport
`a la m´etrique sous-jacente. Ce point contient une question ouverte essentielle qui
est l’existence d’un processus d’augmentation de tout graphe en un petit monde.
Nous suspectons une r´eponse positive `a cette question. Par ailleurs, nous avons
mis en lumi`ere l’absence de corr´elation directe entre la distribution des degr´es et
la propri´et´e de petit monde navigable, puisque notre mod`ele permet d’engendrer
une distribution de degr´es quasi arbitraire.

Ces premi`eres conclusions sur l’analyse structurelle du mod`ele laissent penser
que l’´emergence de l’effet petit monde proviendrait d’un processus sp´eciﬁque
de construction de raccourcis. Partant de cette observation, nous avons exhib´e
un sch´ema enti`erement distribu´e qui permet d’augmenter une grande classe de
graphes en petits mondes navigables, via l’ajout d’un lien par noeud. Ce r´esultat
est une avanc´ee vers la d´eﬁnition d’un processus d’augmentation naturel et
local en chaque noeud qui produirait l’effet petit monde. Il porte en outre des
perspectives d’applications pour les grands r´eseaux informatiques d´ecentralis´es,
en permettant de r´eduire le diam`etre apparent pour un coˆut r´eduit. Ce sch´ema est
cependant peu r´ealiste sous sa forme actuelle dans le cadre d’un r´eseau social.

La propri´et´e de petit monde est aujourd’hui sufﬁsamment comprise pour que
l’on puisse tirer parti de sa reproduction sur des r´eseaux construits, comme les
r´eseaux informatiques, `a l’aide des mod`eles et des algorithmes d´ecentralis´es exis-
tants. Toutefois, l’´emergence de cette propri´et´e dans les r´eseaux r´eels est encore
largement inconnue. La question de l’existence d’un processus universel qui trans-
formerait tout graphe en un petit monde navigable est une question ouverte fon-

Conclusion g´en´erale

155

damentale pour la compr´ehension du ph´enom`ene. Si la r´eponse est positive, elle
porte la question de la construction dynamique des liens dans les r´eseaux r´eels,
qui font ´emerger l’effet petit monde : comment voit-on apparaˆıtre des raccourcis
bien r´epartis sur les distances de d´epart, par exemple dans un r´eseau social ? Dans
le cas o`u tous les graphes ne seraient pas petit-mondisables, il serait int´eressant
de d´eterminer la classe de graphe maximale qui peut ˆetre transform´ee en petit
monde et de comprendre sa signiﬁcation pour les graphes r´eels. La question de
l’augmentation d’un graphe en un petit monde par l’ajout de raccourcis porte par
ailleurs une perpective de recherche duale : comment peut-on d´ecomposer, dans
un r´eseau r´eel, les liens qui jouent le rˆole de raccourcis (liens longue-distance) des
autre liens ?

Une des richesses de la recherche sur les r´eseaux d’interactions, et en par-
ticulier sur les petits mondes, est qu’elle pose des questions de compr´ehension
de la r´ealit´e, qui posent en retour de nouvelles questions pour l’informatique
th´eorique. Nous avons ainsi vu se d´evelopper parall`element la recherche sur les
algorithmes de routage d´ecentralis´e dans les r´eseaux informatiques et la recherche
sur l’existence de chemins courts dans les r´eseaux sociaux (cf. premi`ere partie).
De mˆeme, c’est la recherche sur la construction de grands r´eseaux informatiques
d´ecentralis´es reproduisant les caract´eristiques petit monde qui a motiv´e les re-
cherches r´ecentes sur les plongements de graphes dans des espaces m´etriques de
faible dimension (cf. deuxi`eme partie). Le croisement des connaissances de ces
domaines de recherche pourra peut-ˆetre permettre de r´epondre aux questions sou-
lev´ees dans cette conclusion.

Table des ﬁgures

1

2

1.1

2.1

2.2

2.3
2.4
2.5

21

1,n.

. . . . . . . . . . . . . .

6
. . . . . . . . . . . . . . . . . . . 13

Exemple de grand r´eseau d’interactions : le r´eseau des pages
web qui contient plusieurs millions de noeuds [BKM+00].
. . .
Mod`ele de Watts et Strogatz
Exemple de r´eseau de Kleinberg K2
Arbre d’exploration de profondeur 3 dans un r´eseau K1
1,n, `a par-
tir du noeud racine 3 et que l’on a dirig´e vers la cible t. En gras
et en pointill´es ﬁgurent les liens longue-distance, les pointill´es
correspondent aux recoupements. . . . . . . . . . . . . . . . . . 31
Exemple d’arbre d’exploration de profondeur 3 avec ses chaˆınes
de liens locaux de longueur 3 attach´ees aux feuilles, dans un
r´eseau K1
32
. . . . . . . . . . . . . . . . . . . . . . .
Extension du chemin π (en gras) `a la ﬁn d’une phase d’exploration. 34
Routage par explorations successives.
. . . . . . . . . . . . . . 35
Les ensembles A, Bh, C et F (noeuds blancs) durant une phase
d’exploration.

1,n.

. .

.

.

.

.

.

.

2.6 Minimiser la probabilit´e de recoupement (lemme 2.5). . . . . . .
2.7
2.8

. . . . . . . . . . . . . . . . . . . . . . . . 35
42
Illustration de la preuve du lemme 2.5 . . . . . . . . . . . . . . 43
Deux exemples de coins (points blancs) des boules centr´ees en
0 dans le tore (2D et 3D). . . . . . . . . . . . . . . . . . . . . .
Γ1, Γ2 et l’action de φ (repr´esent´ee par les ﬂ`eches noires). . . . .
Illustration de la preuve du lemme 2.12.
Illustration de la preuve du lemme 2.13.
R´eseau ~K1,n. .
Illustration de la preuve du lemme 3.3.
Fonctionnement de l’algorithme Eω.
. . . . . . . . . . . . . . .
Variations de g(x, n − 1) en fonction de x pour n = 100.
. . . .
Variations de g(x, n − 1) en fonction de x pour n = 100 en
´echelle semi-logarithmique. . . . . . . . . . . . . . . . . . . . . 75

65
. . . . . . . . . . . . . . 68
70
74

51
53
. . . . . . . . . . . . . 54
. . . . . . . . . . . . . 55

. . . . . . . . . . . . . . . . . . . . . . .

2.9
2.10
2.11

3.1
3.2
3.3
3.4
3.5

.

.

.

.

Table des ﬁgures

76
78

Valeurs de x au minimum de la courbe g(x, n − 1) pour k = 1
et 1 6 n 6 10000 . . . . . . . . . . . . . . . . . . . . . . . . .
loadG(k, ‘) pour n = 50 et k ∈ {1, 3, 4, 5}. . . . . . . . . . . . .
loadG(k, ‘) pour n = 50 et k ∈ {1, 3, 4, 5} en ´echelle semi-
logarithmique. . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
. . . . . . . . . . . . . . . . . . . . 82
Illustration du lemme 3.10.
loadG(‘) et loadEω (‘) pour n = 50 et ω ∈ {7, 9, 12}.
. . . . . . 85
local(m) pour k = 1, ω ∈ {4, 6, 7} et n = 50.
local(1, m) et REω
90
. .
local(m) pour k = 1, ω ∈ {4, 6, 7} et n = 50 en
local(1, m) et REω
´echelle semi-logarithmique. . . . . . . . . . . . . . . . . . . . . 91
LongueurE5(m) et LongueurG(m) pour k = 1 et 1 6 m 6 n =
100.
. . . . . . . . . . . . . . . . . . . . . . . . . . .
LongueurE3(n − 1) et LongueurG(n − 1) pour k = 1 et
n ∈ {1, . . . , 200}.
. . . . . . . . . . . . . . . . . . . . . . . . .
Grille allong´ee (m (cid:29) n).
Illustration de trois types de graphes et de l’ordre de grandeur
de la taille d’une boule de rayon r pour chacun.

. . . . . . . . . . . . . . . . . . . . . 103

. . . . . . . . . 111

93

94

.

.

.

.

.

158

3.6

3.7
3.8

3.9
3.10
3.11 RG
3.12 RG

3.13

3.14

4.1
4.2

5.1

5.2

Illustration de l’inclusion des boules pour
th´eor`eme 5.1.
Exemple de la tapette `a mouches inﬁnie, petit-mondisable, mais
qui n’est pas `a croissance mod´er´ee. . . . . . . . . . . . . . . . . 122

. . . . . . . . . . . . . . . . . . . . . . . . . . . 118

la preuve du

6.1

Illustration de l’ordonnancement des requˆetes vers un leader.

. . 147

Table des Algorithmes

1
2
3
4
5
6

Algorithme de routage glouton . . . . . . . . . . . . . . . . . . . 21
Algorithme de routage selon le parcours en largeur
. . . . . . . . 36
. . . . . . . . .
Algorithme Eω de routage par exploration locale
70
Algorithme de petit-mondisation par plongement
. . . . . . . . . 128
PETIT-MONDISATION DISTRIBU ´EE . . . . . . . . . . . . . . . . 139
. . . . . . . . . . . . . . . . . . . . . . . 140
LEADER(u, i) .

.

.

.

.

Index

Hn, 22
Lj(u), 22
Z∞
d , 106
Zn,d, 50
B(u, r), 23
Kd
k,n, 22
~Kk,n, 64
S(u, r), 23
ˆk, 34
bu(r), 23
su(r), 23

Algorithme de routage, 19

avec exploration, 36
avec exploration locale, 70
d´ecentralis´e, 19
Glouton, 21

Arˆete, 11, 17
Arc, 18

Boule ‘1, 23

Charge d’un lien, 63
Chemin, 18

de routage, 19

Cible, 19
Coefﬁcient de clustering, 7
Coin d’une sph`ere, 51
Composante connexe, 18
Contact, 18
local, 22
longue-distance, 22

Contraction d’un plongement, 127
Cordalit´e, 133

Croissance

born´ee, 114
restreinte, 114

Croissance mod´er´ee, 113

Destination, 19
Diam`etre, 18

apparent, 27

Dimension

de grille born´ee, 114
doublante, 132
intrins`eque, 114

Distance, 18, 19

de Manhattan, 20
sous-jacente, 19

Distorsion d’un plongement, 127
Distribution des degr´es, 7
Domination Stochastique, 46

Expansion d’un plongement, 127
Exp´erience de Milgram, 8
Exploration, 29

Fenˆetre d’exploration, 69

Graphe, 11

`a croissance β-mod´er´ee, 113
`a croissance born´ee, 114
`a croissance restreinte, 114
augment´e, 19
augment´e al´eatoirement, 108
connexe, 18
de base, 108
de Cayley, 120
non orient´e, 17

162

Index

Processus de branchement, 38
Produit cart´esien, 121

R´eseau de Kleinberg, 22

inﬁni, 105
unidimensionnel et unidirec-
tionnel, 64

R´eseau synchrone, 137
Ronde, 137
Routage d´ecentralis´e, 18, 19

Sommet, 11
Source, 19
Sph`ere ‘1, 23

Tapette `a mouches inﬁnie, 122
Taux d’expansion, 137
Taux de liens locaux, 87
Tore r´egulier, 21

Voisin, 18

Zone de s´ecurit´e, 31

orient´e, 18
petit-mondisable, 110
sommet-transitif, 22

Intervalle de noeuds, 65

Largeur arborescente, 133
Latence, 19
Lien, 11

local, 22
longue-distance, 22
valide, 31

Loi de puissance, 7

M´ethode du second moment, 40
M´etrique

de graphe, 108
sous-jacente, 108
Mesure doublante, 132
Mod`ele

d’Albert et Barabasi, 12
d’Erd¨os et R´enyi, 11
de Kleinberg, 13
de Watts et Strogatz, 12

Noeud, 11

Pair-`a-pair, 10
Petit-monde, 10

navigable, 9, 109
Petit-mondisable, 110
Petit-mondisation, 108, 110

croissance

`a

des
graphes
mod´er´ee, 115
distribu´ee, 138
par plongement, 128

Petit-mondiser, 110
Phase d’ex´ecution, 28
Plongement, 127

contraction, 127
distorsion, 127
expansion, 127

Bibliographie

[AB02]

[AA04]

[ABC+05]

L. Adamic and E. Adar. How to search a social network. Tech. report
HP Labs, Palo Alto, 2004.
R. Albert and A.-L. Barab´asi. Statistical mechanics of complex net-
works. Review of modern physics, 74(47–97), 2002.
I. Abraham, Y. Bartal, T-H. H. Chan, K. Dhamdhere, A. Gupta,
J. Kleinberg, O. Neiman, and A. Slivkins. Metric embeddings with
relaxed guarantees. In Proceedings of the 46th Annual IEEE Sympo-
sium on Foundations of Computer Science (FOCS), 2005. To appear.
[ACKM05] D. Achlioptas, A. Clauset, D. Kempe, and C. Moore. On the bias
of traceroute sampling ; or, power-law degree distributions in regular
graphs. In Proceedings of the 37th ACM Symposium on Theory of
Computing (STOC), 2005. To appear.
J. Aspnes, Z. Diamadia, and G. Shah. Fault-tolerant routing in
peer-to-peer systems. In Proceedings of the ACM 21st Symposium
on Principles of Distributed Computing (PODC), volume 31, pages
223–232, 2002.

[ADS02]

[AJB99]

[AGM+04] Ittai Abraham, Cyril Gavoille, Dahlia Malkhi, Noam Nisan, and Mik-
kel Thorup. Compact name-independent routing with minimum
stretch. In 16th Annual ACM Symposium on Parallel Algorithms and
Architecture (SPAA), pages 20–24, 2004.
R. Albert, H. Jeong, and A.-L. Barab´asi. The diameter of the world
wide web. Nature, 401(130–131), 1999.
Ittai Abraham and Dahlia Malkhi. Name independent routing for
growth bounded networks. In 17th Annual ACM Symposium on Pa-
rallel Algorithms and Architecture (SPAA), pages 49–55, jul 2005.
A.-L. Barab´asi and R. Albert. Emergence of scaling in random net-
works. Science, 286(509–512), 1999.
L. Bartholdi.
oai :arXiv.org :math/0201293 (20040622), 2002.

intermediate growth.

Groups of

[AM05]

preprint

[BA99]

[Bar02]

164

Bibliographie

[BFKK01] L. Barri`ere, P. Fraigniaud, E. Kranakis, and D. Krizanc. Efﬁcient
routing in networks with long range contacts. In LNCS Proceedings
of 15th International Symposium on Distributed Computing (DISC
’01), volume 2180, pages 270–284, 2001.

[BKM+00] A. Broder, R. Kumar, F. Maghoul, P. Raghavan, S. Rajagopalan,
R. Stata, A. Tomkins, and J. Wiener. Graph structure in the web.
Computer Networks, 33 :309–320, 2000.

[BLMN03] Y. Bartal, N. Linial, M. Mendel, and A. Naor. On metric ramsey-type

[BM04]

[Bol85]
[Bou85]

phenomena. Annals Maths., 2003. To appear.
P. Bose and P. Morin. Online routing in triangulations. SIAM J.
Comput., 33(4) :937–951, 2004.
B. B. Bollob´as. Random Graphs. Academic Press, London, 1985.
J. Bourgain. On Lipschitz embeddings of ﬁnite metric spaces in Hil-
bert space. Israel Journal of Mathematics, 1985.

[CGS02a] D. Coppersmith, D. Gamarnik, and M. Sviridenko. The diameter of
a long range percolation graph. Random Structures and Algorithms,
21 :1–13, 2002.

[CGS02b] D. Coppersmith, D. Gamarnik, and M. Sviridenko. The diameter of a
long range percolation graph. In Proceedings of the thirteenth annual
ACM-SIAM symposium on Discrete algorithms (SODA), pages 329–
337, 2002.
A. Clauset and C. Moore. How do networks become navigable ?
Preprint oai :arXiv.org :cond-mat/0309415, 2003.

[CM03]

[CSWH00] I. Clarke, O. Sandberg, B. Wiley, and T. W. Hong. Freenet : A distri-
buted anonymous information storage and retrieval system. In Pro-
ceedings of Designing Privacy Enhancing Technologies : Workshop
on Design Issues in Anonymity and Unobservability, pages 46–66,
July 2000.

[DMW03] P.S. Dodds, R. Muhamad, and D.J. Watts. An experimental study of

[dSP76]

[dSPK78]

[EP23]

searching in global social networks. Science, 301 :827–829, 2003.
D. J. de S. Price. A general theory of bibliometric and other cumu-
lative advantage processes. J. Amer. Soc. Inform. Sci., 27 :292–306,
1976.
I. de S. Pool and M. Kochen. Contacts and inﬂuence. Social net-
works, 1 :1–48, 1978.
F. Eggenberger and G. Polya. Uber die statistik verketteter. Vor-
gange. Zeitschrift Agnew. Math. Mech., 3 :279–289, 1923.

Bibliographie

165

[ER59]

[FFF99]

[FG03]

[FGP04]

P. Erd¨os and A. R´enyi. On random graphs. Publicationes Mathema-
ticas 6, 290(7), 1959.
M. Faloutsos, P. Faloutsos, and C. Faloutsos. On power-law rela-
tionships of the internet topology. Computer Communications Rev.,
29 :251–262, 1999.
P. Fraigniaud and P. Gauron. Brief announcement : an overview of
In Proceedings of the ACM
the content-addressable network d2b.
22st Symposium on Principles of Distributed Computing (PODC),
page 151, 2003.
P. Fraigniaud, C. Gavoille, and C. Paul. Eclecticism shrinks even
small worlds. In Proceedings of the 23rd ACM Symposium on Prin-
ciples of Distributed Computing (PODC), pages 169–178, 2004.

[GKL03]

[FMNP05] M. Flammini, L. Moscardelli, A. Navarra, and S. Perennes. Asymp-
totically optimal solutions for small world graphs. In LNCS Procee-
dings of the19th International Symposium on Distributed Computing
(DISC), pages 414–428, 2005.
P. Fraigniaud. Greedy routing in tree-decomposed graphs : a new
perspective on the small-world phenomenon. In Proceedings of the
13th Annual European Symposium on Algorithms (ESA), 2005. To
appear.
A. Gupta, R. Krauthgamer, and J.R. Lee. Bounded geometries, frac-
tals, and low-distortion embeddings. In Proceedings of the 44th An-
nual IEEE Symposium on Foundations of Computer Science (FOCS),
2003.
M. Gladwell.
74(41) :52–64, 1998.
Cyril Gavoille and David Peleg. Compact and localized distribu-
ted data structures. Journal of Distributed Computing, 16 :111–120,
May 2003. PODC 20-Year Special Issue.

Six degrees of lois weisberg.

The New Yorker,

[Fra05]

[Gla98]

[GP03]

[Gri90]

[GPPR01] C. Gavoille, D. Peleg, S. P´erennes, and R. Raz. Distance labeling in
graphs. In Proceedings of the twelfth annual ACM-SIAM symposium
on Discrete algorithms (SODA), pages 210–219, 2001.
R.I. Grigorchuk. On growth in group theory. In Proceedings of the
International Congress of Mathematicians, Kyoto, pages 325–338,
1990.
J. Heinonen. Lectures on analysis on metric spaces. Springer-Verlag,
New York, 2001.

[Hei01]

166

Bibliographie

[HKK04] K. Hildrum, R. Krauthgamer, and J. Kubiatowicz. Object location in
realistic networks. In Proceedings of the 16th annual ACM sympo-
sium on Parallelism in algorithms and architectures (SPAA), pages
25–35, 2004.
K. Horowitz and D. Malkhi. Estimating network size from local
information. Inf. Process. Lett., 88(5) :237–243, 2003.
S. Har-Paled and M. Mendel. Fast construction of nets in low di-
mensional metrics and their applications. In Proceedings of the 21th
ACM Symposium on Computational Geometry, 2005. To appear.

[HM03]

[HM05]

[KL03]

[Kle02]

[KR02]

[Kle00]

[JŁR00]

[Kai99]
[KB78]

[HMRe98] M. Habib, C. McDiarmid, J. Ramirez, and B. Reed (ed.). Probabilis-
tic methods for algorithmic discrete mathematics. Springer-Verlag,
New York, 1998.
S. Janson, T. Łuczak, and A. Ruci´nski. Random Graphs. John Wiley
& Sons, New York, 2000.
J. Kaiser. It’s a small web after all ? Science, 285(1815), 1999.
P. Killworth and H. Bernard. Reverse small world experiment. Social
networks, 1 :159–192, 1978.
R. Krauthgamer and J.R. Lee. The intrinsic dimensionality of graphs.
In Proceedings of the 35th ACM Symposium on Theory of Computing
(STOC), pages 438–447, 2003.
J. Kleinberg. The Small-World Phenomenon : An Algorithmic Pers-
pective. In Proceedings of the 32nd ACM Symposium on Theory of
Computing (STOC), pages 163–170, 2000.
J. Kleinberg. Small-world phenomena and the dynamics of informa-
tion. In T. G. Dietterich, S. Becker, and Z. Ghahramani, editors, Ad-
vances in Neural Information Processing Systems (NIPS) 14, Cam-
bridge, MA, 2002. MIT Press.
Finding nearest-neighbors in
D. R. Karger and Matthias Ruhl.
growth-restricted metrics. In Proceedings of the 34th annual ACM
symposium on Theory of computing (STOC), pages 741–750, 2002.
[LNJK+05] D. Liben-Nowell, J.Novak, R. Kumar, R. Raghavan, and A. Tomkins.
Geographic routing in social networks. Proceedings of the National
Academy of Science of the USA, 102(33) :11623–11628, 2005.
S. Milgram. The small world problem. Psychology Today, 61(1),
1967.
C. Martel and V. Nguyen. Analyzing kleinberg’s (and other) small-
world models. In Proceedings of the 23rd Annual ACM Symposium

[Mil67]

[MN04]

Bibliographie

167

[MN05]

on Principles of Distributed Computing (PODC), pages 179–188,
2004.
C. Martel and V. Nguyen. Analyzing and characterizing small-world
graphs. In Proceedings of the 16th ACM-SIAM symposium on Dis-
crete Algorithms (SODA), 2005. To appear.

[MNR02] D. Malkhi, M. Naor, and D. Ratajczak. Viceroy : a scalable and
dynamic emulation of the butterﬂy. In Proceedings of the ACM 21st
Symposium on Principles of Distributed Computing (PODC), pages
183–192, 2002.

[MNW04] G. S. Manku, M. Naor, and U. Wieder. Know thy neighbor’s neigh-
bor : the power of lookahead in randomized p2p networks. In Procee-
dings of the 36th ACM Symposium on Theory of Computing (STOC),
pages 54–63, 2004.

[New01] M.E.J. Newman. The structure of scientiﬁc collaboration networks.

Proc. Natl. Acad. Sci. USA, 98 :404–409, 2001.

