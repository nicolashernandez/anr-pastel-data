https://docplayer.fr/65211258-Test-de-propriete-pour-l-homomorphisme-de-graphes-et-d-hypergraphes.html





Test de propriété pour l homomorphisme de graphes et d hypergraphes - PDF

















            google_ad_client: "ca-pub-6133583279631137",
            enable_page_level_ads: true
        });
    












 Entrer
Enregistrement







Chercher

















Test de propriété pour l homomorphisme de graphes et d hypergraphes


                                                || document.documentElement.clientWidth
                                                || document.body.clientWidth;
                                            document.write('<sc'+'ript async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></sc'+'ript> \
                       <ins class="adsbygoogle" \
                             style="display:block" \
                             data-ad-client="ca-pub-6133583279631137" \
                             data-ad-slot="5061836408" \
                             data-ad-format="auto"></ins> \
                        <sc'+'ript> \
                        </'+'scr'+'ipt>');
                                        











                                                            if (width < 612) {
                                                                document.getElementById('left_banner_td').style.display= "none";
                                                            } else {
                                                                document.write('<scr'+'ipt async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></scri'+'pt>\
                            <ins class="adsbygoogle"\
                                 style="display:inline-block;width:160px;height:600px"\
                                 data-ad-client="ca-pub-6133583279631137"\
                                 data-ad-slot="6538569603"></ins>\
                            <sc'+'ript>\
                            </'+'scr'+'ipt>');
                                                            }
                                                        





                                                            var k_dim = 70;
                                                            var doc_pages_count = 27;
                                                        
 


                                                            if (Math.random() > 0.5) {
                                                                document.write(
                                                                    '<sc' + 'ript async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></s' + 'cript>' +
                                                                    '<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-6133583279631137" data-ad-slot="9492036005" data-ad-format="auto"></ins>'
                                                                );
                                                            } else {
                                                                document.write('<div id="angrmnt_b0"></div>');
                                                            }          
                                                        











                                                        SHARE 




                                                        HTML 




                                                        DOWNLOAD 





Save this PDF as:
 WORD
 PNG
 TXT
 JPG

































                                                            Dimension: px
                                                        

                                                            Commencer à balayer dès la page:
                                                        










Download "Test de propriété pour l homomorphisme de graphes et d hypergraphes"




                                                                Erreur: 




 Download Document









  Ange Simoneau
 il y a 10 mois                                                                                            
 Total affichages :  











Transcription




                                                

   1 Test de propriété pour l homomorphisme de graphes et d hypergraphes Nicolas Dalsass To cite this version: Nicolas Dalsass. Test de propriété pour l homomorphisme de graphes et d hypergraphes. RR-11025, 2011, pp.23. <lirmm > HAL Id: lirmm Submitted on 2 Sep 2011 HAL is a multi-disciplinary open access archive for the deposit and dissemination of scientific research documents, whether they are published or not. The documents may come from teaching and research institutions in France or abroad, or from public or private research centers. L archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la diffusion de documents scientifiques de niveau recherche, publiés ou non, émanant des établissements d enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.2 INSTITUT NATIONAL DE RECHERCHE EN INFORMATIQUE ET EN AUTOMATIQUE Test de propriété pour l homomorphisme de graphes et d hypergraphes Nicolas Dalsass N N.A (en cours) Mars 2011 apport de recherche SN ISRN INRIA/RR--N.A (en cours)--fr+eng3 4 Test de propriété pour l'homomorphisme de graphes et d'hypergraphes Nicolas Dalsass Thème : Knowledge and Data Representation and Management Équipes-Projets GraphIK Rapport de recherche n N.A (en cours) Mars pages Résumé : Dans ce rapport, nous nous intéressons à l'utilisation de testeurs de propriétés pour la recherche d'homomorphismes de graphes et d'hypergraphes. Après avoir montré quel genre de résultat nous pouvions attendre, nous étudions comment adapter les meilleurs testeurs connus à ce jour pour la résolution du problème k-max-csp, les limites de ces algorithmes utilisés dans le cadre de l'homomorphisme de graphes, et donnons de nouvelles bornes inférieures théoriques concernant ce genre d'algorithmes. En particulier, nous montrons que l'homomorphisme de graphe n'est pas ecacement testable dans les modèles non-dense, ce que nous prouvons en généralisant le concept de graphe de Behrend. Mots-clés : Homomorphisme, graphe, hypergraphe, test de propriété, algorithme probabiliste Encadré par Jean-François Baget Centre de recherche INRIA Sophia Antipolis Méditerranée 2004, route des Lucioles, BP 93, Sophia Antipolis Cedex Téléphone : Télécopie :5 Graph and Hypergraph Homomorphism Abstract: In this report, we study how can one use property testing algorithms in order to nd homomorphisms between graphs. We rst analyse what kind of results we can expect. We then study an adapatation of the best approximation algorithms designed for the k-max-csp problems, and in what measure we can eectively use those. We also give new theoretical lower bounds for property testers for graph homomorphism testing. Specically, we show that graph homomorphism is not eciently testable in non-dense models. We prove that using a construction based on Behrend graphs. Key-words: Homomorphism, graph, hypergraph, property testing, probabilistic algorithm6 Homomorphismes de graphes et d'hypergraphes 3 Table des matières 1 Cadre de travail Les nouveaux dés de la représentation de connaissances L'homomorphisme de graphes : un problème fondamental Travail eectué dans cette étude Tester une propriété : dénitions générales Cas de l'homomorphisme Quelle propriété à tester? Etude préliminaire Approche statistique Premier algorithme Evalution de l'algorithme Une autre manière d'échantillonner - transition par les csp Approximation du problème de l'homomorphisme Problème k-max-csp Généralisations Remarques et limites Bornes supérieures et inférieures pour la taille de l'échantillonnage nécessaire L'importance de la cliquewidth de H Complexité d'un testeur canonique Conclusion 20 1 Cadre de travail 1.1 Les nouveaux dés de la représentation de connaissances Sous diverses formes, l'interrogation de bases de connaissances est plus que jamais un problème d'actualité. Le problème fondamental, qui est de chercher les réponses à une requête conjonctive est en lui-même un problème NP-complet ([10]), qui s'étend en des problèmes plus diciles encore (par exemple en présence d'ontologies, ou pour prendre en compte la négation). Aujourd'hui, nous constatons une augmentation rapide de la taille des bases de données. Face à cette évolution, des solutions ecaces (à l'échelle industrielle) ont été trouvées, notamment sous formes de bases de données, protant du fait que la masse de données traitées soit très structurée : ainsi l'utilisation de systèmes de clefs et d'index a permis de ramener les temps de calcul à des durées raisonnables.7 Homomorphismes de graphes et d'hypergraphes 4 Mais déjà se présentent de nouveaux enjeux : avec le développement du web (notamment du web sémantique) sont générées de grandes masses de données peu structurées (on parle généralement de données semi-structurées). An de pouvoir continuer à traiter le problème de la déduction, la solution que nous avons choisie est de représenter la connaissance sous forme de graphes, a la manière de [22]. Dans ce formalisme, le problème de la déduction dans le fragment existentiel positif de la logique du premier ordre peut être vu comme un problème d'homomorphisme de graphes, ou plus généralement d'hypergraphes, étiquetés et orientés ([18]). Ainsi, nous pouvons envisager de nouvelles approches plus dynamiques (Backtrack ltré dynamiquement, structures de données adaptatives pour les bases de graphes...). Cependant, il se pourrait que ces approches se révèlent tout de même insusantes. A ce moment là, on peut relâcher le problème de la requête en un problème de "recherche approximative" : dans ce cas, un algorithme potentiellement inexact mais rapide semble être un bon compromis. Plus précisément, nous avons choisi d'explorer le domaine des testeurs de propriété après avoir constaté que ceux-ci permettaient d'obtenir de bons résultats pour un problème proche : la k-coloration. Bien entendu, d'autres approches auraient été envisageables : la programmation linéaire ou le "semidenite programming" - deux formes d'optimisation convexe, les algorithmes d'apprentissage, les marches aléatoires fondées sur le couplage rapide d'une chaîne de Markov L'homomorphisme de graphes : un problème fondamental Dans le contexte des graphes conceptuels, le problème de la déduction devient un problème d'homomorphisme de graphes. Plus précisément, on montre ([9]) qu'un fait (une formule logique) H se déduit d'un fait G si et seulement si il y a un homomorphisme du graphe conceptuel associé à H dans celui associé à G. De ce point de vue, le problème de l'homomorphisme est donc bien un problème central en Intelligence Articielle et en Représentation de Connaissances. Cependant, comme pour tout problème NP-complet, le "meilleur" algorithme connu a une complexité asymptotique exponentielle en la taille de la requête [23]. De plus, il implique un préprocessing lourd, qui fait qu'on lui préfère dans la pratique les algorithmes mis en oeuvre pour résoudre les problèmes de contraintes : backtrack, descente de gradient,... Il est d'ailleurs intéressant de noter que le problème de l'homomorphisme prote directment de toutes les avancées eectuées dans le domaine des csp Par ailleurs, au delà du domaine de l'ia, le problème de l'homomorphisme de graphes est un problème qui se retrouve dans une grande variété de champs d'étude : s'il peut se voir comme une généralisation des problèmes de coloration, il survient couramment en reconnaissance de formes ou en physique statistique par exemple. Et là encore, les problèmes actuels concernent de très grands graphes (images 3D, arrangements moléculaires...)8 Homomorphismes de graphes et d'hypergraphes Travail eectué dans cette étude Pendant ce stage, nous avons étudié dans quelle mesure les algorithmes classiques venant du domaines des testeurs de propriétés pouvaient être intéressants pour approximer le problème de l'homomorphisme. Nous avons donné des résultats concernant la possible utilisation de ces algorithmes selon la propriété testée. Nous avons aussi donné des bornes inférieures concernant la complexité de tels algorithmes, et nous avons traduit des algorithmes utilisés dans d'autres domaines, notamment pour la résolution du problème k-max-csp, en algorithmes de graphes pour l'homomorphisme. Nous avons nalement conclu qu'on ne pouvait tester ecacement ni la requête ni la base de données pour résoudre ce problème. Une question qui reste ouverte serait de savoir si l'on peut tester ecacement un graphe construit à partir de la donnée de ces deux éléments, question pour laquelle nous donnons des graphes qui montrent qu'elle sera dicile. Commençons par quelques dénitions (classiques) pour mieux comprendre ce que nous voulons construire 1, dénitions que nous restreindrons pour plus de clarté au cadre des propriétés de graphes et d'hypergraphes. 2 Tester une propriété : dénitions générales Nous ne considérerons en général que des graphes et hypergraphes simples (sans boucle, et sans (hyper)arête multiple). Cette restriction peut sembler étrange, dans la mesure ou notre problème initial semble plus général. Cependant, on peut facilement passer d'un cas à l'autre ([17]). Dans la plupart des exemples que nous considérerons, nos graphes seront également non étiquetés et non orientés, mais ce n'est jamais indispensable. Dénition 1 (Propriété) Soit H (k) la famille des hypergraphes k-uniformes 2. Avec cette notation, la famille H (2) représente les graphes traditionnels sans boucle. Une propriété est n'importe quelle famille P H ((k)), qui est invariante pour l'isomorphisme. On dit qu'un hypergraphe G vérie P si G P Cette dénition peut sembler surprenante. En eet, on aimerait qu'une propriété soit quelque chose comme "être connexe" ou "être 3-colorable". Un moyen simple de la comprendre est de transformer la propriété, par exemple, "être connexe" en la propriété "appartenir à la famille des hypergraphes connexes". Pour ce qui suit, on se donne P une propriété, et d : H (k) H (k) R une distance sur H (k). On se donne également G, un hypergraphe k-uniforme. 1. Pour le lecteur intéressé par un aperçu plus général du test de propriété, Goldreich a récemment écrit une introduction au sujet ([15]). Un aperçu général des algorithmes et techniques couramment utilisés a par ailleurs été écrit par Ron ([20]). 2. Un hypergraphe est dit k-uniforme si toutes ses hyperarêtes sont d'arité k.9 Homomorphismes de graphes et d'hypergraphes 6 Dénition 2 (ɛ-loin) On dit que G est ɛ-loin de P lorsque min H P (d(g,h))>ɛ Dénition 3 (Testeur de propriété) Un testeur de propriété pour P est un algorithme probabiliste, qui prend en entrées G et ɛ (et éventuellement p et p ) et qui : accepte G avec une probabilité p 2 3 si G P. rejette G avec probabilité p 2 3 si G est ɛ-loin de P. On dit que le testeur est à erreur unilatérale s'il accepte toujours G lorsque G est dans P. Sinon, il est dit à erreur bilatérale. Remarque :Lorsque l'algorithme reçoit en entrée un graphe qui n'a pas la propriété mais n'est pas non plus loin de l'avoir, le résultat importe peu. L'idée est que si l'algorithme accepte G par erreur, ce dernier sera en revanche "facile" à modier pour lui faire vérier eectivement P, dans le cas inverse le résultat est juste. Une autre manière de voir les testeurs de propriété consiste à voir en eux des algorithmes qui donnent une "approximation probable" de la valeur que l'on souhaite mesurer. G P G est ɛ-loin de P Figure 1 Ensemble séparés par un testeur pour P Pour pouvoir mesurer l'ecacité d'un tel testeur, une mesure couramment eectuée est celle du nombre de "requêtes" qu'il eectue. Pour un testeur, faire une "requête", c'est demander si un k-tuple de sommets dans G en constitue une arête 3. La "complexité en requêtes" d'un testeur est le nombre de requêtes qu'il eectue pendant son exécution. On dira qu'une propriété est ecacement testable s'il existe un testeur ayant une complexité en requêtes indépendante de la taille de l'instance testée. C'est le cas par exemple pour le problème de la 3-coloration, comme nous le verrons plus loin. 3. Dans le cadre du modèle dense, qui est celui que nous utiliserons. Cf [12] pour plus de détails sur les autres requêtes possibles10 Homomorphismes de graphes et d'hypergraphes 7 Pour beaucoup de testeurs de propriétés, l'algorithme se décompose en deux parties. D'abord, le testeur eectue les requêtes nécessaires pour reconstituer le sous-graphe G induit par un ensemble S (choisi aléatoirement) de sommets de G. Puis il exécute un algorithme exact sur ce sous-graphe, an de déterminer s'il possède la propriété cherchée pour G. Enn, il conclut que si G n'a pas la propriété, G est ɛ-loin de l'avoir, et que si G l'a, G l'a aussi. Si la taille de l'échantillon S ne dépend pas de celle de G, la propriété est bien ecacement testée. Remarques : On pourrait plus généralement se donner n'importe quels p et p > 1/2, mais il est d'usage courant de choisir 2/3, ce qui permet de comparer plus facilement les diérents algorithmes existants et d'éviter de travailler sur des inégalités strictes. Pour les graphes, une distance très courante est la distance de Hamming,(ou distance d'édition). Pour cette distance, un hypergraphe G est à distance ɛ d'un hypergraphe H si E(G) E(H) = ɛ. Cette distance n'est dénie que si G et H n k ont le même nombre n de sommets identiés. Ceci peut sembler gênant, mais nous verrons qu'il n'en est rien, grâce à la propriété 1. Pour les grands graphes, il est dicile voire impossible d'intégrer dans la mémoire vive de l'ordinateur utilisé la totalité du graphe sur lequel on raisonne, ce qui empêche a priori de faire un échantillonnage aléatoire simple du graphe. Cependant, plusieurs techniques de marches aléatoires existent ([21] par exemple) an d'optimiser ce processus (par exemple basées sur le couplage rapide d'une chaine de Markov). Dans la suite, nous ferons donc l'hypothèse que constituer l'échantillon aléatoire du graphe est un processus rapide, dont nous ne tenons pas compte dans l'évaluation de la complexité des algorithmes. Exemple 1 Imaginons que nous voulions tester la propriété P = {G : G est 3-colorable}, avec pour distance critique ɛ. Dans ce cas, G sera ɛ-loin d'être 3-colorable s'il faut changer plus de ɛ.n 2 arêtes à G pour qu'il le devienne. Un testeur pour cette propriété pourrait avoir la forme suivante : Testeur(G) : Choisir un sous-graphe G de G de taille S(G,ɛ). Vérier de manière exacte si G est 3-colorable. Si c'est le cas, accepter G. Sinon, rejeter G. Pour que cet algorithme soit valide, il faut montrer que : Lorsque G est 3-colorable, G a au moins 2 chances sur 3 de l'être. C'est bien le cas, G l'est même à coup sur. Lorsque G est ɛ-loin d'être 3-colorable, G a au moins 2 chances sur 3 de ne pas l'être. Pour cela on voit qu'il faut choisir correctement S Pour cet exemple précis, on peut même montrer que S peut ne dépendre que de ɛ, cf [5] par exemple.11 Homomorphismes de graphes et d'hypergraphes 8 Nous pouvons remarquer que lorsqu'un hypergraphe G se projette dans un hypergraphe H, alors tous les sous-hypergraphes de G s'y projettent aussi. C'est particulièrement intéressant, car des résultats existent déjà concernant ce genre de propriétés, dites "monotones". Dénition 4 (Monotonie et hérédité) Une propriété P est dite monotone lorsque pour tout hypergraphe G dans P, tous les sous-hypergraphes de G sont aussi dans P. Elle est dite héréditaire lorsque tous les sous-hypergraphes induits de G sont aussi dans P. Toute propriété monotone est donc héréditaire. Pour toute famille F, on note F orb ind (F) la famille des hypergraphes n'ayant aucun élément de F comme sous-hypergraphe induit. Cette propriété est héréditaire. Propriété 1 Soit P une propriété héréditaire, G un graphe (ou plus généralement, un hypergraphe) n'ayant pas cette propriété. Alors le graphe G 0 P le plus proche de G est un graphe partiel de G. Preuve Soit P une propriété héréditaire, G un graphe n'ayant pas cette propriété. Soit G 0 P le graphe le plus proche de G pour la distance de Hamming. Soit E 0 = E(G) E(G 0 ). Par dénition, d(g, G 0 )= E 0 /n 2. On peut écrire E 0 comme union d'arêtes de G et de G 0 : E 0 = E0 G E G0 0 On dénit alors G 1 =G G 0. Alors, comme P est héréditaire, G 1 P. Par ailleurs E(G) E(G 1 ) = E0 G E 0, donc d(g, G 1 ) d(g, G 0 ) avec égalité si et seulement si E G0 0 = 0, i.e ssi G 0=G 1. Par dénition de G 0, on a donc bien G 0 = G 1, donc G 0 est un graphe partiel de G. Cette propriété implique que lorsqu'on veut évaluer la distance d'un graphe à une propriété héréditaire, il sut d'évaluer le nombre minimal n min d'arêtes qu'il faut lui enlever pour qu'il aie la propriété. Ceci nous permet de dénir précisément la distance d'un graphe à une propriété héréditaire via la distance de Hamming : ce sera n min /n 2, où n est le nombre de sommets du graphe. La propriété suivante est triviale, mais elle sera utile pour comprendre notre démarche plus tard. Propriété 2 Si une propriété P est héréditaire, alors il existe F telle que P = F orb ind (F) Preuve Choisir F = {H : H tel que H / P} convient. 2.1 Cas de l'homomorphisme Dans toute la suite de ce rapport, nous chercherons à répondre à la question : "Est-ce que le graphe (ou l'hypergraphe) G se projette dans H?". G sera donc toujours le graphe source, et H le graphe cible. On notera couramment V (G),12 Homomorphismes de graphes et d'hypergraphes 9 E(G), V (H), E(H) les sommets et arêtes (ou hyperarêtes) respectivement de G et de H. Tout d'abord rappelons ce qu'est un homomorphisme de graphes : Dénition 5 (Homomorphisme de graphes) Soient G et H deux graphes. f :V (G) V (H) est un homomorphisme de graphe si : (u, v) E(G), (f(u)f(v)) E(H) Figure 2 Un exemple d'homomorphisme entre deux graphes Remarque :Un graphe G est k-colorable si et seulement si G se projette dans K k, où K k est le graphe complet sur k sommets Quelle propriété à tester? Nous pouvons envisager initialement le problème de deux manières. La première manière de procéder serait de xer H, et échantillonner G : nous écririons alors un testeur pour la propriété Hom H = {G : il existe un homomorphisme de G vers H}. La deuxième serait de xer G, et d'échantillonner H, pour tester la propriété Im G ={H :il existe un homomorphisme de G vers H}. Dans le cadre par exemple d'une requête à une base de données, cette situation semble plus naturelle, vues les tailles respectives des graphes représentant G et H Etude préliminaire Notre première contribution est la démonstration suivante qui montre que cette approche ne présente que peu d'intérêt. Théorème 1 Im G n'est pas ecacement testable.13 Homomorphismes de graphes et d'hypergraphes 10 Preuve Pour montrer que Im G n'est pas ecacement testable, il sut de trouver un G pour lequel il existe un nombre inni de H ne pouvant être testés correctement en temps constant. Prenons G = K 3 et H i = K 3 J i pour i N (où J i = K i,i, le graphe complet biparti entre deux ensembles de i sommets). Alors, pour tout i, G H i. Cependant, prenons un sous-graphe aléatoire H i induit par s sommets de H i. Alors : P (H i J i) = (1 3 2i+3 )s 1, donc il n'existe aucune constante s telle que i la série des H i soit testable pour Im K3 en échantillonant un nombre constant s de sommets des H i : en eet, tous les H i sont bien dans Im G, cependant, on a pas P(tout sous graphe de taille s d'un H i quelconque est aussi dans Im G )>1/2. Nous ne pouvons donc pas avoir de testeur ecace pour la propriété. De plus, si on pose 2i + 3 = n et s = cn, (1 3/n) s e 3cn 3cn n 1 ln 2 3 n, et e 3 n 1/2 c, 3n ce qui signie que l'on ne peut pas non plus envisager d'échantillonner les H i de manière sublinéaire, ou linéaire avec une constante faible. En conséquence de quoi, il n'est pas envisageable de tester Im G. Cela nous enlève un champ important d'étude, puisque dans le cas classique de l'interrogation de bases de connaissances, la taille de la requête est telle qu'il n'est pas possible de l'échantillonner. Nous pourrions également envisager une autre approche consistant à tester une propriété d'un graphe "hybride", construit à partir de G et H. Par exemple, nous pouvons construire un graphe composé K à partir de G et H tel que H se projette dans G si et seulement si il existe un automorphisme non trivial de K dans lui-même. Cependant, nous n'avons pas obtenu de résultat intéressant selon cette perspective. C'est pourquoi nous restreindrons désormais notre étude au test de Hom H. En eet nous ne nous attendons pas à pouvoir ainsi échantillonner une requête classique, tester si une base de connaissances se projette dans une autre est un problème classique lors, par exemple, de la fusion de telles bases pour éviter les redondances. Nous allons donc tout d'abord justier que cette propriété est eectivement testable. Pour tout graphe H, on remarque que Hom H est monotone (et donc héréditaire), et est connue pour être décidable. L'existence d'un testeur pour cette propriété est assurée par un résultat de Rödl and Schacht ( [19]) : Corollaire 1 Toute propriété héréditaire et décidable d'hypergraphes est ecacement testable. En vertu de ce corollaire, nous nous intéresserons donc exclusivement aux testeurs eectuant un nombre de requêtes indépendant de la taille de la donnée en entrée.14 Homomorphismes de graphes et d'hypergraphes 11 3 Approche statistique Le corollaire 1 s'appuie sur un résultat plus général([19], Théorème 6) Théorème 2 Pour toute famille (éventuellement innie) F d'hypergraphes k- uniformes, et pour tout ɛ > 0, il existe des constantes c > 0 et C > 0 et n 0 telles qu'on ait le résultat suivant : Soit G (k) un hypergraphe k-uniforme sur n n 0 sommets. Si pour tout l dans [C] 5 et tout F (k) F sur l sommets, G (k) contient au plus cn l copies induites de F (k), alors G (k) n'est pas ɛ-loin de Forb ind (F) Ce théorème nous assure que si un hypergraphe G est ɛ-loin d'une propriété héréditaire P alors il existe une taille critique n 0, et des constantes c et C positives telles que si V (G) > n 0, alors G induit au moins cn V (F (k) ) copies d'un hypergraphe interdit F (k) de taille au plus C, donc a fortiori au moins cn C copies d'un hypergraphe interdit F (k) de taille C (en eet, nous avons vu que toute propriété héréditaire pouvait s'écrire sous la forme F orb ind (F)). Il nous sut alors de trouver une constante S telle que tout sous-graphe induit de G de taille S aie une probabilité α > 1/2 de contenir une de ces copies, et donc de ne pas être dans Hom H. Un testeur de propriété simple pour Hom H est alors : 3.1 Premier algorithme Si G est de taille inférieure à n 0, vérier de manière exacte la propriété. Sinon, prendre aléatoirement un sous-graphe G de G de taille S, vérier de manière exacte s'il est dans Hom H. Renvoyer pour G la réponse obtenue pour G. Si S ne dépend pas de n, cet algorithme a une complexité en requêtes, et donc un temps d'exécution, borné. Théorème 3 S = C ln(2) c convient. Preuve Pour tout sous-graphe induit G de G de taille C, on a P (G = F (k) ) = cn C ( N) C Alors la probabilité qu'un graphe induit G de G de taille S ne contienne pas F (k) est (1 cn C C) ), et on veut choisir ( N C) )(S S de façon à ce que cette probabilité soit strictement inférieure à 1 2 Or (1 cn C ( N C ) ) (S C) cn C ) e ( N C).(S C) e c( S C) e cs C 5. i.e dans l'ensemble 1,..., C.15 Homomorphismes de graphes et d'hypergraphes 12 et e csc < 1 2 S > C ln(2) c 3.2 Evalution de l'algorithme Nous avons besoin pour exploiter ce résultat de pouvoir évaluer c et C. Or ces constantes découlent de l'utilisation du lemme de régularité de Szeremedi ou d'une de ses variantes([4], [3], [6], [7] par exemple), lequel donne l'existence d'une constante qui prend des valeurs non utilisables en pratique. Plus exactement, la valeur exacte de ces constantes est généralement inconnue, mais Gowers([16]) en a donné une borne inférieure (une tour de 2 de taille proportionnelle à log( 1 ɛ )) qui écarte l'espoir d'une application pratique : par exemple, si on prend le graphe associé au réseau facebook (où les arêtes représentent la relation "`être ami"), ce graphe a une densité d'environ On a donc une complexité bornée inférieurement par une tour de 2 de taille 10 si l'on veut échantillonner ainsi ce graphe, ce qui n'est pas utilisable en pratique. 4 Une autre manière d'échantillonner - transition par les csp En 2002, Andersson et Engerbretsen ont proposé un algorithme pour approximer le problème k-max-csp [8]. En 2003, Alon et al. [2] en ont proposé un deuxième, et en 2010, Coja-Oghlan et al. en ont proposé un troisième, applicables à d'autres instances du problème [14]. Nous allons transformer le problème de l'homomorphisme de k-hypergraphes vers le problème de la résolution d'un système de k-csp, et voir comment approximer k-max-csp nous permet d'approximer également le problème de l'homomorphisme. Nous verrons aussi pourquoi approximer ce problème équivaut à écrire un testeur de propriété pour Hom H Nous verrons quelles propriétés nous pouvons donner à nos hypergraphes (étiquetés, orientés, uniformes ou non) tout en gardant cette équivalence, et leurs impacts sur la complexité de l'algorithme proposé. 4.1 Approximation du problème de l'homomorphisme Nous donnons ici une traduction en terme de théorie des graphes de l'algorithme proposé dans [8]. Tout comme celui de Alon et al., il s'applique pour des instances denses de graphes (nous verrons dans la partie 4.4 ce qu'il faut comprendre par là), et ce dernier a une meilleure complexité asymptotique en requêtes. Cependant, lorsque l'on considère la complexité respective des algorithmes, celui de Andersson et Engerbretsen est utilisable sur des graphes de taille plus proche de celles qui nous intéressent.16 Homomorphismes de graphes et d'hypergraphes 13 Paramètres : ɛ, δ deux réels strictement positifs, G(V, E), H(W, F ) deux hypergraphes k-uniformes, avec V = n et W = N. Ces hypergraphes sont considérés orientés et non étiquetés. Sortie : Un réel, p, tel que si on note ˆp = 1 E n k max, on aie P ( ˆp p 2ɛ) (1 2δ), où E max est le nombre d'arêtes du plus grand sous-graphe de G qui se projette dans H. Nous avons donc "probablement" une approximation à 2ɛn k près de cette taille maximale. Remarque : pour l'instant, nous ne retournons que cette valeur, non pas la projection partielle elle-même. Algorithme 1 : On pose : l = 2 ɛ, t = 32 ɛ ln 8lN 64k ln N 2 ɛδ, s = ɛ ln 5 1. Partitionner V en l sous-ensembles de taille n/l, V 1,...V l. 16 ln N ɛ 2 δ + 1 ɛ 2 ln 2 δ 2. Pour tout i, sélectionner aléatoirement (selon une distribution uniforme) dans V \ V i t (k 1)-tuples de sommets, on nomme ces ensembles U i. On note U = i U i 3. Générer aléatoirement (toujours uniformément) s k-tuples de sommets de G, on appelle cet ensemble C. On note en plus C i = C V i, pour tout i [l] 4. Pour toute fonction p : U W, créer une fonction Π C p : C W de la manière suivante : Pour tout i [l], choisir une image pour les variables de C i comme ceci : Pour tout v C i, trouver w W qui maximise le nombre d'arêtes de U i {v} qui sont correctement projetées par p : u p(u) si u U i,v w. On dénit Π C p (v) = w 5. Calculer S(p), le nombre d'arêtes de G formées par les sommets de C qui sont correctement projetées par Π C p. 6. Retourner 1 s S(ΠC p ) pour Π C p qui maximise cette valeur. k ln W On obtient une complexité de exp(o( ɛ ln k W 3 ɛδ )) pour approcher ˆp à 2ɛ près (un temps constant par rapport à la taille de G), et un temps linéaire en G pour trouver l'assignation des sommets de G qui réalise cette approximation (en faisant l'hypothèse que tous les calculs, notamment ceux de l'étape 4, sont faits par des sous-algorithmes gloutons d'énumération complète des cas). Pour trouver cette assignation, on utilise l'algorithme suivant :17 Homomorphismes de graphes et d'hypergraphes 14 Algorithme 2 : 1. Trouver la fonction p selectionnée à l'étape 6 de l'algorithme 1. On construit Π V p ainsi : 2. Pour tout i, et tout sommet v i de V i, trouver w qui maximise le nombre d'arêtes correctement projetées par par p : u p(u) si u U i,v w. (#Le travail est déjà fait par l'algorithme 1 pour les sommets de C i.) 3. Pour tout v, on choisit Π V p (v) = w Pour montrer la validité de ces algorithmes, nous allons montrer comment le problème de l'homomorphisme d'hypergraphes se traduit en un autre, le problème k-max-csp. La validité de ces algorithmes sera ensuite assurée par la validité de ceux de [8]. 4.2 Problème k-max-csp Tout d'abord, pour dénir un problème csp, nous avons besoin des dénitions suivantes 6 : Dénition 6 (Fonction de contrainte k-aire) Soit D un ensemble appelé le domaine. Une fonction de contrainte k-aire sur D est une fonction de D k {0, 1}. Une famille de contraintes k-aires sur D est un ensemble de fonctions de contraintes k-aires sur D. Par exemple, une fonction de contrainte 2-aire sur [n] 2 pourrait être f : (a, b) a + b modulo 2 Une manière de simple de se représenter une fonction de contrainte est de la voir comme une fonction qui "accepte" une partie de D k et "rejette" l'autre. Dénition 7 (Contrainte) Soient X = {x 1,...x n } un ensemble de variables, avec n k, D un domaine, F une famille de contraintes (k-aires) sur D. Une contrainte sur X est un (k +1) tuple (f, x i1,..., x ik ) F X k. On dit que f dépend des variables x i1,..., x ik, et on impose en plus que celles-ci soient toutes diérentes. Si aux variables d'une contrainte sont assignées les valeurs (a 1,..., a k ) D k, la contrainte prend la valeur f(a 1,..., a k ). Elle est dite satisfaite si cette valeur est 1. Dénition 8 (Problème max-f) Soient E, D et F dénis comme précédemment. Une instance I du problème max-f est un ensemble de contraintes. Le problème max-f consiste à trouver une assignation des variables de E dans D qui satisfasse le maximum possible de contraintes de I. 6. Ces dénitions ne représentent pas le cas le plus général des problèmes csp, mais sont ce dont nous avons besoin pour notre équivalence!18 Homomorphismes de graphes et d'hypergraphes 15 On propose la transformation classique suivante (voir par exemple [18]) : Soient G(V, E) et H(W, F ) deux hypergraphes k-uniformes. On se pose la question de savoir s'il existe un homomorphisme de G vers H. Plus précisément nous cherchons à assigner à chaque sommet de G un sommet de H de sorte que l'image de toute hyperarête de G soit une hyperarête de H. Nous posons donc X = V et D = W. Et nous dénissons f : (w 1,..., w k ) D k 1 si (w 1,..., w k ) F, 0 sinon. Intuitivement, f "accepte" exactement les hyperarêtes de H. Nous dénissons alors F = {f} 7 Nous pouvons alors construire I = {(f, v 1,..., v k ), (v 1,..., v k ) E}. Propriété 3 (Equivalence des problèmes) Lorsque par une assignation des variables de X dans D on arrive à satisfaire toutes les contraintes de I, on a bien réussi à faire en sorte que toute hyperarête de G (i.e les éléments de E) soit une hyperarête de H (les éléments de F, exactement les tuples acceptés par f). Donc le problème de l'homomorphisme de G dans H est bien équivalent à l'instance du problème k-csp dénie selon cette transformation. Avec cette transformation, résoudre le problème max-f pour I revient strictement à trouver la fonction de V dans D k qui maximise le nombre d'hyperarêtes de G correctement projetées. Ou encore, cela revient à trouver le plus grand sous-hypergraphe de G (au sens du nombre d'arêtes) qui se projette dans H. Nous voyons déjà une première restriction : toutes nos contraintes ont la même arité : k. Ceci implique de choisir G et H k-uniformes. De plus, une contrainte dépend de k variables diérentes, ce qui signie qu'un sommet ne peut intervenir plusieurs fois dans une hyperarête. Par ailleurs, notre algorithme étant la traduction selon cette transformation de l'algorithme 2 de [8], il est correct. 4.3 Généralisations Dans le cadre qui nous intéresse, les arêtes de G correspondent à des prédicats logiques. Ce qui signie qu'elles sont typées : elles sont étiquetées, et on a une relation d'ordre partielle (une relation de "généralisation") sur ces étiquettes. Concrètement, cela signie que l'image v dans H d'une arête u de G doit avoir le même type que u, ou un type le généralisant. Pour prendre en compte cette contrainte supplémentaire, nous allons modi- er notre dénition de F. De plus, nous avons besoin d'une hypothèse supplémentaire : que l'ensemble des prédicats nous intéressant, et donc l'ensemble des étiquettes des hyperarêtes de nos hypergraphes, soit ni. 7. Ce concept de famille de contraintes semble articiel. Cependant, il sera utile quand nous généraliserons cette transformation, cf partie 4.3.19 Homomorphismes de graphes et d'hypergraphes 16 Dénition 9 (Famille des contraintes typées) Soit (T, ) l'ensemble des étiquettes, que nous appellerons des types possibles sur les hyperarêtes de nos hypergraphes, muni d'une relation d'ordre partielle : on écrit que t 1 t 2 lorsque t 2 généralise t 1. Soit également H un hypergraphe. De plus, on note e la fonction qui à une hyperarête d'un hypergraphe quelconque associe son type. Alors on peut remplacer F dans la propriété 3 ainsi : F = T, et : t T, (w 1,..., w k ) W k, t(w 1,..., w k ) = 1 ((w 1,..., w k ) F et e(w 1,..., w k ) t) Intuitivement, t accepte un tuple de W k si ce tuple est une arête de H dont le type généralise t. Dénition 10 Soit F une famille de contraintes sur W. Le nombre maximum de contraintes satisables sur un tuple pour F, noté Σ(F) est déni par : Σ(F) = max {f F : f(w 1,..., w k ) = 1} (w 1,...,w k ) W k En terme d'hypergraphes, cette valeur correspond au plus grand nombre d'hyperarêtes aectant un même tuple de sommets. Les algorithmes de [8], s'appliquent encore, mais leur complexité dépend maintenant de Σ(F). On obtient une complexité exp(o( Σ3 k ln W ɛ ln Σk W 3 ɛδ )). Plus concrètement, cela signie que si G et H sont des hypergraphes 3- uniformes de grande taille (plusieurs millions de sommets chacun), la complexité d'un algorithme exact sera a priori de l'ordre de H G, et celle du testeur de propriété pour un facteur de distance de 0, 1 sera de l'ordre H 6 105, ce qui, bien qu'étant eectivement bien plus faible, reste toujours impraticable. 4.4 Remarques et limites A priori, cet algorithme présente un avantage indéniable : il a une complexité qui ne dépend pas de de la taille de G, et qui ne croit que logarithmiquement avec la taille de H. Nous allons donner une explication, intuitive, d'une des raisons de ce succès. Ce qui expliquera aussi à quel moment intervient l'hypothèse que nous avions fait initialement de travailler sur des instances "denses" de csp, et que nous n'avons jamais explicitement utilisée. Si on note c la densité de G, pour que notre algorithme soit utile, il faut choisir ɛ c. Nous avons donc E = cn k, et pour pouvoir choisir ɛ constant, il faut supposer que nous avons un d tel que pour tous les hypergraphes G que nous traiterons, c d. Ceci implique que si l'on double la taille de G, pour garder la même densité, on doit avoir E nouveau = 2 k E ancien. La croissance du nombre d'arêtes est considérablement plus rapide que celle du nombre de sommets. Prenons un exemple concret : un réseau social type Facebook, avec encore le graphe représentant le lien "être ami" entre les membres du réseau. Pour garder une densité constante, il faudrait que lorsque le nombre de membres double,20 Homomorphismes de graphes et d'hypergraphes 17 le nombre moyen de liens par membre quadruple. Ce qui ne correspond pas à ce que l'on observe empiriquement : le nombre moyen de liens tend à rester constant, ou à croître faiblement [13]. Dans ce genre de cas, la densité diminue, entraînant une diminution de ɛ, et une augmentation sensible de la complexité de l'algorithme. Intuitivement, l'hypothèse du graphe dense est donc d'autant plus "forte" que le graphe est grand. Et elle explique le succès de ces algorithme sur les grands graphes, et on comprend mieux ce qui peut faire que cet algorithme soit en temps constant à partir d'une taille critique de G. 5 Bornes supérieures et inférieures pour la taille de l'échantillonnage nécessaire 5.1 L'importance de la cliquewidth de H Nous allons maintenant donner une explication plus quantitative quand à l'importance de la structure de H, et notamment de la cliquewidth 8 de H. Considérons p et n deux entiers, et, pour simplier les notations, supposons que p divise n. Considérons les graphes complets K p et K n. A quelle distance K n est-il de se projeter dans K p? Cette question est en fait équivalente à la suivante : combien d'arêtes au minimum faut-il enlever à K n pour le rendre p-colorable? Propriété 4 K n est n2 n 2pn 2 -loin de se projeter dans K p. Preuve Soit σ : V (K n ) [p] une p-coloration (impropre) de K n. Soit V i la classe de coloration de la couleur i dans K n. Alors, il faut supprimer toutes les arêtes (x, y) de K n telles que (x, y) Vi 2 pour rendre cette p-coloration propre. Il faut donc supprimer S = 1 p V i V i 1 arêtes de V n. 2 i=1 n f : R R : x x 2 étant convexe, sous la contrainte V i = n, S est minimisée pour V i = n p, pour tout i. p Il faut donc supprimer au minimum 1 2 (n/p)(n 1)/p arêtes à K n pour le rendre p-colorable. Ce résultat amène deux corollaires concernant la p-coloration : Corollaire 2 Soit G un graphe tel V (G) = n, et E(G) = δn 2. Alors : p, 1 δ n2 n 2pn G n'est pas p-colorable 2 Preuve K n est 1 δ-loin de G, et n2 n 2pn -loin d'être p-colorable. Donc si 2 1 δ n2 n 2pn, G n'est pas p-colorable i.e la taille de la plus grande clique. i=1 i=121 Homomorphismes de graphes et d'hypergraphes 18 Corollaire 3 Aucun graphe n'est à distance supérieure à 1 2p d'être p-colorable. Ceci implique notamment qu'un testeur cohérent pour la p-coloration, et a fortiori pour l'homomorphisme vers tout graphe contenant une clique de taille p, doit choisir un paramètre de distance ɛ inférieur à 1 2p. En conséquence, si notre base de données (le graphe H) contient de grandes cliques, quelque soit la densité de notre graphe d'entrée (G), il faut choisir ɛ très petit, ce qui amène à une explosion de la complexité des testeurs de propriétés. 5.2 Complexité d'un testeur canonique Dans [1], Alon présente une construction permettant de construire, pour tout paramètre de distance ɛ, et tout graphe H un graphe qui soit ɛ-loin de ne pas contenir de copie de H. Nous allons présenter cette construction dans le cas où H est un triangle, et montrer en quoi elle interdit d'espérer faire un testeur générique pour l'homomorphisme (i.e. qui ne dépende pas du graphe H) qui aie une complexité en requêtes polynomiale en 1/ɛ. Cette construction est elle-même basée sur les graphes de Behrend ([11]). Lemme 1 Pour tout m susamment grand, il existe X [m] tel que X = m 1 g(m), avec g(m) = o(1), et tel que X ne contienne pas trois termes en progression arithmétique. Plus précisément, on peut montrer que ce résultat est valide pour g(m) = c/log(m), où c est une petite constante. On peut alors dénir un graphe de Behrend pour m et X, que nous noterons B m,x. Dénition 11 (Graphe de Behrend B m,x ) Soit m et X comme dénis cidessus. Le graphe B m,x est alors le graphe suivant : il contient 6m sommets, séparés dans un ensemble V 1 de m sommets numérotés arbitrairement de 1 à m, V 2 de 2m sommets numérotés de 1 à 2m, et V 3 de 3m sommets numérotés de 1 à 3m. Alors, soit i, j, k des sommets de V 1, V 2 et V 3. Les arêtes de B m,x sont les suivantes : (i, j) E(B m,x ) j i X, (i, k) E(B m,x ) (k i)/2 X, (j, k) E(B m,x ) k j X. Ce graphe a les propriétés immédiates suivantes : Il contient 3m X sommets, et comme X = o(m), il n'est pas "dense", dans le sens qui nous intéresse. Ces sommets forment m X triangles, chaque arête contribuant à un unique triangle. Il faut donc lui enlever m X arêtes pour qu'il ne contienne plus aucun triangle. An de donner des bornes intéressantes en terme de test de propriété, nous proposons une construction qui permet de "densier" ce graphe tout en gardant des propriétés intéressantes.22 Homomorphismes de graphes et d'hypergraphes 19 i+x i i+2x Figure 3 Construction du graphe de Behrend, x X, i [m] Dénition 12 (s-blow up d'un graphe) Soit G un graphe, V (G) = (v 1,..., v n ). On dénit le s-blow-up de G de la manière suivante : on remplace tous les sommets v i de G par des ensembles V i de s sommets indépendants. Pour tout i et j dans [n], si (v i, v j ) E(G), alors on forme un graphe bipartite complet entre V i et V j, sinon, on ne met aucune arête entre V i et V j Propriété 5 Soient m,x et s. Alors le s-blow-up de B m,x a les propriétés suivantes : Il contient 6sm sommets et 3s 2 m X arêtes Ces arêtes forment X ms 3 triangles, il faut lui en enlever X ms 2 pour tous les détruire. Preuve Chaque triplet de clusters formant un graphe tripartite complet génère s 3 triangles. Et ces triplets sont au nombres de m (clusters dans V 1 ) * X (clusters admissibles alors dans V 2 ) * 1 (l'unique cluster connecté aux deux premiers choisis). On a donc bien X ms 3 triangles. Chaque arête participe à exactement s triangles : si l'arête relie, par exemple, un sommet u d'un cluster de V 1 et un sommet v d'un cluster de V 2, alors il y a exactement s sommets de V 3 réunis dans un unique cluster qui forment des triangles contenant l'arête (uv). Il faut donc enlever au minimum X ms 2 arêtes pour déconnecter tous ces triangles. A l'inverse, si on enlève toutes les arêtes reliant des sommets de V 1 et V 2, on en a enlevé strictement X ms 2 et on est sur d'avoir bien déconnecté tous les triangles. On notera ce s-blow-up B m,x,s. Il nous faut maintenant un graphe duquel B m,x,s soit loin de se projeter. On dénit, pour m, X, s xés, H m,x,s comme étant l'union disjointe de tous les sous graphes de B m,x,s ne contenant pas de triangles.23 Homomorphismes de graphes et d'hypergraphes 20 Soit ɛ > 0. On choisit m tel que m g(m) > 36ɛ, et X [m] tel que X log m 1 g(m). Par exemple, si on écrit g(m) = c/ log m, m = 36 c ɛ ɛ convient. On remarque alors que m peut dont être choisi superpolynomial 9 en 1/ɛ. On se donne alors n m. On pose s = n/6m. Il faut alors enlever au moins X.m.s 2 arêtes à B m,x,s pour qu'il ne contienne aucun triangle. Or X.m.s 2 m 1 g(m).m.n 2 /36m 2 m g(m) n 2 ɛn 2. Donc B m,x,s est au moins ɛ-loin de se projeter dans H m,x,s. Soit maintenant q n, et H un sous graphe de B m,x,s induit par q sommets. Alors la probabilité que H contienne un triangle est au maximum ( ) q X ms 3 3 n 3 q 3 m2 g(m) s 3 216m 3 s 3 q3 m g(m) 216m Alors pour que cette probabilité soit plus grande que 1/2 pour tout m, on doit avoir q = Ω(m 1/3 ), donc q superpolynomial en 1/ɛ. Nous pouvons tirer deux conséquences de ce résultat. Premièrement, on ne peut pas borner la complexité en requêtes d'un testeur canonique (du type "On échantillonne un sous-graphe, on cherche un homomorphisme depuis ce sous-graphe") qui prendrait à la fois G et H en entrée pour l'homomorphisme par un polynôme en 1/ɛ. On ne peut donc construire de tels testeurs qu'à H xé. La deuxième conséquence est que l'homomorphisme n'est pas ecacement testable dans le cas non dense : si on s'autorise à prendre des graphes G non denses (et qu'on change notre mesure en conséquence), il existe une famille in- nie de graphes pour laquelle la taille des échantillons nécessaires est Ω(n 1 /3) pour tester l'homomorphisme dans les graphes de cette famille. Plus précisément, si on s'autorise à prendre des graphes G dont le nombre d'arêtes est O(n 2 ɛ ), avec ɛ arbitrairement petit, et qu'on change notre mesure en conséquence, l'homomorphisme n'est plus ecacement testable. 6 Conclusion Le test de propriété pour l'homomorphisme de graphes se heurte à plusieurs dicultés. Tout d'abord, nous avons montré qu'il n'est pas envisageable d'échantillonner de manière aléatoire notre base de connaissances (1) et conservant une taille d'échantillon sublinéaire en la taille de celle-ci, bien que ce soit typiquement la plus grosse de nos données et donc le cas qui nous intéresse le plus. Ensuite, même dans le cadre de la fusion de bases de connaissances, nous avons besoin d'hypothèses fortes à la fois sur la densité de cette requête et sur l'absence de grosses cliques dans la base de données pour pouvoir espérer tester 9. i.e, si on écrit m = f(1/ɛ), pour toute fonction polynomiale g, g = o(f)24 Homomorphismes de graphes et d'hypergraphes 21 la requête. Et on ne peut pas relâcher cette hypothèse de densité, même très faiblement, sans tomber dans des complexités en requêtes superpolynomiales. Ces résultats concernants le test de la requête (que nous avons appellé le test de la propriété Hom H ) sont résumés dans la 4. Taille de l'échantillon O(1/ɛ 5 ln 1/ɛ 2 ) Valable pour G 10 9 Echantillon susant : A. and A O(1/ɛ 4 ln 1/ɛ) Valable pour G Echantillon susant : Alon et al O(1/ɛ 2 ) O(1/ɛ) Echantillon susant pour la k-coloration Echantillon minimum Alon, 2003 Modèles non denses Modèle dense Figure 4 Résultats concernant le test de Hom H En conséquence, il semble plus intéressant de se tourner vers des techniques semi-déterministes, par exemple pour indexer la base de données (décomposition en modèles fréquents, indexation des requêtes fréquentes,...). Cependant, concernant le test de propriété sur les graphes, nous n'avons pas non plus étudié la possibilité d'étudier un graphe fonction de G et H. Une question ouverte est donc de savoir si un tel graphe est testable, et si oui, avec quelle volume d'échantillonnage. Par ailleurs, nous nous sommes concentrés sur les testeurs ecaces (i.e dont la complexité en requêtes est indépendante de l'entrée) pour le test de Hom H. Une autre question ouverte est de déterminer s'il est possible de tester Hom H de manière simplement sublinéaire, et quelle taille typique d'échantillon il est alors possible d'obtenir. Références [1] Noga Alon. Testing subgraphs in large graphs. Random Struct. Algorithms, 21 :359370, October [2] Noga Alon, W. Fernandez de la Vega, Ravi Kannan, and Marek Karpinski. Random sampling and approximation of max-csps. J. Comput. Syst. Sci., 67 :212243, September [3] Noga Alon, Eldar Fischer, Michael Krivelevich, and Mario Szegedy. Ecient testing of large graphs. Combinatorica, 20 :451476, 2000.25 Homomorphismes de graphes et d'hypergraphes 22 [4] Noga Alon, Eldar Fischer, Ilan Newman, and Asaf Shapira. A combinatorial characterization of the testable graph properties : It's all about regularity. SIAM Journal on Computing, 39(1) :143167, [5] Noga Alon and Michael Krivelevich. Testing k-colorability. SIAM J. Discret. Math., 15 :211227, February [6] Noga Alon and Asaf Shapira. A characterization of the (natural) graph properties testable with one-sided error. In Proc. of FOCS 2005, pages , [7] Noga Alon and Asaf Shapira. Every monotone graph property is testable. SIAM Journal on Computing, 38(2) :505522, [8] Gunnar Andersson and Lars Engebretsen. Property testers for dense constraint satisfaction programs on nite domains. Random Struct. Algorithms, 21 :1432, August [9] Jean-françois Baget. Représenter des connaissances et raissonner avec des hypergraphes : de la projection à la dérivation sous contraintes. PhD thesis, Ecole Doctorale de Montpellier II, [10] Jean-François Baget. Homomorphismes d'hypergraphes pour la subsomption en rdf/rdfs. L'OBJET, 10(2-3) :203216, [11] F Behrend. On the sets of integers which contain no three in arithmetic progression. In Proceedings of the National Academy of Sciences 23, pages , [12] I. Ben-Eliezer, T. Kaufman, Michael Krivelevich, and Dana Ron. Comparing the strength of query types in property testing : The case of testing k-colorability. In Proceedings of the nineteenth annual ACM-SIAM symposium on Discrete algorithms, pages Society for Industrial and Applied Mathematics, [13] Jean-Hugues Bretin. website. http ://  [14] Amin Coja-Oghlan, Colin Cooper, and Alan Frieze. An ecient sparse regularity concept. SIAM Journal on Discrete Mathematics, 23(4) : , [15] Oded Goldreich. Introduction to testing graph properties. Technical Report TR10-082, Electronic Colloquim on Computational Complexity, may [16] W.T. Gowers. Lower bounds of tower type for szemerédi's uniformity lemma. Geometric And Functional Analysis, 7 :322337, [17] Pavol Hell and Jaroslav Nesetril. Graphs and Homomorphisms. Oxford Press, [18] Michel Chein et Marie-Laure Mugnier. Graph-Based Knowledge Representation : Computational Foundations of Conceptual Graphs. Advanced Information and Knowledge Processing. Springer, [19] Vojtech Rodl and Mathias Schacht. Generalizations of the removal lemma. Combinatorica, 29(4) :467501, 2009.26 Homomorphismes de graphes et d'hypergraphes 23 [20] Dana Ron. Algorithmic and analysis techniques in property testing. Found. Trends Theor. Comput. Sci., 5(2) :73205, [21] Satu Elisa Schaeer. Scalable uniform graph sampling by local computation. SIAM J. Scientic Computing, 32(5) : , [22] John F. Sowa. Conceptual graphs for a data base interface. IBM J. Res. Dev., 20 :336357, July [23] Ryan Williams. A new algorithm for optimal 2-constraint satisfaction and its implications. Theor. Comput. Sci., 348(2) :357365, 2005.27 Centre de recherche INRIA Sophia Antipolis Méditerranée 2004, route des Lucioles - BP Sophia Antipolis Cedex (France) Centre de recherche INRIA Bordeaux Sud Ouest : Domaine Universitaire - 351, cours de la Libération Talence Cedex Centre de recherche INRIA Grenoble Rhône-Alpes : 655, avenue de l Europe Montbonnot Saint-Ismier Centre de recherche INRIA Lille Nord Europe : Parc Scientifique de la Haute Borne - 40, avenue Halley Villeneuve d Ascq Centre de recherche INRIA Nancy Grand Est : LORIA, Technopôle de Nancy-Brabois - Campus scientifique 615, rue du Jardin Botanique - BP Villers-lès-Nancy Cedex Centre de recherche INRIA Paris Rocquencourt : Domaine de Voluceau - Rocquencourt - BP Le Chesnay Cedex Centre de recherche INRIA Rennes Bretagne Atlantique : IRISA, Campus universitaire de Beaulieu Rennes Cedex Centre de recherche INRIA Saclay Île-de-France : Parc Orsay Université - ZAC des Vignes : 4, rue Jacques Monod Orsay Cedex Éditeur INRIA - Domaine de Voluceau - Rocquencourt, BP Le Chesnay Cedex (France)   ISSN 










                                        



Documents pareils





Gestion d'un entrepôt



        Gestion d'un entrepôt Épreuve pratique d'algorithmique et de programmation Concours commun des écoles normales supérieures Durée de l'épreuve: 3 heures 30 minutes Juin/Juillet 2010 ATTENTION! N oubliez    

        Plus en détail 




Une extension pour RDF/RDFS utilisant des relations procédurales



        Une extension pour RDF/RDFS utilisant des relations procédurales Jean-François Baget * * INRIA Sophia-Antipolis & LIRMM(CNRS - UM2) LIRMM, 161 rue Ada, 34392 Montpellier Cedex 5 baget@lirmm.fr RÉSUMÉ.    

        Plus en détail 




kissplice, d tection de transcrits alternatifs dans les donn es RNA-seq



        kisplice, d tection de trancrit alternatif dan le donn e RNA-eq Gutavo Akio Tominaga Sacomoto, J. Kielbaa, Pavlo Antoniou, Rayan Chikhi, Raluca Uricaru, Marie-France Sagot, Pierre Peterlongo, Vincent Lacroix    

        Plus en détail 




Géraldine Guérillot. To cite this version: HAL Id: tel-00873627 https://tel.archives-ouvertes.fr/tel-00873627



        La réception des discours de développement durable et d actions de responsabilité sociale des entreprises dans les pays du Sud : le cas d un don d ordinateurs au Sénégal dans le cadre d un projet tripartite    

        Plus en détail 




UNIVERSITE SAAD DAHLAB DE BLIDA



        Chapitre 5 :. Introduction aux méthodes par séparation et évaluation Les méthodes arborescentes ( Branch and Bound Methods ) sont des méthodes exactes d'optimisation qui pratiquent une énumération intelligente    

        Plus en détail 




Exercices théoriques



        École normale supérieure 2008-2009 Département d informatique Algorithmique et Programmation TD n 9 : Programmation Linéaire Avec Solutions Exercices théoriques Rappel : Dual d un programme linéaire cf.    

        Plus en détail 




Budget Constrained Resource Allocation for Non-Deterministic Workflows on a IaaS Cloud



        Budget Constrained Resource Allocation for Non-Deterministic Workflows on a IaaS Cloud Eddy Caron, Frédéric Desprez, Adrian Muresan, Frédéric Suter To cite this version: Eddy Caron, Frédéric Desprez, Adrian    

        Plus en détail 




Protester sur le web chinois (1994-2011)



        Protester sur le web chinois (1994-2011) Séverine Arsène To cite this version: Séverine Arsène. Protester sur le web chinois (1994-2011). Le Temps des médias, 2012, pp.99-110.  HAL Id: hal-00773738    

        Plus en détail 




La voix en images : comment l évaluation objectivée par logiciel permet d optimiser la prise en charge vocale



        La voix en images : comment l évaluation objectivée par logiciel permet d optimiser la prise en charge vocale Stéphanie Perriere To cite this version: Stéphanie Perriere. La voix en images : comment l    

        Plus en détail 




COR TD 2. Exercice 1. Déterminer si les applications f i suivantes sont linéaires : x + x, y + y )



        COR TD 2 Année 21 Exercice 1. Déterminer si les applications f i suivantes sont linéaires : f 1 : R 2 R 2 f 1 x, y = 2x + y, x y f 2 : R R f 2 x, y, z = xy, x, y f : R R f x, y, z = 2x + y + z, y z, x    

        Plus en détail 




Algorithmes Randomisés



        Algorithmes Randomisés Encadrant du TER : Rodolphe Giroudeau Hélène Amodéos, Benoit Lopez, Arnaud Mary, Boris Massaré 1 Table des matières 1 Premier exemple : le tri 4 2 Dénitions formelles 5 2.1 Classes    

        Plus en détail 




Placement de centres logistiques



        Master 1 - Spécialité Androide Année 2014/2015 Module RP Résolution de Problèmes Projet Placement de centres logistiques On considère dans ce projet la résolution du problème de placement de centres logistiques    

        Plus en détail 




RapidMiner. Data Mining. 1 Introduction. 2 Prise en main. Master Maths Finances 2010/2011. 1.1 Présentation. 1.2 Ressources



        Master Maths Finances 2010/2011 Data Mining janvier 2011 RapidMiner 1 Introduction 1.1 Présentation RapidMiner est un logiciel open source et gratuit dédié au data mining. Il contient de nombreux outils    

        Plus en détail 




Les nouvelles tours de Londres comme marqueurs des mutations d une métropole globale



        Les nouvelles tours de Londres comme marqueurs des mutations d une métropole globale Manuel Appert To cite this version: Manuel Appert. Les nouvelles tours de Londres comme marqueurs des mutations d une    

        Plus en détail 




INTRODUCTION AUX PROBLEMES COMBINATOIRES "DIFFICILES" : LE PROBLEME DU VOYAGEUR DE COMMERCE ET LE PROBLEME DE COLORATION D'UN GRAPHE



        Leçon 10 INTRODUCTION AUX PROBLEMES COMBINATOIRES "DIFFICILES" : LE PROBLEME DU VOYAGEUR DE COMMERCE ET LE PROBLEME DE COLORATION D'UN GRAPHE Dans cette leçon, nous présentons deux problèmes très célèbres,    

        Plus en détail 




Ihsane Tou. Adaptation de la couche transport des systèmes de communication hybrides satellite/terrestre



        Adaptation de la couche transport des systèmes de communication hybrides satellite/terrestre Ihsane Tou To cite this version: Ihsane Tou. Adaptation de la couche transport des systèmes de communication    

        Plus en détail 




Les associations d usagers dans le domaine de la périnatalité : un engagement fondé sur la connaissance?



        Les associations d usagers dans le domaine de la périnatalité : un engagement fondé sur la connaissance? Madeleine Akrich, Maire Leane, Celia Roberts To cite this version: Madeleine Akrich, Maire Leane,    

        Plus en détail 




chapitre 4 Nombres de Catalan



        chapitre 4 Nombres de Catalan I Dénitions Dénition 1 La suite de Catalan (C n ) n est la suite dénie par C 0 = 1 et, pour tout n N, C n+1 = C k C n k. Exemple 2 On trouve rapidement C 0 = 1, C 1 = 1, C    

        Plus en détail 




Evaluation et prise en charge des processus de récupération en mémoire dans la maladie d Alzheimer



        Evaluation et prise en charge des processus de récupération en mémoire dans la maladie d Alzheimer Benjamin Boller To cite this version: Benjamin Boller. Evaluation et prise en charge des processus de    

        Plus en détail 




Problème: si les tableaux que l'on trie sont déjà à peu près triés, l'algorithme n'est pas efficace.



        Traonmilin Yann traonmil@enst.fr MOD Algorithmique Probabiliste 1. Deux exemples 1.1. Quicksort randomisé. Dans l'algorithme de tri classique Quicksort, le pivot est choisi au début du tableau puis on    

        Plus en détail 




Rôle du complexe protéique NPHP1/NPHP4/RPGRIP1L impliqué dans la



        Rôle du complexe protéique NPHP1/NPHP4/RPGRIP1L impliqué dans la néphronophtise et les ciliopathies associées, dans la morphogenèse épithéliale, la polarité cellulaire et la ciliogenèse Helori-Mael Gaudé    

        Plus en détail 




THÈSE DE DOCTORAT. soutenue le 27/09/2013. par. Marc LETOURNEL APPROCHES DUALES DANS LA RESOLUTION DE PROBLEMES STOCHASTIQUES



        UNIVERSITE PARIS-SUD ÉCOLE DOCTORALE : Laboratoire de Recherche en Informatique. DISCIPLINE Graphes Combinatoires. THÈSE DE DOCTORAT soutenue le 27/09/2013 par Marc LETOURNEL APPROCHES DUALES DANS LA RESOLUTION    

        Plus en détail 




Choix méthodologiques pour une analyse de conversation en situation de jeux vidéo



        Choix méthodologiques pour une analyse de conversation en situation de jeux vidéo Isabel Colón de Carvajal To cite this version: Isabel Colón de Carvajal. Choix méthodologiques pour une analyse de conversation    

        Plus en détail 




à jour dynamique de Modèles de Markov Cachés : Application dans l Aide à la Décision pour Maintenance Préventive Industrielle



        Mise à jour dynamique de Modèles de Markov Cachés : Application dans l Aide à la Décision pour une Maintenance Préventive Industrielle Bernard Roblès, Manuel Avila, Florent Duculty, Pascal Vrignat, Stéphane    

        Plus en détail 




Pour une sociologie du réalisme politique : Le cas du Parti socialiste



        Pour une sociologie du réalisme politique : Le cas du Parti socialiste Pierre-Alexis Tchernoïvanoff To cite this version: Pierre-Alexis Tchernoïvanoff. Pour une sociologie du réalisme politique : Le cas    

        Plus en détail 




La dentinogénèse imparfaite, diagnostic et prise en charge



        La dentinogénèse imparfaite, diagnostic et prise en charge Marielle Calvez To cite this version: Marielle Calvez. La dentinogénèse imparfaite, diagnostic et prise en charge. Other [q-bio.ot]. 2013.     

        Plus en détail 




Camille Istin. Contribution à l étude du registre des délibérations de la Société libre des pharmaciens. Seine-Inférieure (1815-1830)



        Contribution à l étude du registre des délibérations de la Société libre des pharmaciens de Rouen et de Seine-Inférieure (1815-1830) Camille Istin To cite this version: Camille Istin. Contribution à l    

        Plus en détail 




Aspects psycho-sociaux des interruptions volontaires de grossesse chez les mineures



        Aspects psycho-sociaux des interruptions volontaires de grossesse chez les mineures Aude Le Borgne To cite this version: Aude Le Borgne. Aspects psycho-sociaux des interruptions volontaires de grossesse    

        Plus en détail 




Monitoring SIP traffic using Support Vector Machines



        Monitoring SIP traffic using Support Vector Machines Mohamed Nassar, Radu State, Olivier Festor To cite this version: Mohamed Nassar, Radu State, Olivier Festor. Monitoring SIP traffic using Support Vector    

        Plus en détail 




Ordonnancement. N: nains de jardin. X: peinture extérieure. E: électricité T: toit. M: murs. F: fondations CHAPTER 1



        CHAPTER 1 Ordonnancement 1.1. Étude de cas Ordonnancement de tâches avec contraintes de précédences 1.1.1. Exemple : construction d'une maison. Exercice. On veut construire une maison, ce qui consiste    

        Plus en détail 




Algorithmique des graphes quelques notes de cours. Ioan Todinca, avec le concours de Julien Tesson



        Algorithmique des graphes quelques notes de cours Ioan Todinca, avec le concours de Julien Tesson 29 avril 2008 2 Table des matières I Algorithmes de base 5 1 Généralités 7 1.1 Dénitions et notations...............................    

        Plus en détail 




Delphine Graniou. To cite this version: HAL Id: dumas-00836052 http://dumas.ccsd.cnrs.fr/dumas-00836052



        Le point de vue des femmes sur la mise en place d un dépistage national organisé du cancer du col de l utérus. Étude qualitative auprès de femmes de Haute-Normandie Delphine Graniou To cite this version:    

        Plus en détail 




Diagrammes de décisions binaires



        Diagrammes de décisions binaires Épreuve pratique d'algorithmique et de programmation Concours commun des écoles normales supérieures Durée de l'épreuve: 3 heures 30 minutes Juillet 2009 ATTENTION! N oubliez    

        Plus en détail 




M2 MPRO. Optimisation dans les Graphes 2014-2015



        M2 MPRO Optimisation dans les Graphes 2014-2015 Programmation linéaire et problèmes d'optimisation dans les graphes 1 Problèmes d'optimisation dans les graphes : quelles méthodes pour les résoudre? Théorie    

        Plus en détail 




Résultats à long terme de la photo-kératectomie thérapeutique dans les dystrophies cornéennes



        Résultats à long terme de la photo-kératectomie thérapeutique dans les dystrophies cornéennes épithéliales Badreddine Chanaoui To cite this version: Badreddine Chanaoui. Résultats à long terme de la photo-kératectomie    

        Plus en détail 




Cours 02 : Problème général de la programmation linéaire



        Cours 02 : Problème général de la programmation linéaire Cours 02 : Problème général de la Programmation Linéaire. 5 . Introduction Un programme linéaire s'écrit sous la forme suivante. MinZ(ou maxw) =    

        Plus en détail 




Support du cours de Probabilités IUT d Orléans, Département d informatique



        Support du cours de Probabilités IUT d Orléans, Département d informatique Pierre Andreoletti IUT d Orléans Laboratoire MAPMO (Bât. de Mathématiques UFR Sciences) - Bureau 126 email: pierre.andreoletti@univ-orleans.fr    

        Plus en détail 




Applications linéaires



        Applications linéaires I) Applications linéaires - Généralités 1.1) Introduction L'idée d'application linéaire est intimement liée à celle d'espace vectoriel. Elle traduit la stabilité par combinaison    

        Plus en détail 




Conception d un convertisseur de puissance pour véhicules électriques multi-sources



        Conception d un convertisseur de puissance pour véhicules électriques multi-sources Ahmed Boucherit To cite this version: Ahmed Boucherit. Conception d un convertisseur de puissance pour véhicules électriques    

        Plus en détail 




Système de diffusion d information pour encourager les PME-PMI à améliorer leurs performances environnementales



        Système de diffusion d information pour encourager les PME-PMI à améliorer leurs performances environnementales Natacha Gondran To cite this version: Natacha Gondran. Système de diffusion d information    

        Plus en détail 




Savoir nager, une richesse culturelle : Analyse comparative de l enseignement de la natation à Canton, Dakar et Paris



        Savoir nager, une richesse culturelle : Analyse comparative de l enseignement de la natation à Canton, Dakar et Paris Valérie Schwob To cite this version: Valérie Schwob. Savoir nager, une richesse culturelle    

        Plus en détail 




1 Codes linéaires. G = [I k A]. Dans ce cas on constate que la matrice. H = [ t A I n k ] est une matrice de contrôle de C. Le syndrome de x F n q



        1 Codes linéaires Un code de longueur n est une partie de F n q. Un code linéaire C de longueur n sur le corps ni F q est un sous-espace vectoriel de F n q. Par défaut, un code sera supposé linéaire. La    

        Plus en détail 




Gestion et valorisation d un stockage à air comprimé adiabatique intégré dans un réseau électrique



        Gestion et valorisation d un stockage à air comprimé adiabatique intégré dans un réseau électrique Benoit Robyns, Thang Do Minh, Merdassi Asma To cite this version: Benoit Robyns, Thang Do Minh, Merdassi    

        Plus en détail 




Énergie d interaction coulombienne mutuelle d un système de deux ellipsoïdes uniformément chargés admettant un axe de symétrie global



        Énergie d interaction coulombienne mutuelle d un système de deux ellipsoïdes uniformément chargés admettant un axe de symétrie global Ph. Quentin To cite this version: Ph. Quentin. Énergie d interaction    

        Plus en détail 




Sorthong Banjongsawat. To cite this version: HAL Id: tel-00771422 https://tel.archives-ouvertes.fr/tel-00771422



        La Thaïlande, pays aux deux visages : Approches sémiologiques d une identité culturelle ambiguë à travers le miroir de la presse et autres discours publics Sorthong Banjongsawat To cite this version: Sorthong    

        Plus en détail 




Tutorat 3 de Mathématiques (2ème année)



        Tutorat 3 de Mathématiques (2ème année) Marches aléatoires et marchés financiers Groupe 4 tuteur : J. Bouttier 8 février 2010 Résumé Depuis la thèse de Bachelier, les marchés nanciers ont constitué un    

        Plus en détail 




Principe de symétrisation pour la construction d un test adaptatif



        Principe de symétrisation pour la construction d un test adaptatif Cécile Durot 1 & Yves Rozenholc 2 1 UFR SEGMI, Université Paris Ouest Nanterre La Défense, France, cecile.durot@gmail.com 2 Université    

        Plus en détail 




LE PROBLEME DU PLUS COURT CHEMIN



        LE PROBLEME DU PLUS COURT CHEMIN Dans cette leçon nous définissons le modèle de plus court chemin, présentons des exemples d'application et proposons un algorithme de résolution dans le cas où les longueurs    

        Plus en détail 




Chapitre 4. Fondements économiques de la demande d'assurance



        Chapitre 4. Fondements économiques de la demande d'assurance Laurent Denant Boemont octobre 2008 Chapitre 4. Fondements économiques de la demande d'assurance 2 J. Hamburg (2005) Along came Polly 1 Introduction    

        Plus en détail 




CH.8 Décidabilité. Propriétés des langages récursifs : Fermés par complémentation, union et intersection. oui. non. oui M 1. non. oui M 2.



        CH.8 Décidabilité 8.1 Les langages récursifs 8.2 La machine de Turing universelle 8.3 Des problèmes de langages indécidables 8.4 D'autres problèmes indécidables Automates ch8 1 8.1 Les langages récursifs    

        Plus en détail 




La socialisation par les sports collectifs : une approche conative auprès des enseignants d éducation physique et sportive



        La socialisation par les sports collectifs : une approche conative auprès des enseignants d éducation physique et sportive Guy Verschave To cite this version: Guy Verschave. La socialisation par les sports    

        Plus en détail 




Étude rétrospective sur l efficacité et la tolérance de l ivermectine per os chez 27 nourrissons atteints de gale récalcitrante



        Étude rétrospective sur l efficacité et la tolérance de l ivermectine per os chez 27 nourrissons atteints de gale récalcitrante Céline Bécourt To cite this version: Céline Bécourt. Étude rétrospective    

        Plus en détail 




Inter'Action 2014 : Jeux de Nim sur les graphes.



        Qu'est-ce qu'un jeu combinatoire 9 mai 204 Qu'est-ce qu'un jeu combinatoire 2 Le jeu de Nim : un exemple de partie. Le jeu de Nim : Deux joueurs : Plusieurs piles de jetons. On retire alternativement autant    

        Plus en détail 




La structure de la révolution numérique : philosophie de la technologie



        La structure de la révolution numérique : philosophie de la technologie Stéphane Vial To cite this version: Stéphane Vial. La structure de la révolution numérique : philosophie de la technologie. Philosophy.    

        Plus en détail 




Jeffrey S. Rosenthal



        Les marches aléatoires et les algorithmes MCMC Jeffrey S. Rosenthal University of Toronto jeff@math.toronto.edu http ://probability.ca/jeff/ (CRM, Montréal, Jan 12, 2007) Un processus stochastique Qu est-ce    

        Plus en détail 




Autour des nombres pseudo-aléatoires



        Lycée Chaptal PCSI-PC* Informatique générale pour l ingénieur Autour des nombres pseudo-aléatoires Introduction Produire des suites de nombres aléatoires est une nécessité dans de nombreux domaines de    

        Plus en détail 




ALGORITHMIQUE II NOTION DE COMPLEXITE. SMI AlgoII



        ALGORITHMIQUE II NOTION DE COMPLEXITE 1 2 Comment choisir entre différents algorithmes pour résoudre un même problème? Plusieurs critères de choix : Exactitude Simplicité Efficacité (but de ce chapitre)    

        Plus en détail 




Filtrage stochastique non linéaire par la théorie de représentation des martingales



        Filtrage stochastique non linéaire par la théorie de représentation des martingales Adriana Climescu-Haulica Laboratoire de Modélisation et Calcul Institut d Informatique et Mathématiques Appliquées de    

        Plus en détail 




Articuler les politiques de GRH et les stratégies d Innovation : Proposition d un modèle



        Articuler les politiques de GRH et les stratégies d Innovation : Proposition d un modèle C. Defelix, I. Mazzilli, Alain Gosselin To cite this version: C. Defelix, I. Mazzilli, Alain Gosselin. Articuler    

        Plus en détail 




Benjamin Dubourg. To cite this version: HAL Id: dumas-00872263 http://dumas.ccsd.cnrs.fr/dumas-00872263



        Scanner double énergie et réduction de la dose d iode lors de l exploration des axes aorto-ilio-femoraux avant remplacement valvulaire aortique par voie percutanée Benjamin Dubourg To cite this version:    

        Plus en détail 




Optimisation de la structure électromagnétique d une machine spéciale fort couple.



        Optimisation de la structure électromagnétique d une machine spéciale fort couple. Luc Moreau, Mohamed El Hadi ZAÏM To cite this version: Luc Moreau, Mohamed El Hadi ZAÏM. Optimisation de la structure    

        Plus en détail 




Le polycopié de cours, les notes manuscrites, et les calculatrices sont autorisés.



        Université d Orléans Deug MASS, MIAS et SM Unité MA. Probabilités et Graphes Examen partiel du 5 décembre durée: h Le polycopié de cours, les notes manuscrites, et les calculatrices sont autorisés. Le    

        Plus en détail 








        TD 2 Exercice 1. Un bûcheron a 100 hectares de bois de feuillus. Couper un hectare de bois et laisser la zone se régénérer naturellement coûte 10 kf par hectares, et rapporte 50 kf. Alternativement, couper    

        Plus en détail 




TS. 2012/2013. Lycée Prévert. Corrigé du contrôle n 3. Durée : 3 heures. Mardi 20/11/12



        TS. 01/013. Lycée Prévert. Corrigé du contrôle n 3. Durée : 3 heures. Mardi 0/11/1 Exercice 1 : ( 6,5 pts) Première partie : Démonstration à rédiger { Démontrer que si ( ) et (v n ) sont deux suites telles    

        Plus en détail 




Souad EL Bernoussi. Groupe d Analyse Numérique et Optimisation Rabat http ://www.fsr.ac.ma/ano/



        Recherche opérationnelle Les démonstrations et les exemples seront traités en cours Souad EL Bernoussi Groupe d Analyse Numérique et Optimisation Rabat http ://www.fsr.ac.ma/ano/ Table des matières 1 Programmation    

        Plus en détail 




est diagonale si tous ses coefficients en dehors de la diagonale sont nuls.



        Diagonalisation des matrices http://www.math-info.univ-paris5.fr/~ycart/mc2/node2.html Sous-sections Matrices diagonales Valeurs propres et vecteurs propres Polynôme caractéristique Exemples Illustration    

        Plus en détail 




Calcul rapide des puissances



        Calcul rapide des puissances Par Mathtous Il s'agit de puissances à exposant entier naturel (avec la convention a 0 = 1, et a 1 = a). Si on applique la dénition pour calculer a n, on calcule de proche    

        Plus en détail 




Couples de variables aléatoires discrètes



        Couples de variables aléatoires discrètes ECE Lycée Carnot mai Dans ce dernier chapitre de probabilités de l'année, nous allons introduire l'étude de couples de variables aléatoires, c'est-à-dire l'étude    

        Plus en détail 




Sélection de variables groupées avec les forêts aléatoires. Application à l analyse des données fonctionnelles multivariées.



        Sélection de variables groupées avec les forêts aléatoires. Application à l analyse des données fonctionnelles multivariées. Baptiste Gregorutti 12, Bertrand Michel 2 & Philippe Saint Pierre 2 1 Safety    

        Plus en détail 




LE PROBLEME DU FLOT MAXIMAL



        LE PROBLEME DU FLOT MAXIMAL I Exemple d introduction Deux châteaux d'eau alimentent 3 villes à travers un réseau de canalisations au sein duquel se trouvent également des stations de pompage. Les châteaux    

        Plus en détail 




Elaborer un curriculum de formation et en assurer la



        Elaborer un curriculum de formation et en assurer la qualité Marc Demeuse To cite this version: Marc Demeuse. Elaborer un curriculum de formation et en assurer la qualité. Florence Parent & Jean Jouquan.    

        Plus en détail 




Estimation consistante des paramètres d un. modèle non linéaire pour des données. fonctionnelles discrétisées aléatoirement



    
        var fcb = document.getElementById('footer_height_for_cookie_msg');
        if (fcb) { fcb.parentElement.removeChild(fcb); }
    }
    
    })();



