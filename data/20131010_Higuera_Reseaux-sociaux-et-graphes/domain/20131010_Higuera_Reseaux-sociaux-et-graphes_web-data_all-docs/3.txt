http://algo.developpez.com/actu/94396/Un-algorithme-quasipolynomial-pour-l-isomorphisme-de-graphes-la-contribution-de-Laszlo-Babai-fait-grand-bruit-en-informatique-theorique/




Un algorithme quasipolynomial pour l'isomorphisme de graphes, la contribution de László Babai fait grand bruit en informatique théorique



















		var googletag = googletag || {};
		googletag.cmd = googletag.cmd || [];
	






			p.find("div:eq(0)").html(o);
			$("#loginFormMsg").empty().hide();
		}
	} else
}

























Forums
Tutoriels
Magazine
FAQs
Blogs
Chat
Newsletter
Études
Emploi
Club
Contacts













Developpez.com
Débuter - Algorithmique


  Rubrique Débuter - Algorithmique  
  Forum Débuter - Algorithmique  


  Accueil
  Forums
  Rubriques




Choisissez la catégorie, puis la rubrique :


Accueil


ALM



  ALM
							



  Merise
								



  UML
								




Java



  Java
							



  Java Web
								



  Spring
								



  Android
								



  Eclipse
								



  NetBeans
								




.NET



  Microsoft DotNET
							



  Visual Studio
								



  ASP.NET
								



  C#
								



  VB.NET
								



  Windows Phone
								



  Microsoft Azure
								




Dév. Web



  Développement Web
							



  AJAX
								



  Apache
								



  ASP
								



  CSS
								



  Dart
								



  Flash / Flex
								



  JavaScript
								



  NodeJS
								



  PHP
								



  Ruby & Rails
								



  TypeScript
								



  Web sémantique
								



  Webmarketing
								



  (X)HTML
								




EDI



  EDI
							



  4D
								



  Delphi
								



  Eclipse
								



  LabVIEW
								



  NetBeans
								



  MATLAB
								



  Scilab
								



  Visual Studio
								



  WinDev
								



  Visual Basic 6
								



  Lazarus
								



  Qt Creator
								




Programmation



  Programmation
							



  Débuter - Algorithmique
								



  2D - 3D - Jeux
								



  Assembleur
								



  C
								



  C++
								



  Go
								



  Objective C
								



  Pascal
								



  Perl
								



  Python
								



  Rust
								



  Swift
								



  Qt
								



  XML
								



  Autres
								




SGBD



  SGBD & SQL
							



  4D
								



  Access
								



  Big Data
								



  DB2
								



  Firebird
								



  InterBase
								



  MySQL
								



  NoSQL
								



  PostgreSQL
								



  Oracle
								



  Sybase
								



  SQL-Server
								




Office



  Microsoft Office
							



  Access
								



  Excel
								



  Word
								



  Outlook
								



  PowerPoint
								



  SharePoint
								



  Microsoft Project
								



  OpenOffice & LibreOffice
								




Solutions d'entreprise



  Solutions d'entreprise
							



  Big Data
								



  BPM
								



  Business Intelligence
								



  ERP / PGI
								



  CRM
								



  SAS
								



  Cloud Computing
								



  SAP
								



  Microsoft BizTalk Server
								



  Talend
								



  IBM Cloud
								




Applications



  Applications
							



  Libres & Open Source
								



  OpenOffice & LibreOffice
								



  Projets
								




Mobiles



  Mobiles
							



  Android
								



  iOS
								



  Windows Phone
								




Systèmes



  Systèmes
							



  Windows
								



  Linux
								



  Sécurité
								



  Hardware
								



  HPC
								



  Mac
								



  Raspberry Pi
								



  Réseau
								



  Green IT
								



  Systèmes Embarqués
								



  Virtualisation
								






AccueilActualités IT Pro

ALMCycle de vie du logiciel

ALM
Merise
UML

JavaPlateforme et langage Java

Java
Java Web
Spring
Android
Eclipse
NetBeans

.NETMicrosoft Framework .NET

Microsoft DotNET
Visual Studio
ASP.NET
C#
VB.NET
Windows Phone
Microsoft Azure

Dév. WebDéveloppement Web et Webmarketing

Développement Web
AJAX
Apache
ASP
CSS
Dart
Flash / Flex
JavaScript
NodeJS
PHP
Ruby & Rails
TypeScript
Web sémantique
Webmarketing
(X)HTML

EDIEnvironnements de Développement Intégré

EDI
4D
Delphi
Eclipse
LabVIEW
NetBeans
MATLAB
Scilab
Visual Studio
WinDev
Visual Basic 6
Lazarus
Qt Creator

ProgrammationProgrammation et langages de programmation applicatifs

Programmation
Débuter - Algorithmique
2D - 3D - Jeux
Assembleur
C
C++
Go
Objective C
Pascal
Perl
Python
Rust
Swift
Qt
XML
Autres

SGBDSystèmes de Gestion de Bases de Données

SGBD & SQL
4D
Access
Big Data
DB2
Firebird
InterBase
MySQL
NoSQL
PostgreSQL
Oracle
Sybase
SQL-Server

OfficeBureautique pour l'entreprise

Microsoft Office
Access
Excel
Word
Outlook
PowerPoint
SharePoint
Microsoft Project
OpenOffice & LibreOffice

Solutions d'entrepriseAutres logiciels pour l'entreprise

Solutions d'entreprise
Big Data
BPM
Business Intelligence
ERP / PGI
CRM
SAS
Cloud Computing
SAP
Microsoft BizTalk Server
Talend
IBM Cloud

ApplicationsApplications logicielles

Applications
Libres & Open Source
OpenOffice & LibreOffice
Projets

MobilesLogiciels et matériels mobiles

Mobiles
Android
iOS
Windows Phone

SystèmesLogiciels et matériels systèmes

Systèmes
Windows
Linux
Sécurité
Hardware
HPC
Mac
Raspberry Pi
Réseau
Green IT
Systèmes Embarqués
Virtualisation



Programmation
Algorithmique
2D-3D-Jeux
Assembleur
C
C++
Go
Objective C
Pascal
Perl
Python
Rust
Swift
Qt
XML
Autres




ACCUEIL ALGO
COURS ALGO
FAQ ALGO
FORUM ALGO
LIVRES ALGO
SOURCES ALGO










}(document, 'script', 'facebook-jssdk'));


.cms_table, .cms_table table{
	border-collapse: collapse;
}
.cms_table td{
	border: 1px solid #ECE0E3;
}

.cms_table tr:first-child{
	background-color: #EBEFF2;
}

table.cms_table td{
	vertical-align: middle;
}

.cms_table_grid{
	margin:15px;
}

.cms_table tr:first-child td{
	text-align: center;
}

.bbcode_quote{
	border: dashed 1px #aaa;
	padding: 3px;
	margin: 0 0 10px 10px;
}
.bbcode_code{
	border: inset 1px #999;
	height: auto !important;
	max-height: 300px;
	max-width: 700px;
	padding: 5px;
	background-color: #F2F6F8;
	margin:2px;
	margin-left: 20px;
}

.alt2{
	max-width: 700px;
}

ol.decimal > li{list-style:decimal outside}
ol.upper-roman > li{list-style:upper-roman outside}
ol.lower-roman > li{list-style:lower-roman outside}
ol.upper-alpha > li{list-style:upper-alpha outside}
ol.lower-alpha > li{list-style:lower-alpha outside}



	return false;
}


#actu a, .postMessage a, .postMessage a:visited, .postUser a{
	color: #3788b6;
	text-decoration: underline;
}

#actu ul, .postMessage ul{
	margin-bottom: 10px;
	margin-top: 10px;
}

.postUser{
	border-color:#e1e1e1;
	border-style: solid;
	border-width: 1px;
	font-size:9pt;
	padding:5px !important;
	background-image:url("/template/kit/kitlivrebg.gif");
	background-position:left top;
	background-repeat:repeat;
	font-family:Arial;
}

.postMessage{
	padding: 10px 5px !important;
	font-size: 9pt;
	font-family: Arial;
	border: 1px solid #ddd;
}

.postMessage img{
	max-width: 600px;
}

.postComment{
	color:#222;
	margin:5px 0 5px 0;
}

.posterAvatar{
	float: left;
	margin:0 5px 0 0;
	padding:3px;
	height: 40px;
	border: 1px solid rgb(204,204,204);
	border-radius:3px;
	background-color:#fff !important;
}

.postUser .date {
    color: #777;
    font-family: Arial;
    font-size: 8pt;
    margin: 10px;
    padding-left: 10px;
}










Un algorithme quasipolynomial pour l'isomorphisme de graphes
La contribution de László Babai fait grand bruit en informatique théorique

Le 31 décembre 2015, par dourouc05, Responsable Qt & Livres

								La théorie de la complexité, en informatique, classifie les problèmes selon leur difficulté intrinsèque, cest-à-dire selon la complexité en temps de lalgorithme le plus efficace pour les résoudre. Par exemple, pour trier un tableau, il existe une multitude dalgorithmes  : le tri par insertion, le tri par fusion, le tri par tas ou encore, le  plus célèbre, le tri rapide. Les plus efficaces ont une complexité  pseudolinéaire : pour trier  éléments, il leur faudra   opérations ; dautres algorithmes, comme le tri par insertion, ont une  complexité quadratique : le nombre dopérations évolue comme .  Les premiers algorithmes pourront trier des tableaux beaucoup plus  grands que les seconds, peu importe le langage de programmation utilisé ou la minutie dimplémentation. Classes de complexité

 En réalité, la théorie de la complexité distingue deux catégories  principales de problèmes : ceux qui acceptent une solution en un temps  polynomial (des problèmes « faciles »), comme le tri, la recherche de plus court chemin, la multiplication matricielle (ils forment lensemble  ), puis ceux pour lesquels aucun algorithme polynomial nest connu, comme le voyageur de commerce ou lanalyse de formules en logique (). Une contrainte supplémentaire pour être dans   est quil soit possible de vérifier si une réponse est acceptable en un  temps polynomial : pour le voyageur de commerce, il suffit de vérifier  que toutes les villes sont visitées. Par contre, pour trouver la solution optimale, il ny a pas de technique qui soit vraiment meilleure que dexplorer toutes les possibilités (du moins, dun point de vue  théorique : il reste possible de résoudre de grandes instances en des  temps raisonnables). En informatique théorique, un problème récurrent est de savoir si .  Aucune preuve na pu être avancée jusquà ce jour, malgré des dizaines  dannées dessais. Si cette égalité était vérifiée, il deviendrait  possible de résoudre tous ces problèmes « difficiles » en un temps  polynomial  ce qui pourrait changer la face du monde. Rares sont ceux,  cependant, qui croient que ces deux classes coïncident : si tel était le cas, on aurait déjà trouvé un algorithme polynomial pour ces problèmes.  Isomorphisme de graphe

Il existe également des problèmes dont on ne sait pas encore sils sont dans  ou , comme lisomorphisme de graphes. Il sagit de déterminer si deux graphes ont la même structure (ils sont alors dits isomorphes),  cest-à-dire si leurs points peuvent correspondre entre eux tout en  gardant les liens entre ces points. (Par exemple, les relations  d'« amitié » dans un réseau social comme Facebook peuvent être  représentées avec des points pour les individus et des liens pour ceux  qui se sont déclarés « amis ».)Les applications de ces isomorphismes sont nombreuses, telle la  reconnaissance de lunicité dun visiteur sur un site Web de par son  comportement ou lidentification de régions pour implanter des  infrastructures lors dune réflexion urbanistique. Un bon nombre de ces applications est  cependant de haut vol, comme pour loptimisation du code dans un  compilateur ou, en informatique théorique, la vérification de  programmes, notamment dans des contextes parallèles, ou légalité de  langages reconnus par des automates.Lavancée de László Babai

 Récemment, László Babai a prouvé quil existait un algorithme de  complexité quasipolynomiale pour résoudre ce problème disomorphisme,  cest-à-dire quil nécessite un nombre dopérations  (le cas où  étant polynomial), par rapport à  précédemment. Même si lavancée semble faible, ce résultat montre que lisomorphisme a une classe de complexité inférieure à  (mais nest pas forcément dans ). Toutefois, cet algorithme et les détails de la preuve ne sont pas très accessibles, exploitant la théorie des groupes et les automorphismes de mots. De plus, ce résultat naura pas beaucoup dimplications pratiques : ceux qui en ont besoin peuvent résoudre des  isomorphismes suffisamment rapidement pour leurs besoins. Certes, ce  nouvel algorithme a des garanties théoriques, mais il na pas encore  fait ses preuves en pratique pour les cas les plus utilisés. 


 
Et alors ?

 László Babai a reçu le prix Knuth cette année, décerné par lACM, pour ses « contributions fondamentales dans les  domaines de la conception dalgorithmes et danalyse de la complexité ».  Le résultat obtenu pour les isomorphismes de graphes est important pour plusieurs raisons, principalement théoriques. Notamment, le lien entre propriétés des groupes et des graphes (les principes sous-jacents pourraient mener rapidement à dautres résultats du même genre en théorie de la complexité, peut-être même pour donner un algorithme polynomial pour les isomorphismes de graphes). Il faut aussi remarquer que la preuve na pas encore été publiée dans une revue avec comité de relecture, mais sur arXiv. Ce résultat a donc principalement des vertus théoriques. Il pourrait  aussi, en pratique, éliminer les parties aléatoires des heuristiques  utilisées pour résoudre ces isomorphismes pour nutiliser que des  algorithmes plus classiques dans leur manière de fonctionner ; lavantage serait alors une bien meilleure prédictibilité des résultats.  Il pourrait aussi questionner les pratiques actuelles en cryptographie, en abaissant la classe de complexité du problème de factorisation des  nombres entiers. Voir aussi larticle de László Babai. 
 Sources : Comparaison de graphes, what are the applications of the isomorphic graphs?, A Big Result On Graph Isomorphism.
Ce contenu a été publié dans Informatique théorique par dourouc05.			


			Vous avez aimé cette actualité ? Alors partagez-la avec vos amis en cliquant sur les boutons ci-dessous :
						












Une erreur dans cette actualité ? Signalez-le nous !

Votre nom : 
Votre e-mail : 
Votre message : 




  })();



 Discussion forum


Sur le même sujet




29/02 - Google développe un algorithme qui peut dire avec précision où vos photos ont été prises, PlaNet n'utilise que très peu de mémoire RAM








Offres d'emploi IT Développeur Android senior / Incubateur Groupe de premier plan (H/F)&rdsh; ALTAIDE - Ile de France - Boulogne-Billancourt (92100)Voir plus d'offresDéveloppeur asp.net confirme (H/F)&rdsh; Fédération Nationale des Chasseurs - France - 92130Voir plus d'offresData Ingénieur F/H&rdsh; Zenika - Nord Pas-de-Calais - Lille (59000)Voir plus d'offres 

  _gaq.push(['_setDomainName', 'developpez.com']);
  _gaq.push(['_setCustomVar', 1, 'rubrique', 'debuter---algorithmique', 3]);
  _gaq.push(['_setCustomVar', 2, 'type', 'News', 3]);
  _gaq.push(['_trackPageview']);

  })();



				var expDate = new Date();
				expDate.setTime(expDate.getTime() + (395 * 24 * 3600 * 1000));
				document.cookie = "cnilcookie=1;expires=" + expDate.toGMTString() + ";domain=.developpez.com;path=/";
			});
		}
	});
	


