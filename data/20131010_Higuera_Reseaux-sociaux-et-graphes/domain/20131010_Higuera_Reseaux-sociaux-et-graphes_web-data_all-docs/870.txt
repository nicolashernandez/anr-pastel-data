http://www.theses.fr/s131302




















 













 theses.fr – Chems eddine Nabti , Subgraph Isomorphism Search In Massive Graph Data
























                    //console.log(isbn);
                    //console.log(lng);
                    $.ajax({
                        url:"/Recherche?chasseAuxLivres="+isbn+"&lng="+lng,
                        async:true,
                    });
                });
            }
        




 Connexion 
















Toutes les thèses
Thèses en préparation

Personnes
Organismes



Désactiver l'autocomplétion
Activer l'autocomplétion 














        });

        $('#q').clearableTextField(); //$('input[type=text]').clearableTextField();
        
        if ($('#q').val()!="") trigger($('#q'));
        var cookieq = readCookie("q");
        //alert('cookieq : '+cookieq);
        $('#q').val(cookieq);
        if ($('#q').val()=="null") $('#q').val("");
        $( "#q" ).autocomplete({
                        source: '/Recherche?autoc=true'
                else {
                    $("div[rel]").overlay(
                        {
                                mask:
                                {
                                color: '#000',
                                        loadSpeed: 200,
                                        opacity: 0.8
                                }
                        });
                }
		
		// Script spécifique pour ouvrir Consulter en bibliothèque dans l'overlay Acheter
		
   				}
    		});
    		e.preventDefault();
		});
		
		// Script spécifique pour ouvrir Acheter la thèse dans l'overlay Consulter
		
   				}
    		});
    		e.preventDefault();
		});

    });//fin ready


  //alert(document.getElementById('access').value);
 }

  //alert(document.getElementById('status').value);
}

  //alert(document.getElementById('access').value);

 }


}








SIGNALER une erreur 


EXPORTER les infos


format RIS
format BibTeX
format XML



var addthis_config = {
      ui_language: "fr" 
} 












thèse précédente
thèse suivante


Subgraph Isomorphism Search In Massive Graph Data
par  Chems eddine Nabti


 Thèse de doctorat en Informatique



Sous la direction de 
Hamida Seba Lagraa.



Soutenue le 15-12-2017
à Lyon
, dans le cadre de  
École Doctorale d'Informatique et Mathématiques (Lyon)
, en partenariat avec 
Université Claude Bernard (Lyon)
  (établissement opérateur d'inscription) 
 et de 
LIRIS - Laboratoire d'Informatique en Image et Systèmes d'information (Lyon, Rhône)
  (laboratoire) 
.
    

Le président du jury était 
Alexandre Termier. 

Les rapporteurs étaient 
Ludovic Liétard, 
Lynda Tamine-Lechani. 




Description en français
Description en anglais




 mots clés

 

Isomorphisme de sous-graphe




 

Graphes de données massifs




 

Données massives




 

Exploration de données




 

Isomorphismes (mathématiques)




 

Explorations de graphes






Titre traduit 
Isomorphisme de Sous-Graphes dans les graphes de données massifs


Résumé
L'interrogation de graphes de données est un problème fondamental qui connait un grand intérêt, en particulier pour les données structurées massives où les graphes  constituent une alternative prometteuse aux bases de données relationnelles pour la modélisation des grandes masses de données. Cependant, l'interrogation des graphes de données est différente et plus complexe que l'interrogation des données relationnelles à base de tables. La tâche principale impliquée dans l'interrogation de graphes de données est la recherche d'isomorphisme de sous-graphes qui est un problème NP-complet.La recherche d'isomorphisme de sous-graphes est un problème très important impliqué dans divers domaines comme la reconnaissance de formes, l'analyse des réseaux sociaux, la biologie, etc. Il consiste à énumérer les sous-graphes d'un graphe de données qui correspondent à un graphe requête. Les solutions les plus connues de ce problème sont basées sur le retour arrière (backtracking). Elles explorent un grand espace de recherche, ce qui entraîne un coût de traitement élevé, notamment dans le cas de données massives.Pour réduire le temps et la complexité en espace mémoire dans la recherche d'isomorphisme de sous-graphes, nous proposons d'utiliser des graphes compressés. Dans notre approche, la recherche d'isomorphisme de sous-graphes est réalisée sur une représentation compressée des graphes sans les décompresser. La compression des graphes s'effectue en regroupant les sommets en super-sommets. Ce concept est connu dans la théorie des graphes par la décomposition modulaire. Il sert à générer une représentation en arbre d'un graphe qui met en évidence des groupes de sommets qui ont les mêmes voisins. Avec cette compression, nous obtenons une réduction substantielle de l'espace de recherche et par conséquent, une économie significative dans le temps de traitement.Nous proposons également une nouvelle représentation des sommets du graphe, qui simplifie le filtrage de l'espace de recherche. Ce nouveau mécanisme appelé compact neighborhood Index (CNI) encode l'information de voisinage autour d'un sommet en un seul entier. Cet encodage du voisinage réduit la complexité du temps de filtrage de cubique à quadratique. Ce qui est considérable pour les données massifs.Nous proposons également un algorithme de filtrage itératif qui repose sur les caractéristiques des CNIs pour assurer un élagage global de l'espace de recherche.Nous avons évalué nos approches sur plusieurs datasets et nous les avons comparées avec les algorithmes de l’état de l’art




 mots clés
 Subgraph Isomorphism Search
 Massive Graph Data





Résumé
Querying graph data is a fundamental problem that witnesses an increasing interest especially for massive structured data where graphs come as a promising alternative to relational databases for big data modeling. However, querying graph data is different and more complex than querying relational table-based data. The main task involved in querying graph data is subgraph isomorphism search which is an NP-complete problem. Subgraph isomorphism search, is an important problem which is involved in various domains such as pattern recognition, social network analysis, biology, etc. It consists to enumerate the subgraphs of a data graph that match a query graph. The most known solutions of this problem are backtracking-based. They explore a large search space which results in a high computational cost when we deal with massive graph data. To reduce time and memory space complexity of subgraph isomorphism search. We propose to use compressed graphs. In our approach, subgraph isomorphism search is achieved on compressed representations of graphs without decompressing them. Graph compression is performed by grouping vertices into super vertices. This concept is known, in graph theory, as modular decomposition. It is used to generate a tree representation of a graph that highlights groups of vertices that have the same neighbors. With this compression we obtain a substantial reduction of the search space and consequently a significant saving in the processing time. We also propose a novel encoding of vertices that simplifies the filtering of the search space. This new mechanism is called compact neighborhood Index (CNI). A CNI distills all the information around a vertex in a single integer. This simple neighborhood encoding reduces the time complexity of vertex filtering from cubic to quadratic which is considerable for big graphs. We propose also an iterative local global filtering algorithm that relies on the characteristics of CNIs to ensure a global pruning of the search space.We evaluated our approaches on several real-word datasets and compared them with the state of the art algorithms







                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                var expires = "; expires=" + date.toGMTString();
            }
            else expires = "";
            document.cookie = name + "=" + encodeURIComponent(value) + expires + "; path=/";
        }

            return null;
        }

        //Lien activer/desactiver autocompletion
            else { //sinon
                $('#autoCN').hide();
                $('#autoCO').show();
                createCookie("autoC", rep, 15);
                $( "#q" ).autocomplete({ disabled: false });                
            }
        }
                
        //Lecture cookie pour activer/desactiver autocompletion
            var rep = cookie ? cookie : "oui";
            autoC(rep);                                 
        });
      
