http://www.dptinfo.ens-cachan.fr/Visites/Bordeaux09/pdf/Bruno.pdf

 

 

 

 

Graphes,  Logique et  Algorithmes    

Bruno  Courcelle 

 

 
 

 
 

  Démonstration : théorie et aide informatique 
 

Logique :  Calculabilité  et  complexité 
 
 
 
 
 

Théorie des modèles  

   

 

Graphe   

 

 

 

 

 

Structure représentative 

      Mot                                           Structure  representative  

2 

 
 
 
 
 
 
 
 
 
 
 
 

 

Propriétés d’objets  combinatoires : 
Expression en logique du premier ordre : 
Exemple : Tout sommet  a   deux successeurs  
 
Expression en  logique  du  second-ordre  monadique : 
Avec la  construction : « il existe  un ensemble de sommets … » 

 

Exemple  :   3-colorabilité  (Propriété  “difficile”  à tester, NP-complète): 

 
∃X,Y (”X,Y  are  disjoint”  ∧  ∀u,v { edg(u,v) ⇒  
 
                    [(u ∈ X  ⇒ v ∉ X) ∧ (u ∈ Y ⇒ v ∉ Y) ∧(u ∈V-(X∪Y)  ⇒ v ∉V-(X∪Y)]} ) 

 

Non connexité : 
 
∃X ( ∃x ∈ X  ∧  ∃y ∉ X  ∧  ∀u,v (u ∈ X  ∧  edg(u,v) ⇒ v ∈ X)  ) 

3 

 

 

 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 

4 

Problèmes  algorithmiques : 
 Pour une classe de graphes finis  fixée  C :  
1)  Décidabilité logique : 

Etant une formule  ϕ , est-elle vraie pour tout graphe de C  ?  
(Espoir  de  démonstration  automatique). 

2)  Vérification : soit  une formule  ϕ  fixée : 

Peut-on vérifier efficacement (temps polynomial ou  linéaire de 
préférence )  si un graphe donné de C  vérifie cette  formule ? 
(Espoir  de  construction  automatique d’algorithmes). 

Contrastes :  Premier-ordre : “Polynomial” pour tout graphe.  
  “Linéaire”  si degré  borné fixé. 
 

 
Second-ordre monadique : « NP-complet » général ou degré <4 (3-coloriage) 

 

 

 

 

 

 

 
 

 

 

 

 

« Linéaire » pour graphe « arborescent ». 

 

 

5 

 

 
Cas des mots :  
 
Equivalence entre  « Automates finis »   

et « Second-ordre  monadique » 
 

(cid:198)  Solutions pour les deux problèmes de décision et de  
 
vérification. 

 
 

 

 
 

Extension aux graphes  « arborescents »  ou  « décrits  
 
algébriquement ». 

 

6 

 
 
 
 
 
 
 
 
 
 
 
 
 
 

 

7 

 
 
 
 
 
 
 
 
 
 
 
 
 
 

 

8 

Difficultés    

 

 
 

 

 

 

 
 
 
 
 
 
 
 
 

 
   Clique-width  3  
Cographes      
MaxDegree<3   
Space-Out 
  
91   states 
 
Degree<4(x)               48   states 
233      states  
  
 
Space-Out 
Path(x,y)in(X)              26   states             
Space-Out 
Connectedness           11   states             
IsConnComp(X)          48   states                  Space-Out 
Has<4-VertCov    
111 states 
HasClique>4               21  states 
2-colorable                  11   states 

Taille  des  automates :  Calculs  qui échouent  par manque de mémoire 
 
 
 
 
 
 
 
 
 
 
Remèdes  envisagés :  Constructions directes; «  interprétation des automates » 
plutôt que compilation. 

1037    states 
153      states 
 57       states 

 
 
 

 
 
 

 
 
 

10

Autres sujets reliés : 
 
Etiquetages pour test efficace de propriétés, 
 
Liens dans les 2 sens avec la théorie des graphes, 
 
Descriptions finies et vérifiables  de graphes infinis qui décrivent le comportement 
des programmes, 
 
Grammaires  de graphes, applications  à des  visualisations structurées. 
 
 

 

11

